(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NotFound = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _Header = require('./header/Header');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var baseStyle = require('./baseStyle.less');

var NotFound = exports.NotFound = function (_React$Component) {
  _inherits(NotFound, _React$Component);

  function NotFound() {
    _classCallCheck(this, NotFound);

    return _possibleConstructorReturn(this, (NotFound.__proto__ || Object.getPrototypeOf(NotFound)).apply(this, arguments));
  }

  _createClass(NotFound, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        'div',
        null,
        React.createElement(_Header.Header, { activePage: 'NotFound' }),
        React.createElement(
          'div',
          { className: baseStyle.content },
          React.createElement(
            'h1',
            null,
            'Not Found'
          )
        )
      );
    }
  }]);

  return NotFound;
}(React.Component);

},{"./baseStyle.less":4,"./header/Header":64,"react":"react"}],2:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.App = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var style = require('./style.less');

var App = exports.App = function (_React$Component) {
    _inherits(App, _React$Component);

    function App() {
        _classCallCheck(this, App);

        return _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).apply(this, arguments));
    }

    _createClass(App, [{
        key: 'render',
        value: function render() {
            return React.createElement(
                'div',
                { className: style.global },
                this.props.children
            );
        }
    }]);

    return App;
}(React.Component);

},{"./style.less":3,"react":"react"}],3:[function(require,module,exports){
module.exports = {}
},{}],4:[function(require,module,exports){
module.exports = {"content":"neptune_content_1ge5r","navContent":"neptune_navContent_1ge5r neptune_content_1ge5r"}
},{}],5:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Components = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _ComponentsNav = require('./ComponentsNav');

var _Header = require('./../header/Header');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var baseStyle = require('../baseStyle.less');

var Components = exports.Components = function (_React$Component) {
    _inherits(Components, _React$Component);

    function Components() {
        _classCallCheck(this, Components);

        return _possibleConstructorReturn(this, (Components.__proto__ || Object.getPrototypeOf(Components)).apply(this, arguments));
    }

    _createClass(Components, [{
        key: 'render',
        value: function render() {
            return React.createElement(
                'div',
                null,
                React.createElement(_Header.Header, { activePage: 'Components' }),
                React.createElement(_ComponentsNav.ComponentsNav, null),
                React.createElement(
                    'div',
                    { className: baseStyle.navContent },
                    this.props.children
                )
            );
        }
    }]);

    return Components;
}(React.Component);

},{"../baseStyle.less":4,"./../header/Header":64,"./ComponentsNav":6,"react":"react"}],6:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ComponentsNav = exports.ComponentRoutes = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _Nav = require('./Nav/');

var _NavGroup = require('./Nav/NavGroup');

var _NavGroupItem = require('./Nav/NavGroupItem');

var _reactRouter = require('react-router');

var _ButtonsPattern = require('./Content/Patterns/ButtonsPattern');

var _ButtonGroupPattern = require('./Content/Patterns/ButtonGroupPattern');

var _NavMenuPattern = require('./Content/Patterns/NavMenuPattern');

var _ButtonToolbarPattern = require('./Content/Patterns/ButtonToolbarPattern');

var _LinksPattern = require('./Content/Patterns/LinksPattern');

var _GridPattern = require('./Content/Patterns/GridPattern');

var _TabsPattern = require('./Content/Patterns/TabsPattern');

var _LabelPattern = require('./Content/Patterns/LabelPattern');

var _SpinnerPattern = require('./Content/Patterns/SpinnerPattern');

var _RadioPattern = require('./Content/Patterns/RadioPattern');

var _DropdownPattern = require('./Content/Patterns/DropdownPattern');

var _DropdownListPattern = require('./Content/Patterns/DropdownListPattern');

var _PagerPattern = require('./Content/Patterns/PagerPattern');

var _ModalPattern = require('./Content/Patterns/ModalPattern');

var _TextBoxPattern = require('./Content/Patterns/TextBoxPattern');

var _CheckBoxPattern = require('./Content/Patterns/CheckBoxPattern');

var _TablePattern = require('./Content/Patterns/TablePattern');

var _AdvancedTablePattern = require('./Content/Patterns/AdvancedTablePattern');

var _DateInputPattern = require('./Content/Patterns/DateInputPattern');

var _AccordionPattern = require('./Content/Patterns/AccordionPattern');

var _PanelPattern = require('./Content/Patterns/PanelPattern');

var _PanelGroupPattern = require('./Content/Patterns/PanelGroupPattern');

var _DrawersPattern = require('./Content/Patterns/DrawersPattern');

var _PopoverPattern = require('./Content/Patterns/PopoverPattern');

var _TypeaheadPattern = require('./Content/Patterns/TypeaheadPattern');

var _TreePattern = require('./Content/Patterns/TreePattern');

var _ToggleButtonPattern = require('./Content/Patterns/ToggleButtonPattern');

var _MultiDropdownPattern = require('./Content/Patterns/MultiDropdownPattern');

var _IconPattern = require('./Content/Patterns/IconPattern');

var _LiteTablePattern = require('./Content/Patterns/LiteTablePattern');

var _ReactTablePattern = require('./Content/Patterns/ReactTablePattern');

var _ReactTablePattern2 = _interopRequireDefault(_ReactTablePattern);

var _DrillDownPattern = require('./Content/Patterns/DrillDownPattern');

var _ComboBoxPattern = require('./Content/Patterns/ComboBoxPattern');

var _AlertBannerPattern = require('./Content/Patterns/AlertBannerPattern');

var _TooltipPattern = require('./Content/Patterns/TooltipPattern');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ComponentRoutes = exports.ComponentRoutes = [React.createElement(_reactRouter.IndexRoute, { component: _ButtonsPattern.ButtonsPattern, key: 'index' }), React.createElement(_reactRouter.Route, { path: 'Button', component: _ButtonsPattern.ButtonsPattern, key: 'Button' }), React.createElement(_reactRouter.Route, { path: 'ButtonGroup', component: _ButtonGroupPattern.ButtonGroupPattern, key: 'ButtonGroup' }), React.createElement(_reactRouter.Route, { path: 'Navigation-Menu', component: _NavMenuPattern.NavMenuPattern, key: 'Navigation-Menu' }), React.createElement(_reactRouter.Route, { path: 'ButtonToolbar', component: _ButtonToolbarPattern.ButtonToolbarPattern, key: 'ButtonToolbar' }), React.createElement(_reactRouter.Route, { path: 'Link', component: _LinksPattern.LinksPattern, key: 'Link' }), React.createElement(_reactRouter.Route, { path: 'Grid', component: _GridPattern.GridPattern, key: 'Grid' }), React.createElement(_reactRouter.Route, { path: 'Tabs', component: _TabsPattern.TabsPattern, key: 'Tabs' }), React.createElement(_reactRouter.Route, { path: 'Label', component: _LabelPattern.LabelPattern, key: 'Label' }), React.createElement(_reactRouter.Route, { path: 'Dropdown', component: _DropdownPattern.DropdownPattern, key: 'Dropdown' }), React.createElement(_reactRouter.Route, { path: 'MultiDropdown', component: _MultiDropdownPattern.MultiDropdownPattern, key: 'MultiDropdown' }), React.createElement(_reactRouter.Route, { path: 'Spinner', component: _SpinnerPattern.SpinnerPattern, key: 'Spinner' }), React.createElement(_reactRouter.Route, { path: 'RadioButton', component: _RadioPattern.RadioPattern, key: 'RadioButton' }), React.createElement(_reactRouter.Route, { path: 'DropdownList', component: _DropdownListPattern.DropdownListPattern, key: 'DropdownList' }), React.createElement(_reactRouter.Route, { path: 'Pager', component: _PagerPattern.PagerPattern, key: 'Pager' }), React.createElement(_reactRouter.Route, { path: 'Modal', component: _ModalPattern.ModalPattern, key: 'Modal' }), React.createElement(_reactRouter.Route, { path: 'TextBox', component: _TextBoxPattern.TextBoxPattern, key: 'TextBox' }), React.createElement(_reactRouter.Route, { path: 'CheckBox', component: _CheckBoxPattern.CheckBoxPattern, key: 'CheckBox' }), React.createElement(_reactRouter.Route, { path: 'Table', component: _TablePattern.TablePattern, key: 'Table' }), React.createElement(_reactRouter.Route, { path: 'AdvancedTable', component: _AdvancedTablePattern.AdvancedTablePattern, key: 'AdvancedTable' }), React.createElement(_reactRouter.Route, { path: 'LiteTable', component: _LiteTablePattern.LiteTablePattern, key: 'LiteTable' }), React.createElement(_reactRouter.Route, { path: 'DateInput', component: _DateInputPattern.DateInputPattern, key: 'DateInput' }), React.createElement(_reactRouter.Route, { path: 'Accordion', component: _AccordionPattern.AccordionPattern, key: 'Accordion' }), React.createElement(_reactRouter.Route, { path: 'Panel', component: _PanelPattern.PanelPattern, key: 'Panel' }), React.createElement(_reactRouter.Route, { path: 'PanelGroup', component: _PanelGroupPattern.PanelGroupPattern, key: 'PanelGroup' }), React.createElement(_reactRouter.Route, { path: 'Drawers', component: _DrawersPattern.DrawersPattern, key: 'Drawers' }), React.createElement(_reactRouter.Route, { path: 'Popover', component: _PopoverPattern.PopoverPattern, key: 'Popover' }), React.createElement(_reactRouter.Route, { path: 'Typeahead', component: _TypeaheadPattern.TypeaheadPattern, key: 'Typeahead' }), React.createElement(_reactRouter.Route, { path: 'Tree', component: _TreePattern.TreePattern, key: 'Tree' }), React.createElement(_reactRouter.Route, { path: 'ToggleButton', component: _ToggleButtonPattern.ToggleButtonPattern, key: 'ToggleButton' }), React.createElement(_reactRouter.Route, { path: 'Icon', component: _IconPattern.IconPattern, key: 'Icon' }), React.createElement(_reactRouter.Route, { path: 'ReactTable', component: _ReactTablePattern2.default, key: 'ReactTable' }), React.createElement(_reactRouter.Route, { path: 'DrillDown', component: _DrillDownPattern.DrillDownPattern, key: 'DrillDown' }), React.createElement(_reactRouter.Route, { path: 'ComboBox', component: _ComboBoxPattern.ComboBoxPattern, key: 'ComboBox' }), React.createElement(_reactRouter.Route, { path: 'AlertBanner', component: _AlertBannerPattern.AlertBannerPattern, key: 'AlertBanner' }), React.createElement(_reactRouter.Route, { path: 'Tooltip', component: _TooltipPattern.TooltipPattern, key: 'Tooltip' })];

var ComponentsNav = exports.ComponentsNav = function (_React$Component) {
    _inherits(ComponentsNav, _React$Component);

    function ComponentsNav() {
        _classCallCheck(this, ComponentsNav);

        return _possibleConstructorReturn(this, (ComponentsNav.__proto__ || Object.getPrototypeOf(ComponentsNav)).apply(this, arguments));
    }

    _createClass(ComponentsNav, [{
        key: 'render',
        value: function render() {
            return React.createElement(
                _Nav.Nav,
                { page: 'components' },
                React.createElement(
                    _NavGroup.NavGroup,
                    { name: 'Buttons' },
                    React.createElement(_NavGroupItem.NavGroupItem, { name: 'Button' }),
                    React.createElement(_NavGroupItem.NavGroupItem, { name: 'ButtonGroup' }),
                    React.createElement(_NavGroupItem.NavGroupItem, { name: 'ButtonToolbar' }),
                    React.createElement(_NavGroupItem.NavGroupItem, { name: 'ToggleButton' })
                ),
                React.createElement(
                    _NavGroup.NavGroup,
                    { name: 'Links' },
                    React.createElement(_NavGroupItem.NavGroupItem, { name: 'Link' })
                ),
                React.createElement(
                    _NavGroup.NavGroup,
                    { name: 'Page Layout' },
                    React.createElement(_NavGroupItem.NavGroupItem, { name: 'Grid' }),
                    React.createElement(_NavGroupItem.NavGroupItem, { name: 'Panel' }),
                    React.createElement(_NavGroupItem.NavGroupItem, { name: 'PanelGroup' })
                ),
                React.createElement(
                    _NavGroup.NavGroup,
                    { name: 'Navigation' },
                    React.createElement(_NavGroupItem.NavGroupItem, { name: 'Navigation Menu' }),
                    React.createElement(_NavGroupItem.NavGroupItem, { name: 'Tabs' }),
                    React.createElement(_NavGroupItem.NavGroupItem, { name: 'Accordion' }),
                    React.createElement(_NavGroupItem.NavGroupItem, { name: 'Pager' })
                ),
                React.createElement(
                    _NavGroup.NavGroup,
                    { name: 'Overlays' },
                    React.createElement(_NavGroupItem.NavGroupItem, { name: 'Modal' }),
                    React.createElement(_NavGroupItem.NavGroupItem, { name: 'Tooltip' }),
                    React.createElement(_NavGroupItem.NavGroupItem, { name: 'Popover' }),
                    React.createElement(_NavGroupItem.NavGroupItem, { name: 'Drawers' })
                ),
                React.createElement(
                    _NavGroup.NavGroup,
                    { name: 'Forms' },
                    React.createElement(_NavGroupItem.NavGroupItem, { name: 'Label' }),
                    React.createElement(_NavGroupItem.NavGroupItem, { name: 'CheckBox' }),
                    React.createElement(_NavGroupItem.NavGroupItem, { name: 'Dropdown' }),
                    React.createElement(_NavGroupItem.NavGroupItem, { name: 'TextBox' }),
                    React.createElement(_NavGroupItem.NavGroupItem, { name: 'RadioButton' }),
                    React.createElement(_NavGroupItem.NavGroupItem, { name: 'DateInput' }),
                    React.createElement(_NavGroupItem.NavGroupItem, { noop: true, name: 'Toolbar' }),
                    React.createElement(_NavGroupItem.NavGroupItem, { name: 'Tree' }),
                    React.createElement(_NavGroupItem.NavGroupItem, { name: 'Typeahead' }),
                    React.createElement(_NavGroupItem.NavGroupItem, { noop: true, name: 'ComboBox' }),
                    ' ',
                    React.createElement(_NavGroupItem.NavGroupItem, { name: 'MultiDropdown' }),
                    ' ',
                    React.createElement(_NavGroupItem.NavGroupItem, { name: 'DropdownList' }),
                    ' '
                ),
                React.createElement(
                    _NavGroup.NavGroup,
                    { name: 'Tables' },
                    React.createElement(_NavGroupItem.NavGroupItem, { name: 'Table' })
                ),
                React.createElement(
                    _NavGroup.NavGroup,
                    { name: 'Alerts' },
                    React.createElement(_NavGroupItem.NavGroupItem, { name: 'AlertBanner' })
                ),
                React.createElement(
                    _NavGroup.NavGroup,
                    { name: 'Progress Bars' },
                    React.createElement(_NavGroupItem.NavGroupItem, { name: 'Spinner' })
                ),
                React.createElement(
                    _NavGroup.NavGroup,
                    { name: 'Media' },
                    React.createElement(_NavGroupItem.NavGroupItem, { name: 'Icon' })
                )
            );
        }
    }]);

    return ComponentsNav;
}(React.Component);

},{"./Content/Patterns/AccordionPattern":7,"./Content/Patterns/AdvancedTablePattern":8,"./Content/Patterns/AlertBannerPattern":9,"./Content/Patterns/ButtonGroupPattern":10,"./Content/Patterns/ButtonToolbarPattern":11,"./Content/Patterns/ButtonsPattern":12,"./Content/Patterns/CheckBoxPattern":13,"./Content/Patterns/ComboBoxPattern":14,"./Content/Patterns/DateInputPattern":15,"./Content/Patterns/DrawersPattern":16,"./Content/Patterns/DrillDownPattern":17,"./Content/Patterns/DropdownListPattern":18,"./Content/Patterns/DropdownPattern":19,"./Content/Patterns/GridPattern":20,"./Content/Patterns/IconPattern":21,"./Content/Patterns/LabelPattern":22,"./Content/Patterns/LinksPattern":23,"./Content/Patterns/LiteTablePattern":24,"./Content/Patterns/ModalPattern":25,"./Content/Patterns/MultiDropdownPattern":26,"./Content/Patterns/NavMenuPattern":27,"./Content/Patterns/PagerPattern":28,"./Content/Patterns/PanelGroupPattern":29,"./Content/Patterns/PanelPattern":30,"./Content/Patterns/PopoverPattern":31,"./Content/Patterns/RadioPattern":32,"./Content/Patterns/ReactTablePattern":33,"./Content/Patterns/SpinnerPattern":34,"./Content/Patterns/TablePattern":35,"./Content/Patterns/TabsPattern":36,"./Content/Patterns/TextBoxPattern":37,"./Content/Patterns/ToggleButtonPattern":38,"./Content/Patterns/TooltipPattern":39,"./Content/Patterns/TreePattern":40,"./Content/Patterns/TypeaheadPattern":41,"./Nav/":55,"./Nav/NavGroup":53,"./Nav/NavGroupItem":54,"react":"react","react-router":"react-router"}],7:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AccordionPattern = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _PatternGroup = require('./components/PatternGroup');

var _Pattern = require('./components/Pattern');

var _Description = require('./components/Description');

var _CodeEditor = require('./components/CodeEditor');

var _Props = require('./components/Props');

var _Prop = require('./components/Prop');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CodeSamples = require('./components/CodeSamples');

var AccordionPattern = exports.AccordionPattern = function (_React$Component) {
    _inherits(AccordionPattern, _React$Component);

    function AccordionPattern() {
        _classCallCheck(this, AccordionPattern);

        return _possibleConstructorReturn(this, (AccordionPattern.__proto__ || Object.getPrototypeOf(AccordionPattern)).apply(this, arguments));
    }

    _createClass(AccordionPattern, [{
        key: 'render',
        value: function render() {
            return React.createElement(
                _PatternGroup.PatternGroup,
                { name: 'Accordion' },
                React.createElement(
                    _Description.Description,
                    null,
                    'Accordion control'
                ),
                React.createElement(
                    _Pattern.Pattern,
                    { name: 'Accordion Panel' },
                    React.createElement(
                        _Description.Description,
                        null,
                        'Accordion control item '
                    ),
                    React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.Accordion })
                ),
                React.createElement(
                    _Props.Props,
                    { name: 'Accordion props' },
                    React.createElement(
                        _Prop.Prop,
                        { name: 'className', type: 'string', 'default': '' },
                        'Custom CSS class name to apply to element'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'activePanel', type: 'number', 'default': '-1' },
                        'Index of the panel to be expanded (start with 0)'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'multiExpand', type: 'boolean', 'default': 'false' },
                        'When true user can expand multiple tabs'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'onItemExpandCollapse', type: 'func', 'default': '' },
                        'Callback when user expande/collapse accordion item'
                    )
                )
            );
        }
    }]);

    return AccordionPattern;
}(React.Component);

},{"./components/CodeEditor":43,"./components/CodeSamples":44,"./components/Description":45,"./components/Pattern":47,"./components/PatternGroup":48,"./components/Prop":49,"./components/Props":50,"react":"react"}],8:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AdvancedTablePattern = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _PatternGroup = require('./components/PatternGroup');

var _Pattern = require('./components/Pattern');

var _Description = require('./components/Description');

var _Props = require('./components/Props');

var _Prop = require('./components/Prop');

var _CodeEditor = require('./components/CodeEditor');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CodeSamples = require('./components/CodeSamples');

var AdvancedTablePattern = exports.AdvancedTablePattern = function (_React$Component) {
    _inherits(AdvancedTablePattern, _React$Component);

    function AdvancedTablePattern() {
        _classCallCheck(this, AdvancedTablePattern);

        return _possibleConstructorReturn(this, (AdvancedTablePattern.__proto__ || Object.getPrototypeOf(AdvancedTablePattern)).apply(this, arguments));
    }

    _createClass(AdvancedTablePattern, [{
        key: 'render',
        value: function render() {
            return React.createElement(
                _PatternGroup.PatternGroup,
                { name: 'Table' },
                React.createElement(
                    _Description.Description,
                    null,
                    'Table Examples'
                ),
                React.createElement(
                    _Pattern.Pattern,
                    { name: 'AdvancedTable' },
                    React.createElement(
                        _Description.Description,
                        null,
                        'Default Advanced Table'
                    ),
                    React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.AdvancedTable })
                ),
                React.createElement(
                    _Props.Props,
                    { name: 'Table props' },
                    React.createElement(
                        _Prop.Prop,
                        { name: 'columns', type: 'array', 'default': '' },
                        'The array of child columns for this table.Each column is a type of TableColumn class'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'enablePaging', type: 'boolean', 'default': 'true' },
                        'Flag to show or hide the paging control'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'pageLength', type: 'number', 'default': '20' },
                        'Size of the current page'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'enableSearch', type: 'boolean', 'default': 'true' },
                        'Flag to show or hide the search control'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'enableComponentUpdates', type: 'boolean', 'default': 'false' },
                        'Flag to enable component updates - defaults to false, so as to not cause any backwards compatibility issues. If set to true, the component will respond to props changes. Since DataTableWrapper wraps a jQuery component, we simply ignore any prop changes.'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'enableShowTotalCount', type: 'boolean', 'default': 'true' },
                        'Flag to show or hide the total count of the table records'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'enableOrdering', type: 'boolean', 'default': 'true' },
                        'Flag to enable or disable ordering for table'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'enableSearch', type: 'boolean', 'default': 'false' },
                        'Flag to show or hide the search control'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'enableVerticalScroll', type: 'boolean', 'default': 'falsetrue' },
                        'Flag to enable or disable the vertical scrolling behavior. When this is set to false, the table will grow until it renders all the data specified in the data array. If it is set to true, the table will have a fixed height and will render a scrollbar if the data exceeds that specified height.'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'enableHorizontalScroll', type: 'boolean', 'default': 'false' },
                        'Flag to enable or disable the horizontal scrolling behavior. When this is set to false, the table will fit all columns in the visible area. If it is set to true, the table will have a scrollbar that renders columns at their specified width.'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'enableDeferRender', type: 'boolean', 'default': 'true' },
                        'Render only the visible cells'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'enableScroll', type: 'boolean', 'default': 'false' },
                        'Shortcut to set both enableVerticalScroll and enableHorizontalScroll'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'enableColumnSettings', type: 'boolean', 'default': 'false' },
                        'Flag to enable or disable the settings btn [UX tbd] - This allows the user to choose columns to show.'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'enableFixedHeader', type: 'boolean', 'default': 'false' },
                        'Flag to enable or disable the fixed header functionality. Setting this to true will make the headers stick to the top when the user scrolls.'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'enableFixedGroupingRow', type: 'boolean', 'default': 'false' },
                        'Flag to enable or disable the fixed grouping row functionality. Setting this to true will make the group rows stick to the top when the user scrolls.'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'removeFirstGroupRow', type: 'boolean', 'default': 'false' },
                        'Remove first group row header, replace it with float header'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'fixedHeaderOffset', type: 'number', 'default': '20' },
                        'How far below the top of the window to render the fixed header. Defaults to zero, but you can change it if you have anything else fixed above this. For example, in CV2, we have the global sitewide fixed header on above the table header.'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'isLoading', type: 'boolean', 'default': 'false' },
                        'If true the table will displays a progress bar or a spinner icon'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'enableShowTotalCount', type: 'boolean', 'default': 'true' },
                        'Flag to show or hide the label "Showing X to Y of Z entries"'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'enableOrdering', type: 'boolean', 'default': 'true' },
                        'Flag to enable or disable ordering for table'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'defaultSortField', type: 'string, array[string]', 'default': '' },
                        'The name of a field in the data by which you want the data to be sorted by default.'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'rowGroupingField', type: 'string', 'default': '' },
                        'The name of a field in the data by which you want to group the rows. The grouped rows will show the data in a cell above the rest.'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'onColumnSortCallback', type: 'func', 'default': '' },
                        'Callback when user sort table by column'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'leftLockedCount', type: 'number', 'default': '0' },
                        'Number of columns to lock on the left.'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'rightLockedCount', type: 'number', 'default': '0' },
                        'Number of columns to lock on the right.'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'height', type: 'number', 'default': '300' },
                        'Height of the table component, in pixels, defaults to 300'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'rowCreatedCallback', type: 'func', 'default': '' },
                        'Call back function that takes the generated row, row data, and the index. Use this callback to perform any custom logic on the cells after it is created. Signature : (tr: any, data: any, index: any) => void;'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'headerCreatedCallback', type: 'func', 'default': '' },
                        'Call back function that takes the generated row, row data, and the index. Use this callback to perform any custom logic on the cells after it is created.'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'headerCreatedCallback', type: 'func', 'default': '' },
                        'Call back function that is called on every \'draw\' event (i.e. when a filter, sort or page event is initiated by the end user or the API), and allows you to dynamically modify the header row. This can be used to calculate and display useful information about the table. Signature : (thead: any, data: any, start: any, end: any, edisplaynd: any) => void'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'cellClickCallback', type: 'func', 'default': '' },
                        'Call back function that takes the generated cell, row data, and the index. \\ Use this callback to perform custom logic on click of any cell. Signature : (td: any, data: any, row: any, col: any) => void'
                    )
                )
            );
        }
    }]);

    return AdvancedTablePattern;
}(React.Component);

},{"./components/CodeEditor":43,"./components/CodeSamples":44,"./components/Description":45,"./components/Pattern":47,"./components/PatternGroup":48,"./components/Prop":49,"./components/Props":50,"react":"react"}],9:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AlertBannerPattern = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _PatternGroup = require('./components/PatternGroup');

var _Pattern = require('./components/Pattern');

var _Description = require('./components/Description');

var _Props = require('./components/Props');

var _Prop = require('./components/Prop');

var _CodeEditor = require('./components/CodeEditor');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CodeSamples = require('./components/CodeSamples');

var AlertBannerPattern = exports.AlertBannerPattern = function (_React$Component) {
  _inherits(AlertBannerPattern, _React$Component);

  function AlertBannerPattern() {
    _classCallCheck(this, AlertBannerPattern);

    return _possibleConstructorReturn(this, (AlertBannerPattern.__proto__ || Object.getPrototypeOf(AlertBannerPattern)).apply(this, arguments));
  }

  _createClass(AlertBannerPattern, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        _PatternGroup.PatternGroup,
        { name: 'AlertBanner' },
        React.createElement(
          _Description.Description,
          null,
          'AlertBanner is used to provide an alert message to the user'
        ),
        React.createElement(
          _Pattern.Pattern,
          { name: 'Basic AlertBanner' },
          React.createElement(
            _Description.Description,
            null,
            'This is a basic AlertBanner component which automatically opens up on page load and auto-closes in 10 seconds, refresh the page to re-load the AlertBanner.'
          ),
          React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.AlertBanner })
        ),
        React.createElement(
          _Pattern.Pattern,
          { name: 'Advanced AlertBanner' },
          React.createElement(
            _Description.Description,
            null,
            'This is an Advanced AlertBanner component, click on the link below to open the Banner. ',
            React.createElement('br', null),
            'Alter the properties and check the effect by clicking on the link again.',
            React.createElement('br', null),
            'The Alert can be closed by clicking on the close (x) icon, it will autoclose in 10 seconds.',
            React.createElement('br', null)
          ),
          React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.AdvancedAlertBanner })
        ),
        React.createElement(
          _Pattern.Pattern,
          { name: 'Modal AlertBanner' },
          React.createElement(
            _Description.Description,
            null,
            'This example shows how to use the AlertBanner in a Modal Dialog. ',
            React.createElement('br', null),
            'Set the inline property to use the AlertBanner in a Modal Dialog, this way the AlertBanner takes the relative position of the Model Dialog instead of the Browser window top position.'
          ),
          React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.ModalAlertBanner })
        ),
        React.createElement(
          _Props.Props,
          { name: 'AlertBanner props' },
          React.createElement(
            _Prop.Prop,
            { name: 'autoclose', type: 'boolean', 'default': 'true' },
            'Auto closes the Banner in 10 seconds, set this to false to prevent auto-close.'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'closeable', type: 'boolean', 'default': 'true' },
            'Provides a close (x) icon to manually close the Banner, set this to false to prevent manual close.'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'onClose', type: 'function', 'default': ' ' },
            'Callback that will be invoked when user click on the close (x) icon (or) when auto-close is triggered on the AlertBanner.'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'children', type: 'any', 'default': '', required: true },
            'Content of the AlertBanner, can include text, icons and Link controls.'
          )
        )
      );
    }
  }]);

  return AlertBannerPattern;
}(React.Component);

},{"./components/CodeEditor":43,"./components/CodeSamples":44,"./components/Description":45,"./components/Pattern":47,"./components/PatternGroup":48,"./components/Prop":49,"./components/Props":50,"react":"react"}],10:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ButtonGroupPattern = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _PatternGroup = require('./components/PatternGroup');

var _Pattern = require('./components/Pattern');

var _Description = require('./components/Description');

var _CodeEditor = require('./components/CodeEditor');

var _Props = require('./components/Props');

var _Prop = require('./components/Prop');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CodeSamples = require('./components/CodeSamples');

var ButtonGroupPattern = exports.ButtonGroupPattern = function (_React$Component) {
  _inherits(ButtonGroupPattern, _React$Component);

  function ButtonGroupPattern() {
    _classCallCheck(this, ButtonGroupPattern);

    return _possibleConstructorReturn(this, (ButtonGroupPattern.__proto__ || Object.getPrototypeOf(ButtonGroupPattern)).apply(this, arguments));
  }

  _createClass(ButtonGroupPattern, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        _PatternGroup.PatternGroup,
        { name: 'ButtonGroup' },
        React.createElement(
          _Description.Description,
          null,
          'A Button Group Component'
        ),
        React.createElement(
          _Pattern.Pattern,
          { name: 'Basic usage' },
          React.createElement(
            _Description.Description,
            null,
            'ButtonGroup Component must have some ButtonGroupItem children.\n               Since it\'s display is \'inline-block\', it is suggested to warp it into a \n               div or a row.'
          ),
          React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.DefaultButtonGroup })
        ),
        React.createElement(
          _Pattern.Pattern,
          { name: 'More API' },
          React.createElement(
            _Description.Description,
            null,
            'We provide some callback functions for you.'
          ),
          React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.ButtonGroupAPI })
        ),
        React.createElement(
          _Props.Props,
          { name: 'ButtonGroup props' },
          React.createElement(
            _Prop.Prop,
            { name: 'type', type: 'string', 'default': 'small' },
            'one of [\'small\', \'big\']'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'onChange', type: 'function', 'default': '' },
            '(thisIndex, nextIndex) => { /* your code */ }'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'style', type: 'object', 'default': '' },
            'Custom styles if need.'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'selectedIndex', type: 'Number', 'default': '' },
            'Use to set the selected button manually.'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'defaultIndex', type: 'Number', 'default': '0' },
            'Use to set the default selected button.'
          )
        ),
        React.createElement(
          _Props.Props,
          { name: 'ButtonGroupItem props' },
          React.createElement(
            _Prop.Prop,
            { name: 'onClick', type: 'function', 'default': '' },
            '(event, ThisReactElement) => { /* your code */ }'
          )
        )
      );
    }
  }]);

  return ButtonGroupPattern;
}(React.Component);

},{"./components/CodeEditor":43,"./components/CodeSamples":44,"./components/Description":45,"./components/Pattern":47,"./components/PatternGroup":48,"./components/Prop":49,"./components/Props":50,"react":"react"}],11:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ButtonToolbarPattern = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _PatternGroup = require('./components/PatternGroup');

var _Pattern = require('./components/Pattern');

var _Description = require('./components/Description');

var _CodeEditor = require('./components/CodeEditor');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CodeSamples = require('./components/CodeSamples');

var ButtonToolbarPattern = exports.ButtonToolbarPattern = function (_React$Component) {
    _inherits(ButtonToolbarPattern, _React$Component);

    function ButtonToolbarPattern() {
        _classCallCheck(this, ButtonToolbarPattern);

        return _possibleConstructorReturn(this, (ButtonToolbarPattern.__proto__ || Object.getPrototypeOf(ButtonToolbarPattern)).apply(this, arguments));
    }

    _createClass(ButtonToolbarPattern, [{
        key: 'render',
        value: function render() {
            return React.createElement(
                _PatternGroup.PatternGroup,
                { name: 'ButtonToolbar' },
                React.createElement(
                    _Description.Description,
                    null,
                    'Use any of the available button style types to quickly create a styled button'
                ),
                React.createElement(
                    _Pattern.Pattern,
                    { name: 'ButtonToolbar' },
                    React.createElement(
                        _Description.Description,
                        null,
                        'Basic button types'
                    ),
                    React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.ButtonToolbar })
                )
            );
        }
    }]);

    return ButtonToolbarPattern;
}(React.Component);

},{"./components/CodeEditor":43,"./components/CodeSamples":44,"./components/Description":45,"./components/Pattern":47,"./components/PatternGroup":48,"react":"react"}],12:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ButtonsPattern = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _PatternGroup = require('./components/PatternGroup');

var _Pattern = require('./components/Pattern');

var _Description = require('./components/Description');

var _CodeEditor = require('./components/CodeEditor');

var _Props = require('./components/Props');

var _Prop = require('./components/Prop');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CodeSamples = require('./components/CodeSamples');

var ButtonsPattern = exports.ButtonsPattern = function (_React$Component) {
  _inherits(ButtonsPattern, _React$Component);

  function ButtonsPattern() {
    _classCallCheck(this, ButtonsPattern);

    return _possibleConstructorReturn(this, (ButtonsPattern.__proto__ || Object.getPrototypeOf(ButtonsPattern)).apply(this, arguments));
  }

  _createClass(ButtonsPattern, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        _PatternGroup.PatternGroup,
        { name: 'Button' },
        React.createElement(
          _Description.Description,
          null,
          'Use any of the available button style types to quickly create a styled button'
        ),
        React.createElement(
          _Pattern.Pattern,
          { name: 'Types' },
          React.createElement(
            _Description.Description,
            null,
            'Basic button types'
          ),
          React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.DefaultButton })
        ),
        React.createElement(
          _Pattern.Pattern,
          { name: 'Handling State' },
          React.createElement(
            _Description.Description,
            null,
            'Handling onClick event and active/disabled state'
          ),
          React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.StateButton })
        ),
        React.createElement(
          _Pattern.Pattern,
          { name: 'Disabled Button' },
          React.createElement(
            _Description.Description,
            null,
            'Use of Disabled button'
          ),
          React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.DisabledButton })
        ),
        React.createElement(
          _Props.Props,
          { name: 'Button props' },
          React.createElement(
            _Prop.Prop,
            { name: 'className', type: 'string', 'default': '' },
            'Custom CSS class name to apply to element'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'disabled', type: 'boolean', 'default': 'false' },
            'When set to true button will be disabled and will no longer accept onClick events'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'onClick', type: 'function', 'default': '', required: true },
            'Callback that will be invoked when user clicks on the button...'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'primary', type: 'boolean', 'default': 'false' },
            'Usually used in modals and forms. Primary button is the button that will be activated when user presses Enter/Return key'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'size', type: 'array', 'default': 'medium' },
            'Button size. One of: [\'small\', \'medium\', \'large\']'
          )
        )
      );
    }
  }]);

  return ButtonsPattern;
}(React.Component);

},{"./components/CodeEditor":43,"./components/CodeSamples":44,"./components/Description":45,"./components/Pattern":47,"./components/PatternGroup":48,"./components/Prop":49,"./components/Props":50,"react":"react"}],13:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CheckBoxPattern = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _PatternGroup = require('./components/PatternGroup');

var _Pattern = require('./components/Pattern');

var _Description = require('./components/Description');

var _Props = require('./components/Props');

var _Prop = require('./components/Prop');

var _CodeEditor = require('./components/CodeEditor');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CodeSamples = require('./components/CodeSamples');

var CheckBoxPattern = exports.CheckBoxPattern = function (_React$Component) {
  _inherits(CheckBoxPattern, _React$Component);

  function CheckBoxPattern() {
    _classCallCheck(this, CheckBoxPattern);

    return _possibleConstructorReturn(this, (CheckBoxPattern.__proto__ || Object.getPrototypeOf(CheckBoxPattern)).apply(this, arguments));
  }

  _createClass(CheckBoxPattern, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        _PatternGroup.PatternGroup,
        { name: 'CheckBox' },
        React.createElement(
          _Description.Description,
          null,
          'Basic CheckBox types'
        ),
        React.createElement(
          _Pattern.Pattern,
          { name: 'Default' },
          React.createElement(
            _Description.Description,
            null,
            'Default Checkbox'
          ),
          React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.CheckBox.Default })
        ),
        React.createElement(
          _Pattern.Pattern,
          { name: 'Disabled' },
          React.createElement(
            _Description.Description,
            null,
            'Disabled CheckBox'
          ),
          React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.CheckBox.Disabled })
        ),
        React.createElement(
          _Pattern.Pattern,
          { name: 'Readonly' },
          React.createElement(
            _Description.Description,
            null,
            'Readonly CheckBox'
          ),
          React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.CheckBox.Readonly })
        ),
        React.createElement(
          _Props.Props,
          { name: 'CheckBox props' },
          React.createElement(
            _Prop.Prop,
            { name: 'className', type: 'string', 'default': '' },
            'Custom CSS class name to apply to element'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'disabled', type: 'boolean', 'default': 'false' },
            'When set to true CheckBox will be disabled and will no longer accept onClick events'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'name', type: 'string', 'default': '' },
            'set CheckBox select name.'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'onChange', type: 'function', 'default': '' },
            'Callback that will be invoked when user click the CheckBox'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'text', type: 'string', 'default': '' },
            'CheckBox text'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'value', type: 'string', 'default': '' },
            'CheckBox value'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'checked', type: 'boolean', 'default': 'false' },
            'set CheckBox default checked.'
          )
        )
      );
    }
  }]);

  return CheckBoxPattern;
}(React.Component);

},{"./components/CodeEditor":43,"./components/CodeSamples":44,"./components/Description":45,"./components/Pattern":47,"./components/PatternGroup":48,"./components/Prop":49,"./components/Props":50,"react":"react"}],14:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ComboBoxPattern = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _PatternGroup = require('./components/PatternGroup');

var _Pattern = require('./components/Pattern');

var _Description = require('./components/Description');

var _Props = require('./components/Props');

var _Prop = require('./components/Prop');

var _CodeEditor = require('./components/CodeEditor');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CodeSamples = require('./components/CodeSamples');

var ComboBoxPattern = exports.ComboBoxPattern = function (_React$Component) {
  _inherits(ComboBoxPattern, _React$Component);

  function ComboBoxPattern() {
    _classCallCheck(this, ComboBoxPattern);

    return _possibleConstructorReturn(this, (ComboBoxPattern.__proto__ || Object.getPrototypeOf(ComboBoxPattern)).apply(this, arguments));
  }

  _createClass(ComboBoxPattern, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        _PatternGroup.PatternGroup,
        { name: 'ComboBox' },
        React.createElement(
          _Description.Description,
          null,
          'ComboBox with search'
        ),
        React.createElement(
          _Pattern.Pattern,
          { name: 'ComboBox' },
          React.createElement(
            _Description.Description,
            null,
            'Default ComboBox'
          ),
          React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.ComboBox })
        ),
        React.createElement(
          _Props.Props,
          { name: 'ComboBox properties' },
          React.createElement(
            _Prop.Prop,
            { name: 'className', type: 'string', 'default': '' },
            'ComboBox css class name'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'placeholder', type: 'string', 'default': '' },
            'placeholder for the ComboBox'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'searchText', type: 'string', 'default': '' },
            'Value of the search text box'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'showContent', type: 'bool', 'default': 'false' },
            'To make content visible or hidden'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'onSearchTextChange', type: 'func', 'default': '' },
            'Callback when user start typing in search box'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'onCollapseExpandClick', type: 'func', 'default': '' },
            'Callback when click on ComboBox arrow'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'onMouseLeave', type: 'func', 'default': '' },
            'Callback when mouse moves'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'disableSearch', type: 'bool', 'default': 'false' },
            'To disable search box'
          )
        )
      );
    }
  }]);

  return ComboBoxPattern;
}(React.Component);

},{"./components/CodeEditor":43,"./components/CodeSamples":44,"./components/Description":45,"./components/Pattern":47,"./components/PatternGroup":48,"./components/Prop":49,"./components/Props":50,"react":"react"}],15:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DateInputPattern = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _PatternGroup = require('./components/PatternGroup');

var _Pattern = require('./components/Pattern');

var _Description = require('./components/Description');

var _Props = require('./components/Props');

var _Prop = require('./components/Prop');

var _CodeEditor = require('./components/CodeEditor');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CodeSamples = require('./components/CodeSamples');

var DateInputPattern = exports.DateInputPattern = function (_React$Component) {
  _inherits(DateInputPattern, _React$Component);

  function DateInputPattern() {
    _classCallCheck(this, DateInputPattern);

    return _possibleConstructorReturn(this, (DateInputPattern.__proto__ || Object.getPrototypeOf(DateInputPattern)).apply(this, arguments));
  }

  _createClass(DateInputPattern, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        _PatternGroup.PatternGroup,
        { name: 'DateInput' },
        React.createElement(
          _Pattern.Pattern,
          { name: 'DateInput' },
          React.createElement(
            _Description.Description,
            null,
            'Use of DateInput'
          ),
          React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.DateInput })
        ),
        React.createElement(
          _Props.Props,
          { name: 'DateInput props' },
          React.createElement(
            _Prop.Prop,
            { name: 'format', type: 'String', 'default': 'MM-DD-YYYY' },
            'Format of date, which display in input and set in date property'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'date', type: 'String', 'default': 'Current date' },
            'Set initial date value.'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'minDate', type: 'string', 'default': 'null' },
            'Set the selectable minimum date.'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'maxDate', type: 'stromg', 'default': 'null' },
            'Set the selectable maximum date.'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'onChange', type: 'func', 'default': 'null' },
            'Set a function that will be triggered whenever there is a change in the selected date.'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'onBlur', type: 'func', 'default': 'null' },
            'Set a function that will be triggered when the input field is blurred.'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'disabled', type: 'boolean', 'default': 'fa;se' },
            'If true, the input field gets disabled and the icon next to it disappears.'
          )
        )
      );
    }
  }]);

  return DateInputPattern;
}(React.Component);

},{"./components/CodeEditor":43,"./components/CodeSamples":44,"./components/Description":45,"./components/Pattern":47,"./components/PatternGroup":48,"./components/Prop":49,"./components/Props":50,"react":"react"}],16:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DrawersPattern = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _PatternGroup = require('./components/PatternGroup');

var _Pattern = require('./components/Pattern');

var _Description = require('./components/Description');

var _Props = require('./components/Props');

var _Prop = require('./components/Prop');

var _CodeEditor = require('./components/CodeEditor');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CodeSamples = require('./components/CodeSamples');

var DrawersPattern = exports.DrawersPattern = function (_React$Component) {
  _inherits(DrawersPattern, _React$Component);

  function DrawersPattern() {
    _classCallCheck(this, DrawersPattern);

    return _possibleConstructorReturn(this, (DrawersPattern.__proto__ || Object.getPrototypeOf(DrawersPattern)).apply(this, arguments));
  }

  _createClass(DrawersPattern, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        _PatternGroup.PatternGroup,
        { name: 'Drawers' },
        React.createElement(
          _Description.Description,
          null,
          'Basic Drawers types'
        ),
        React.createElement(
          _Pattern.Pattern,
          { name: 'Drawers' },
          React.createElement(
            _Description.Description,
            null,
            'Default Drawers'
          ),
          React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.Drawers })
        ),
        React.createElement(
          _Props.Props,
          { name: 'Drawers props' },
          React.createElement(
            _Prop.Prop,
            { name: 'className', type: 'node', 'default': ' ', required: true },
            'custom class'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'width', type: 'number', 'default': '350' },
            'content width'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'children', type: 'any', 'default': ' ', required: true },
            'Children Content'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'onRequestClose', type: 'function', 'default': ' ' },
            'Request Close Event'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'title', type: 'string', 'default': '', required: true },
            'title'
          )
        )
      );
    }
  }]);

  return DrawersPattern;
}(React.Component);

},{"./components/CodeEditor":43,"./components/CodeSamples":44,"./components/Description":45,"./components/Pattern":47,"./components/PatternGroup":48,"./components/Prop":49,"./components/Props":50,"react":"react"}],17:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.DrillDownPattern = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _PatternGroup = require('./components/PatternGroup');

var _Pattern = require('./components/Pattern');

var _Description = require('./components/Description');

var _CodeEditor = require('./components/CodeEditor');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CodeSamples = require('./components/CodeSamples');

var DrillDownPattern = exports.DrillDownPattern = function (_React$Component) {
    _inherits(DrillDownPattern, _React$Component);

    function DrillDownPattern() {
        _classCallCheck(this, DrillDownPattern);

        return _possibleConstructorReturn(this, (DrillDownPattern.__proto__ || Object.getPrototypeOf(DrillDownPattern)).apply(this, arguments));
    }

    _createClass(DrillDownPattern, [{
        key: 'render',
        value: function render() {
            return React.createElement(
                _PatternGroup.PatternGroup,
                { name: 'DrillDown' },
                React.createElement(
                    _Description.Description,
                    null,
                    'Unfinished...'
                ),
                React.createElement(
                    _Pattern.Pattern,
                    { name: 'Basic usage' },
                    React.createElement(
                        _Description.Description,
                        null,
                        'The DrillDown is used to show deep data logic, you don\'t need to query all the data at first time, you decide what to insert then user click the drill.'
                    ),
                    React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.BasicDrillDown })
                ),
                React.createElement(
                    _Pattern.Pattern,
                    { name: 'AVG style' },
                    React.createElement(
                        _Description.Description,
                        null,
                        'average style drilldown.'
                    ),
                    React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.AVGDrillDown })
                )
            );
        }
    }]);

    return DrillDownPattern;
}(React.Component);

},{"./components/CodeEditor":43,"./components/CodeSamples":44,"./components/Description":45,"./components/Pattern":47,"./components/PatternGroup":48,"react":"react"}],18:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DropdownListPattern = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _PatternGroup = require('./components/PatternGroup');

var _Pattern = require('./components/Pattern');

var _Description = require('./components/Description');

var _Props = require('./components/Props');

var _Prop = require('./components/Prop');

var _CodeEditor = require('./components/CodeEditor');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CodeSamples = require('./components/CodeSamples');

var DropdownListPattern = exports.DropdownListPattern = function (_React$Component) {
  _inherits(DropdownListPattern, _React$Component);

  function DropdownListPattern() {
    _classCallCheck(this, DropdownListPattern);

    return _possibleConstructorReturn(this, (DropdownListPattern.__proto__ || Object.getPrototypeOf(DropdownListPattern)).apply(this, arguments));
  }

  _createClass(DropdownListPattern, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        _PatternGroup.PatternGroup,
        { name: 'DropdownList' },
        React.createElement(
          _Description.Description,
          null,
          'Basic dropdownList types'
        ),
        React.createElement(
          _Pattern.Pattern,
          { name: 'DropdownList' },
          React.createElement(
            _Description.Description,
            null,
            'Default DropdownList'
          ),
          React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.DropdownList })
        ),
        React.createElement(
          _Props.Props,
          { name: 'DropdownList props' },
          React.createElement(
            _Prop.Prop,
            { name: 'optionItems', type: 'array<optionItem>', 'default': '', required: true },
            'Array of DropdownList options source'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'onChange', type: 'function', 'default': '' },
            'Callback that will be invoked when user change the dropdownlist option item'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'width', type: 'number', 'default': '100%' },
            'Set DropdownList Container width ex. 240px or 50%'
          )
        ),
        React.createElement(
          _Props.Props,
          { name: 'OptionItem properties' },
          React.createElement(
            _Prop.Prop,
            { name: 'text', type: 'string', 'default': '', required: true },
            'Dropdownlist option item text'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'value', type: 'string', 'default': '', required: true },
            'Dropdownlist option item value'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'selected', type: 'bool', 'default': '' },
            'Dropdownlist option item default, if not the first option will be the default'
          )
        )
      );
    }
  }]);

  return DropdownListPattern;
}(React.Component);

},{"./components/CodeEditor":43,"./components/CodeSamples":44,"./components/Description":45,"./components/Pattern":47,"./components/PatternGroup":48,"./components/Prop":49,"./components/Props":50,"react":"react"}],19:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DropdownPattern = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _PatternGroup = require('./components/PatternGroup');

var _Pattern = require('./components/Pattern');

var _Description = require('./components/Description');

var _Props = require('./components/Props');

var _Prop = require('./components/Prop');

var _CodeEditor = require('./components/CodeEditor');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CodeSamples = require('./components/CodeSamples');

var DropdownPattern = exports.DropdownPattern = function (_React$Component) {
  _inherits(DropdownPattern, _React$Component);

  function DropdownPattern() {
    _classCallCheck(this, DropdownPattern);

    return _possibleConstructorReturn(this, (DropdownPattern.__proto__ || Object.getPrototypeOf(DropdownPattern)).apply(this, arguments));
  }

  _createClass(DropdownPattern, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        _PatternGroup.PatternGroup,
        { name: 'Dropdown' },
        React.createElement(
          _Description.Description,
          null,
          'Dropdown component with multiselect, controlled and searchable options'
        ),
        React.createElement(
          _Pattern.Pattern,
          { name: 'Default' },
          React.createElement(
            _Description.Description,
            null,
            'Default Dropdown'
          ),
          React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.Dropdown.Default })
        ),
        React.createElement(
          _Pattern.Pattern,
          { name: 'Multiselect' },
          React.createElement(
            _Description.Description,
            null,
            'Multiselect Dropdown'
          ),
          React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.Dropdown.Multiselect })
        ),
        React.createElement(
          _Pattern.Pattern,
          { name: 'Multiselect with controls' },
          React.createElement(
            _Description.Description,
            null,
            'Multiselect Dropdown with controls'
          ),
          React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.Dropdown.MultiselectControlled })
        ),
        React.createElement(
          _Props.Props,
          { name: 'Dropdown props' },
          React.createElement(
            _Prop.Prop,
            { name: 'optionItems', type: 'array<optionItem>', 'default': '', required: true },
            'Array of DropdownList options source'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'onChange', type: 'function', 'default': '' },
            'Callback that will be invoked when user change the dropdownlist option item'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'search', type: 'bool', 'default': '', required: true },
            'Set this property if Dropdown can be searchable via Typeahead'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'multiselect', type: 'bool', 'default': '', required: true },
            'Dropdown items display as checkboxes'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'controlled', type: 'bool', 'default': 'true', required: true },
            'To dismiss the control user needs to click on Ok / Cancel buttons'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'width', type: 'number', 'default': '100%' },
            'Set DropdownList Container width ex. 240px or 50%'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'className', type: 'string', 'default': '' },
            'Custom CSS class name to apply to element'
          )
        ),
        React.createElement(
          _Props.Props,
          { name: 'OptionItem object properties' },
          React.createElement(
            _Prop.Prop,
            { name: 'key', type: 'string', required: true },
            'Required unique key for the item'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'text', type: 'string', required: true },
            'Dropdownlist option item text'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'value', type: 'string' },
            'Dropdownlist option item value'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'selected', type: 'bool', 'default': 'false' },
            'Dropdownlist option item default, if not the first option will be the default'
          )
        )
      );
    }
  }]);

  return DropdownPattern;
}(React.Component);

},{"./components/CodeEditor":43,"./components/CodeSamples":44,"./components/Description":45,"./components/Pattern":47,"./components/PatternGroup":48,"./components/Prop":49,"./components/Props":50,"react":"react"}],20:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GridPattern = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _PatternGroup = require('./components/PatternGroup');

var _Pattern = require('./components/Pattern');

var _Description = require('./components/Description');

var _CodeEditor = require('./components/CodeEditor');

var _Props = require('./components/Props');

var _Prop = require('./components/Prop');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CodeSamples = require('./components/CodeSamples');

var GridPattern = exports.GridPattern = function (_React$Component) {
  _inherits(GridPattern, _React$Component);

  function GridPattern() {
    _classCallCheck(this, GridPattern);

    return _possibleConstructorReturn(this, (GridPattern.__proto__ || Object.getPrototypeOf(GridPattern)).apply(this, arguments));
  }

  _createClass(GridPattern, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        _PatternGroup.PatternGroup,
        { name: 'Grid' },
        React.createElement(
          _Description.Description,
          null,
          'Flexible grid system to organize your components in the page. To create a layout, you must have one <Grid/> component. Inside you can use <Row/> and <Column/> components. You may also use custom components (which could include furthur <Row/> and <Column/> components.'
        ),
        React.createElement(
          _Pattern.Pattern,
          { name: 'Grid' },
          React.createElement(
            _Description.Description,
            null,
            'Basic grid layout'
          ),
          React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.BasicGrid })
        ),
        React.createElement(
          _Props.Props,
          { name: 'Grid props' },
          React.createElement(
            _Prop.Prop,
            { name: 'columnWidth', type: 'number', 'default': '60' },
            'Maximum width of the column in pixels'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'gutterWidth', type: 'number', 'default': '20' },
            'Gutter width in pixels i.e. margin between column'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'className', type: 'string', 'default': '' },
            'Custom CSS class name to apply to element'
          )
        ),
        React.createElement(
          _Props.Props,
          { name: 'Row props' },
          React.createElement(
            _Prop.Prop,
            { name: 'className', type: 'string', 'default': '' },
            'Custom CSS class name to apply to element'
          )
        ),
        React.createElement(
          _Props.Props,
          { name: 'Column props' },
          React.createElement(
            _Prop.Prop,
            { name: 'width', type: 'string', 'default': '1/1' },
            'Column width in fractions. Example \'1/2\' or \'1/12\' or \'3/12'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'offset', type: 'string', 'default': '' },
            'Offset in fractions. Example \'1/2\' or \'1/12\' or \'3/12'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'className', type: 'string', 'default': '' },
            'Custom CSS class name to apply to element'
          )
        )
      );
    }
  }]);

  return GridPattern;
}(React.Component);

},{"./components/CodeEditor":43,"./components/CodeSamples":44,"./components/Description":45,"./components/Pattern":47,"./components/PatternGroup":48,"./components/Prop":49,"./components/Props":50,"react":"react"}],21:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.IconPattern = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _PatternGroup = require('./components/PatternGroup');

var _Pattern = require('./components/Pattern');

var _Description = require('./components/Description');

var _CodeEditor = require('./components/CodeEditor');

var _Props = require('./components/Props');

var _Prop = require('./components/Prop');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CodeSamples = require('./components/CodeSamples');

var IconPattern = exports.IconPattern = function (_React$Component) {
  _inherits(IconPattern, _React$Component);

  function IconPattern() {
    _classCallCheck(this, IconPattern);

    return _possibleConstructorReturn(this, (IconPattern.__proto__ || Object.getPrototypeOf(IconPattern)).apply(this, arguments));
  }

  _createClass(IconPattern, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        _PatternGroup.PatternGroup,
        { name: 'Icon' },
        React.createElement(
          _Description.Description,
          null,
          'Use any of the available iconname to quickly create a Icon component'
        ),
        React.createElement(
          _Pattern.Pattern,
          { name: 'Icon' },
          React.createElement(
            _Description.Description,
            null,
            'Icon component'
          ),
          React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.Icon })
        ),
        React.createElement(
          _Props.Props,
          { name: 'Icon props' },
          React.createElement(
            _Prop.Prop,
            { name: 'name', type: 'string', 'default': '', required: true },
            'icon name in uxFramwork Icon List ',
            React.createElement(
              'a',
              { target: '_blank', href: 'http://uxdev.moodys.com/prototypes/uxFramework/#g=1&p=icons' },
              'Here'
            )
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'color', type: 'string', 'default': '' },
            'set color of Icon'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'zoom', type: 'string', 'default': '1' },
            'set zoom of Icon'
          )
        )
      );
    }
  }]);

  return IconPattern;
}(React.Component);

},{"./components/CodeEditor":43,"./components/CodeSamples":44,"./components/Description":45,"./components/Pattern":47,"./components/PatternGroup":48,"./components/Prop":49,"./components/Props":50,"react":"react"}],22:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LabelPattern = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _PatternGroup = require('./components/PatternGroup');

var _Pattern = require('./components/Pattern');

var _Description = require('./components/Description');

var _CodeEditor = require('./components/CodeEditor');

var _Props = require('./components/Props');

var _Prop = require('./components/Prop');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CodeSamples = require('./components/CodeSamples');

var LabelPattern = exports.LabelPattern = function (_React$Component) {
  _inherits(LabelPattern, _React$Component);

  function LabelPattern() {
    _classCallCheck(this, LabelPattern);

    return _possibleConstructorReturn(this, (LabelPattern.__proto__ || Object.getPrototypeOf(LabelPattern)).apply(this, arguments));
  }

  _createClass(LabelPattern, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        _PatternGroup.PatternGroup,
        { name: 'Label' },
        React.createElement(
          _Description.Description,
          null,
          'Basic Form controls'
        ),
        React.createElement(
          _Pattern.Pattern,
          { name: 'Label' },
          React.createElement(
            _Description.Description,
            null,
            'Basic label types'
          ),
          React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.DefaultLabel })
        ),
        React.createElement(
          _Props.Props,
          { name: 'Label props' },
          React.createElement(
            _Prop.Prop,
            { name: 'className', type: 'string', 'default': '' },
            'Custom CSS class name(s) to apply to element'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'type', type: 'string', 'default': '' },
            'you can use type from ',
            React.createElement(
              'a',
              { target: '_blank', href: 'http://uxdev.moodys.com/prototypes/uxFramework/#g=1&p=typography' },
              'HERE'
            )
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'color', type: 'string', 'default': '' },
            'only suport color from ',
            React.createElement(
              'a',
              { target: '_blank', href: 'http://uxdev.moodys.com/prototypes/uxFramework/#g=1&p=color' },
              'HERE'
            ),
            '. Porperties name rule: spaces replace "-",remove "\'". so you can use color porperties like color = "MA-BLUE" or color = "MOODYS-BLUE"'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'block', type: 'boolean', 'default': 'false' },
            'label show in one line'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'html', type: 'string', 'default': '' },
            'label show html strings'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'maxLength', type: 'number', 'default': '' },
            'truncate label text,while maxLength is 12,label show first 12 characters and "..."'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'for', type: 'string', 'default': '' },
            'Id of form element the label is explicitly associated with'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'disabled', type: 'boolean', 'default': 'false' },
            'Disable label'
          )
        )
      );
    }
  }]);

  return LabelPattern;
}(React.Component);

},{"./components/CodeEditor":43,"./components/CodeSamples":44,"./components/Description":45,"./components/Pattern":47,"./components/PatternGroup":48,"./components/Prop":49,"./components/Props":50,"react":"react"}],23:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LinksPattern = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _PatternGroup = require('./components/PatternGroup');

var _Pattern = require('./components/Pattern');

var _Description = require('./components/Description');

var _Props = require('./components/Props');

var _Prop = require('./components/Prop');

var _CodeEditor = require('./components/CodeEditor');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CodeSamples = require('./components/CodeSamples');

var LinksPattern = exports.LinksPattern = function (_React$Component) {
  _inherits(LinksPattern, _React$Component);

  function LinksPattern() {
    _classCallCheck(this, LinksPattern);

    return _possibleConstructorReturn(this, (LinksPattern.__proto__ || Object.getPrototypeOf(LinksPattern)).apply(this, arguments));
  }

  _createClass(LinksPattern, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        _PatternGroup.PatternGroup,
        { name: 'Link' },
        React.createElement(
          _Description.Description,
          null,
          'Use any of the available Link types to quickly create a different link'
        ),
        React.createElement(
          _Pattern.Pattern,
          { name: 'Default' },
          React.createElement(
            _Description.Description,
            null,
            'Default Link'
          ),
          React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.DefaultLink })
        ),
        React.createElement(
          _Pattern.Pattern,
          { name: 'Gold' },
          React.createElement(
            _Description.Description,
            null,
            'Default Link'
          ),
          React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.GoldLink })
        ),
        React.createElement(
          _Pattern.Pattern,
          { name: 'Grey' },
          React.createElement(
            _Description.Description,
            null,
            'Default Link'
          ),
          React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.GreyLink })
        ),
        React.createElement(
          _Props.Props,
          { name: 'Link props' },
          React.createElement(
            _Prop.Prop,
            { name: 'type', type: 'string', 'default': 'Blue' },
            'Specifies the link type with differrent styles.'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'disabled', type: 'boolean', 'default': 'false' },
            'When set to true link will be disabled and will no longer accept onClick events'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'href', type: 'string', 'default': '', required: true },
            'Specifies the URL of the page the link goes to'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'target', type: 'string', 'default': '_blank' },
            'The target attribute specifies where to open the linked document.'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'className', type: 'string', 'default': '' },
            'Custom CSS class name to apply to element'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'onClick', type: 'function', 'default': '' },
            'Callback that will be invoked when user clicks on the link'
          )
        )
      );
    }
  }]);

  return LinksPattern;
}(React.Component);

},{"./components/CodeEditor":43,"./components/CodeSamples":44,"./components/Description":45,"./components/Pattern":47,"./components/PatternGroup":48,"./components/Prop":49,"./components/Props":50,"react":"react"}],24:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.LiteTablePattern = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _PatternGroup = require('./components/PatternGroup');

var _Pattern = require('./components/Pattern');

var _Description = require('./components/Description');

var _Props = require('./components/Props');

var _Prop = require('./components/Prop');

var _CodeEditor = require('./components/CodeEditor');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CodeSamples = require('./components/CodeSamples');

var LiteTablePattern = exports.LiteTablePattern = function (_React$Component) {
    _inherits(LiteTablePattern, _React$Component);

    function LiteTablePattern() {
        _classCallCheck(this, LiteTablePattern);

        return _possibleConstructorReturn(this, (LiteTablePattern.__proto__ || Object.getPrototypeOf(LiteTablePattern)).apply(this, arguments));
    }

    _createClass(LiteTablePattern, [{
        key: 'render',
        value: function render() {
            return React.createElement(
                _PatternGroup.PatternGroup,
                { name: 'Table' },
                React.createElement(
                    _Description.Description,
                    null,
                    'Table Examples'
                ),
                React.createElement(
                    _Pattern.Pattern,
                    { name: 'LiteTable' },
                    React.createElement(
                        _Description.Description,
                        null,
                        'Lite Table'
                    ),
                    React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.LiteTableSample })
                ),
                React.createElement(
                    _Pattern.Pattern,
                    { name: 'LiteTableTreeView' },
                    React.createElement(
                        _Description.Description,
                        null,
                        'Lite Table with Tree View'
                    ),
                    React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.LiteTableTreeViewSample })
                ),
                React.createElement(
                    _Props.Props,
                    { name: 'Table props' },
                    React.createElement(
                        _Prop.Prop,
                        { name: 'options', type: 'object', 'default': '' },
                        'Please refer to datatables.net/reference/option/'
                    )
                )
            );
        }
    }]);

    return LiteTablePattern;
}(React.Component);

},{"./components/CodeEditor":43,"./components/CodeSamples":44,"./components/Description":45,"./components/Pattern":47,"./components/PatternGroup":48,"./components/Prop":49,"./components/Props":50,"react":"react"}],25:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ModalPattern = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _PatternGroup = require('./components/PatternGroup');

var _Pattern = require('./components/Pattern');

var _Description = require('./components/Description');

var _CodeEditor = require('./components/CodeEditor');

var _Props = require('./components/Props');

var _Prop = require('./components/Prop');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CodeSamples = require('./components/CodeSamples');

var ModalPattern = exports.ModalPattern = function (_React$Component) {
  _inherits(ModalPattern, _React$Component);

  function ModalPattern() {
    _classCallCheck(this, ModalPattern);

    return _possibleConstructorReturn(this, (ModalPattern.__proto__ || Object.getPrototypeOf(ModalPattern)).apply(this, arguments));
  }

  _createClass(ModalPattern, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        _PatternGroup.PatternGroup,
        { name: 'Modal' },
        React.createElement(
          _Description.Description,
          null,
          'Basic Overlay controls'
        ),
        React.createElement(
          _Pattern.Pattern,
          { name: 'Modal' },
          React.createElement(
            _Description.Description,
            null,
            'Basic modal types'
          ),
          React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.Modal })
        ),
        React.createElement(
          _Props.Props,
          { name: 'Modal props' },
          React.createElement(
            _Prop.Prop,
            { name: 'children', type: 'node', 'default': '' },
            'The contents of the Modal. Could be string, React element or an array of React element.'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'footer', type: 'node', 'default': '' },
            'Buttons to display below the content (children). Could be string, React element or an array of React element.'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'onRequestClose', type: 'function', 'default': '', required: true },
            'Fired when the Modal is requested to be close.'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'maskClosable', type: 'boolean', 'default': 'true' },
            'If true, clicking outside the modal or press \'ESC\' key will trigger the onRequestClose.'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'showCloseButton', type: 'boolean', 'default': 'true' },
            'If true, show close button in top right corner.'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'title', type: 'node', 'default': '' },
            'The title to display. Could be string, React element or an array of React element.'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'visible', type: 'bool', 'default': '', required: true },
            'Current visible status.'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'width', type: 'number', 'default': '' },
            'Set the width of Modal.'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'customizedTitle', type: 'bool', 'default': 'false' },
            'if you want to customize your own title ,set it!'
          )
        )
      );
    }
  }]);

  return ModalPattern;
}(React.Component);

},{"./components/CodeEditor":43,"./components/CodeSamples":44,"./components/Description":45,"./components/Pattern":47,"./components/PatternGroup":48,"./components/Prop":49,"./components/Props":50,"react":"react"}],26:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.MultiDropdownPattern = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _PatternGroup = require('./components/PatternGroup');

var _Pattern = require('./components/Pattern');

var _Description = require('./components/Description');

var _CodeEditor = require('./components/CodeEditor');

var _Props = require('./components/Props');

var _Prop = require('./components/Prop');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CodeSamples = require('./components/CodeSamples');

var MultiDropdownPattern = exports.MultiDropdownPattern = function (_React$Component) {
    _inherits(MultiDropdownPattern, _React$Component);

    function MultiDropdownPattern() {
        _classCallCheck(this, MultiDropdownPattern);

        return _possibleConstructorReturn(this, (MultiDropdownPattern.__proto__ || Object.getPrototypeOf(MultiDropdownPattern)).apply(this, arguments));
    }

    _createClass(MultiDropdownPattern, [{
        key: 'render',
        value: function render() {
            return React.createElement(
                _PatternGroup.PatternGroup,
                { name: 'DropdownType' },
                React.createElement(
                    _Description.Description,
                    null,
                    'Use any of the available button style types to quickly create a styled button'
                ),
                React.createElement(
                    _Pattern.Pattern,
                    { name: 'DropdownType1' },
                    React.createElement(_Description.Description, null),
                    React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.MultiDropdown })
                ),
                React.createElement(
                    _Props.Props,
                    { name: 'MultiDropdown props' },
                    React.createElement(
                        _Prop.Prop,
                        { name: 'className', type: 'string', 'default': '' },
                        'Set the top element to the class.'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'dropdownTitle', type: 'string', 'default': '', required: true },
                        'Title name of the dropdown.'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'dropdownType', type: 'number', 'default': '1' },
                        'When set to 1, the dropdown title will dismiss when dropdown list show.'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'optionsItems', type: 'array<Object>', 'default': '', required: true },
                        'Optional list.'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'uploadTheSelected', type: 'function', 'default': '', required: true },
                        'Callback invoked on any item click and return all selected items.'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'hideSearch', type: 'function', 'default': '' },
                        'When set true, the search block will be hidden.'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'hideTitle', type: 'function', 'default': '' },
                        'When set true, the title will be hidden.'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'selectedOptions', type: 'array<Object>', 'default': '' },
                        'Optional list for selected items'
                    )
                )
            );
        }
    }]);

    return MultiDropdownPattern;
}(React.Component);

},{"./components/CodeEditor":43,"./components/CodeSamples":44,"./components/Description":45,"./components/Pattern":47,"./components/PatternGroup":48,"./components/Prop":49,"./components/Props":50,"react":"react"}],27:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NavMenuPattern = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _PatternGroup = require('./components/PatternGroup');

var _Pattern = require('./components/Pattern');

var _Description = require('./components/Description');

var _CodeEditor = require('./components/CodeEditor');

var _Props = require('./components/Props');

var _Prop = require('./components/Prop');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CodeSamples = require('./components/CodeSamples');

var NavMenuPattern = exports.NavMenuPattern = function (_React$Component) {
  _inherits(NavMenuPattern, _React$Component);

  function NavMenuPattern() {
    _classCallCheck(this, NavMenuPattern);

    return _possibleConstructorReturn(this, (NavMenuPattern.__proto__ || Object.getPrototypeOf(NavMenuPattern)).apply(this, arguments));
  }

  _createClass(NavMenuPattern, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        _PatternGroup.PatternGroup,
        { name: 'Navigation Menu' },
        React.createElement(
          _Description.Description,
          null,
          'Use any of the available navmenu style types to quickly create a styled navmenu'
        ),
        React.createElement(
          _Pattern.Pattern,
          { name: 'Types' },
          React.createElement(
            _Description.Description,
            null,
            'navmenu types'
          ),
          React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.DefaultNavMenu })
        ),
        React.createElement(
          _Props.Props,
          { name: 'NavMenu props' },
          React.createElement(
            _Prop.Prop,
            { name: 'menuItems', type: 'any<menuItem>', 'default': '[]', required: true },
            'Navigation Menu data source, it is array type'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'topBold', type: 'boolean', 'default': 'false' },
            'while true,the navigation Menu container top border is 3px,otherwise top border is 1px'
          )
        ),
        React.createElement(
          _Props.Props,
          { name: 'NavMenu menuItem props' },
          React.createElement(
            _Prop.Prop,
            { name: 'label', type: 'string', 'default': '', required: true },
            'Navigation Menu item label'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'url', type: 'string', 'default': '', required: true },
            'Navigation Menu item url'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'active', type: 'boolean', 'default': 'false' },
            'when navigation menu item active is true, it will be selected.'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'disabled', type: 'function', 'default': 'false' },
            'when navigationmenu item is disabled,it can not be clicked.'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'pjax', type: 'boolean', 'default': 'false' },
            'when pjax is true, while click navigation menu item, the browser will not reload itself.'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'target', type: 'string', 'default': '_self' },
            'The target attribute specifies where to open the linked document,the same to html A tag target attribute.'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'onClick', type: 'string', 'default': '' },
            'Event handler initializing item'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'children', type: 'any', 'default': '[]' },
            'array of navigation menu sub items.'
          )
        )
      );
    }
  }]);

  return NavMenuPattern;
}(React.Component);

},{"./components/CodeEditor":43,"./components/CodeSamples":44,"./components/Description":45,"./components/Pattern":47,"./components/PatternGroup":48,"./components/Prop":49,"./components/Props":50,"react":"react"}],28:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PagerPattern = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _PatternGroup = require('./components/PatternGroup');

var _Pattern = require('./components/Pattern');

var _Description = require('./components/Description');

var _Props = require('./components/Props');

var _Prop = require('./components/Prop');

var _CodeEditor = require('./components/CodeEditor');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CodeSamples = require('./components/CodeSamples');

var PagerPattern = exports.PagerPattern = function (_React$Component) {
  _inherits(PagerPattern, _React$Component);

  function PagerPattern() {
    _classCallCheck(this, PagerPattern);

    return _possibleConstructorReturn(this, (PagerPattern.__proto__ || Object.getPrototypeOf(PagerPattern)).apply(this, arguments));
  }

  _createClass(PagerPattern, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        _PatternGroup.PatternGroup,
        { name: 'Pager' },
        React.createElement(
          _Description.Description,
          null,
          'Basic Pager types'
        ),
        React.createElement(
          _Pattern.Pattern,
          { name: 'Pager' },
          React.createElement(
            _Description.Description,
            null,
            'Default Pager'
          ),
          React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.Pager })
        ),
        React.createElement(
          _Props.Props,
          { name: 'Pager props' },
          React.createElement(
            _Prop.Prop,
            { name: 'currentIndex', type: 'number', 'default': '0' },
            'Current Page Index'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'totalCount', type: 'number', 'default': '', required: true },
            'set dropdownlist select name.'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'pageSize', type: 'number', 'default': '50' },
            'Page Size'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'maxButtonCount', type: 'number', 'default': '7' },
            'Max Number Page Button Count'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'onPageSelect', type: 'function', 'default': '' },
            'Callback that will be invoked when user click this page number item'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'labels', type: 'array', 'default': 'null' },
            'Display Content'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'todos', type: 'any', 'default': 'null' },
            'Extend space'
          )
        )
      );
    }
  }]);

  return PagerPattern;
}(React.Component);

},{"./components/CodeEditor":43,"./components/CodeSamples":44,"./components/Description":45,"./components/Pattern":47,"./components/PatternGroup":48,"./components/Prop":49,"./components/Props":50,"react":"react"}],29:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.PanelGroupPattern = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _PatternGroup = require('./components/PatternGroup');

var _Pattern = require('./components/Pattern');

var _Description = require('./components/Description');

var _CodeEditor = require('./components/CodeEditor');

var _Props = require('./components/Props');

var _Prop = require('./components/Prop');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CodeSamples = require('./components/CodeSamples');

var PanelGroupPattern = exports.PanelGroupPattern = function (_React$Component) {
    _inherits(PanelGroupPattern, _React$Component);

    function PanelGroupPattern() {
        _classCallCheck(this, PanelGroupPattern);

        return _possibleConstructorReturn(this, (PanelGroupPattern.__proto__ || Object.getPrototypeOf(PanelGroupPattern)).apply(this, arguments));
    }

    _createClass(PanelGroupPattern, [{
        key: 'render',
        value: function render() {
            return React.createElement(
                _PatternGroup.PatternGroup,
                { name: 'PanelGroup' },
                React.createElement(
                    _Description.Description,
                    null,
                    'Panle Group control'
                ),
                React.createElement(
                    _Pattern.Pattern,
                    { name: 'Panel Group' },
                    React.createElement(
                        _Description.Description,
                        null,
                        'Panel group control item '
                    ),
                    React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.PanelGroup })
                ),
                React.createElement(
                    _Props.Props,
                    { name: 'Panel Group props' },
                    React.createElement(
                        _Prop.Prop,
                        { name: 'className', type: 'string', 'default': '' },
                        'Custom CSS class name to apply to element'
                    )
                )
            );
        }
    }]);

    return PanelGroupPattern;
}(React.Component);

},{"./components/CodeEditor":43,"./components/CodeSamples":44,"./components/Description":45,"./components/Pattern":47,"./components/PatternGroup":48,"./components/Prop":49,"./components/Props":50,"react":"react"}],30:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.PanelPattern = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _PatternGroup = require('./components/PatternGroup');

var _Pattern = require('./components/Pattern');

var _Description = require('./components/Description');

var _CodeEditor = require('./components/CodeEditor');

var _Props = require('./components/Props');

var _Prop = require('./components/Prop');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CodeSamples = require('./components/CodeSamples');

var PanelPattern = exports.PanelPattern = function (_React$Component) {
    _inherits(PanelPattern, _React$Component);

    function PanelPattern() {
        _classCallCheck(this, PanelPattern);

        return _possibleConstructorReturn(this, (PanelPattern.__proto__ || Object.getPrototypeOf(PanelPattern)).apply(this, arguments));
    }

    _createClass(PanelPattern, [{
        key: 'render',
        value: function render() {
            return React.createElement(
                _PatternGroup.PatternGroup,
                { name: 'Panel' },
                React.createElement(
                    _Description.Description,
                    null,
                    'Panel control'
                ),
                React.createElement(
                    _Pattern.Pattern,
                    { name: 'Panel' },
                    React.createElement(
                        _Description.Description,
                        null,
                        'Panel control can be used as a simple container with title and content.  It can also be used inside an Accordion component.'
                    ),
                    React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.Panel })
                ),
                React.createElement(
                    _Props.Props,
                    { name: 'Panel Props' },
                    React.createElement(
                        _Prop.Prop,
                        { name: 'className', type: 'string', 'default': '' },
                        'Custom CSS class name to apply to element'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'title', type: 'string/object', 'default': '', required: true },
                        'Title for the panel container.'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'subTitle', type: 'string/object', 'default': '' },
                        'Subtitle for the panel container.'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'expanded', type: 'boolean', 'default': 'true' },
                        'Panel content visible if set to true'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'collapsible', type: 'boolean', 'default': 'false' },
                        'User can collapse/expand content if set to true'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'onExpandCollapseClick', type: 'func', 'default': '' },
                        'Callback when user clicks on expand or collapse icon'
                    )
                )
            );
        }
    }]);

    return PanelPattern;
}(React.Component);

},{"./components/CodeEditor":43,"./components/CodeSamples":44,"./components/Description":45,"./components/Pattern":47,"./components/PatternGroup":48,"./components/Prop":49,"./components/Props":50,"react":"react"}],31:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PopoverPattern = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _PatternGroup = require('./components/PatternGroup');

var _Pattern = require('./components/Pattern');

var _Description = require('./components/Description');

var _CodeEditor = require('./components/CodeEditor');

var _Props = require('./components/Props');

var _Prop = require('./components/Prop');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CodeSamples = require('./components/CodeSamples');

var PopoverPattern = exports.PopoverPattern = function (_React$Component) {
  _inherits(PopoverPattern, _React$Component);

  function PopoverPattern() {
    _classCallCheck(this, PopoverPattern);

    return _possibleConstructorReturn(this, (PopoverPattern.__proto__ || Object.getPrototypeOf(PopoverPattern)).apply(this, arguments));
  }

  _createClass(PopoverPattern, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        _PatternGroup.PatternGroup,
        { name: 'Popover' },
        React.createElement(
          _Description.Description,
          null,
          'Basic Popover controls, show overlay when trigger event happens on the child element.'
        ),
        React.createElement(
          _Pattern.Pattern,
          { name: 'Popover Default' },
          React.createElement(
            _Description.Description,
            null,
            'Default Popover'
          ),
          React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.DefaultPopover })
        ),
        React.createElement(
          _Pattern.Pattern,
          { name: 'Popover with text' },
          React.createElement(
            _Description.Description,
            null,
            'Popover with text '
          ),
          React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.TextPopover })
        ),
        React.createElement(
          _Pattern.Pattern,
          { name: 'Popover with icon' },
          React.createElement(
            _Description.Description,
            null,
            'Popover with icon '
          ),
          React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.IconPopover })
        ),
        React.createElement(
          _Pattern.Pattern,
          { name: 'Popover with Tooltips' },
          React.createElement(
            _Description.Description,
            null,
            'Popover with Tooltips '
          ),
          React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.TooltipsPopover })
        ),
        React.createElement(
          _Props.Props,
          { name: 'Popover props' },
          React.createElement(
            _Prop.Prop,
            { name: 'children', type: 'node', 'default': '', required: true },
            'The target element.Could be React element.original, Only one element allowed.Now you can give two when not toolTips, refer to \'Popover with text\'.'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'trigger', type: 'string', 'default': '', required: true },
            'The event name.Could be \'click\' or \'hover\' or \'focus\' or combination of them.'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'overlay', type: 'node', 'default': '', required: true },
            'The element to display when trigger event happens.'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'align', type: 'string', 'default': 'bottom-right' },
            'overlay align.'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'toolTips', type: 'boolean', 'default': 'true' },
            'if toolTips.'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'additionalContentClassName', type: 'string', 'default': '' },
            'add addtional content \'class\' name when you need to override content css'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'disable', type: 'boolean', 'default': 'false' },
            'if disable is true, trigger event will not happen.'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'onTriggered', type: 'function', 'default': 'undefined' },
            'it will be call after the click action be triggered.'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'onClosed', type: 'function', 'default': 'undefined' },
            'it will be call after the the overlay close.'
          )
        )
      );
    }
  }]);

  return PopoverPattern;
}(React.Component);

},{"./components/CodeEditor":43,"./components/CodeSamples":44,"./components/Description":45,"./components/Pattern":47,"./components/PatternGroup":48,"./components/Prop":49,"./components/Props":50,"react":"react"}],32:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RadioPattern = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _PatternGroup = require('./components/PatternGroup');

var _Pattern = require('./components/Pattern');

var _Description = require('./components/Description');

var _Props = require('./components/Props');

var _Prop = require('./components/Prop');

var _CodeEditor = require('./components/CodeEditor');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CodeSamples = require('./components/CodeSamples');

var RadioPattern = exports.RadioPattern = function (_React$Component) {
  _inherits(RadioPattern, _React$Component);

  function RadioPattern() {
    _classCallCheck(this, RadioPattern);

    return _possibleConstructorReturn(this, (RadioPattern.__proto__ || Object.getPrototypeOf(RadioPattern)).apply(this, arguments));
  }

  _createClass(RadioPattern, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        _PatternGroup.PatternGroup,
        { name: 'RadioButton' },
        React.createElement(
          _Description.Description,
          null,
          'Basic radio types'
        ),
        React.createElement(
          _Pattern.Pattern,
          { name: 'Radio' },
          React.createElement(
            _Description.Description,
            null,
            'Default Radio'
          ),
          React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.Radio })
        ),
        React.createElement(
          _Pattern.Pattern,
          { name: 'RadioGroup' },
          React.createElement(
            _Description.Description,
            null,
            'Radio Group'
          ),
          React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.RadioGroup })
        ),
        React.createElement(
          _Props.Props,
          { name: 'Radio props' },
          React.createElement(
            _Prop.Prop,
            { name: 'disabled', type: 'boolean', 'default': 'false' },
            'When set to true radio will be disabled and will no longer accept onClick events'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'name', type: 'string', 'default': '' },
            'When set to the same name in different Radios, only one check.'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'onClick', type: 'function', 'default': '' },
            'Callback that will be invoked when user clicks on the radio'
          )
        )
      );
    }
  }]);

  return RadioPattern;
}(React.Component);

},{"./components/CodeEditor":43,"./components/CodeSamples":44,"./components/Description":45,"./components/Pattern":47,"./components/PatternGroup":48,"./components/Prop":49,"./components/Props":50,"react":"react"}],33:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _PatternGroup = require('./components/PatternGroup');

var _Pattern = require('./components/Pattern');

var _Description = require('./components/Description');

var _CodeEditor = require('./components/CodeEditor');

var _Props = require('./components/Props');

var _Prop = require('./components/Prop');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CodeSamples = require('./components/CodeSamples');

var ReactTablePattern = function (_React$Component) {
    _inherits(ReactTablePattern, _React$Component);

    function ReactTablePattern() {
        _classCallCheck(this, ReactTablePattern);

        return _possibleConstructorReturn(this, (ReactTablePattern.__proto__ || Object.getPrototypeOf(ReactTablePattern)).apply(this, arguments));
    }

    _createClass(ReactTablePattern, [{
        key: 'render',
        value: function render() {
            return React.createElement(
                _PatternGroup.PatternGroup,
                { name: 'ReactTable' },
                React.createElement(
                    _Description.Description,
                    null,
                    'React Table Examples'
                ),
                React.createElement(
                    _Pattern.Pattern,
                    { name: 'SimpleTable' },
                    React.createElement(
                        _Description.Description,
                        null,
                        'Default Simple Table'
                    ),
                    React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.ReactTable })
                ),
                React.createElement(
                    _Pattern.Pattern,
                    { name: 'DragColumnTable' },
                    React.createElement(
                        _Description.Description,
                        null,
                        'Drag Column Table'
                    ),
                    React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.ReactDragTable })
                ),
                React.createElement(
                    _Pattern.Pattern,
                    { name: 'Tree Table' },
                    React.createElement(
                        _Description.Description,
                        null,
                        'First column is a tree view'
                    ),
                    React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.TreeReactTable })
                ),
                React.createElement(
                    _Pattern.Pattern,
                    { name: 'SortTable' },
                    React.createElement(
                        _Description.Description,
                        null,
                        'Drag Column Table'
                    ),
                    React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.ReactSortTable })
                ),
                React.createElement(
                    _Props.Props,
                    { name: 'ReactTable props' },
                    React.createElement(
                        _Prop.Prop,
                        { name: 'className', type: 'string', 'default': '' },
                        'Custom CSS class name to apply to ReactTable'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'columns', type: 'array', 'default': '', required: true },
                        'Object describing the header props and data model that represents each object in the data'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'data', type: 'array', 'default': '', required: true },
                        'Array of objects representing each item to show.'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'enableColumnDraggable', type: 'boolean', 'default': 'true' },
                        'If true, react table will display a dragbar to allow the user to drag the table row.'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'onExpand', type: 'string', 'default': '' },
                        'Callback function invoked when the row expand changes.'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'sortColumns', type: 'array', 'default': '' },
                        'Object describing the table sort columns'
                    )
                )
            );
        }
    }]);

    return ReactTablePattern;
}(React.Component);

exports.default = ReactTablePattern;

},{"./components/CodeEditor":43,"./components/CodeSamples":44,"./components/Description":45,"./components/Pattern":47,"./components/PatternGroup":48,"./components/Prop":49,"./components/Props":50,"react":"react"}],34:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SpinnerPattern = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _PatternGroup = require('./components/PatternGroup');

var _Pattern = require('./components/Pattern');

var _Description = require('./components/Description');

var _Props = require('./components/Props');

var _Prop = require('./components/Prop');

var _CodeEditor = require('./components/CodeEditor');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CodeSamples = require('./components/CodeSamples');

var SpinnerPattern = exports.SpinnerPattern = function (_React$Component) {
  _inherits(SpinnerPattern, _React$Component);

  function SpinnerPattern() {
    _classCallCheck(this, SpinnerPattern);

    return _possibleConstructorReturn(this, (SpinnerPattern.__proto__ || Object.getPrototypeOf(SpinnerPattern)).apply(this, arguments));
  }

  _createClass(SpinnerPattern, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        _PatternGroup.PatternGroup,
        { name: 'Spinner' },
        React.createElement(
          _Description.Description,
          null,
          'Spinner is used for loading, reloading, and more, to provide use a better experience.'
        ),
        React.createElement(
          _Pattern.Pattern,
          { name: 'Spinner' },
          React.createElement(
            _Description.Description,
            null,
            'This component use canvas to draw a gradient circle, and CSS3 animation to animate it.'
          ),
          React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.Spinner })
        ),
        React.createElement(
          _Props.Props,
          { name: 'Spinner props' },
          React.createElement(
            _Prop.Prop,
            { name: 'size', type: 'number', 'default': '60' },
            'Can be any number, but keep between 50 and 150 sounds good.'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'color', type: 'string', 'default': 'rgb(205,156,84)' },
            'Attention ! color can only be \'rgb()\' string, this is because component will change it to \'rgba()\' when drawing canvas.'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'speed', type: 'number', 'default': '2' },
            'How many seconds will the spinner spin a full cycle. Smaller is faster.'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'lineWidth', type: 'number', 'default': '2' },
            'How many pixels is the circle line width, default is 2.'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'fontStyle', type: 'Object', 'default': '{}' },
            'Custom inline style of the text font, just add {fontWeight: \'300\', fontStyle: \'italic\'}'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'style', type: 'Object', 'default': '{}' },
            'add inline style of the whole component, will help if you want to do vertical align middle.'
          )
        )
      );
    }
  }]);

  return SpinnerPattern;
}(React.Component);

},{"./components/CodeEditor":43,"./components/CodeSamples":44,"./components/Description":45,"./components/Pattern":47,"./components/PatternGroup":48,"./components/Prop":49,"./components/Props":50,"react":"react"}],35:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.TablePattern = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _PatternGroup = require('./components/PatternGroup');

var _Pattern = require('./components/Pattern');

var _Description = require('./components/Description');

var _Props = require('./components/Props');

var _Prop = require('./components/Prop');

var _CodeEditor = require('./components/CodeEditor');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CodeSamples = require('./components/CodeSamples');

var TablePattern = exports.TablePattern = function (_React$Component) {
    _inherits(TablePattern, _React$Component);

    function TablePattern() {
        _classCallCheck(this, TablePattern);

        return _possibleConstructorReturn(this, (TablePattern.__proto__ || Object.getPrototypeOf(TablePattern)).apply(this, arguments));
    }

    _createClass(TablePattern, [{
        key: 'render',
        value: function render() {
            return React.createElement(
                _PatternGroup.PatternGroup,
                { name: 'Table' },
                React.createElement(
                    _Description.Description,
                    null,
                    'Table Examples'
                ),
                React.createElement(
                    _Pattern.Pattern,
                    { name: 'SimpleTable' },
                    React.createElement(
                        _Description.Description,
                        null,
                        'Default Simple Table'
                    ),
                    React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.SimpleTable })
                ),
                React.createElement(
                    _Pattern.Pattern,
                    { name: 'TableRowGrouping' },
                    React.createElement(
                        _Description.Description,
                        null,
                        'Table with row grouping'
                    ),
                    React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.TableRowGrouping })
                ),
                React.createElement(
                    _Pattern.Pattern,
                    { name: 'TableCustomComponentInCell' },
                    React.createElement(
                        _Description.Description,
                        null,
                        'Table with custom component in cell - using the neptune button component in this example'
                    ),
                    React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.TableCustomComponentInCell })
                ),
                React.createElement(
                    _Pattern.Pattern,
                    { name: 'Table' },
                    React.createElement(
                        _Description.Description,
                        null,
                        'Default Table'
                    ),
                    React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.Table })
                ),
                React.createElement(
                    _Pattern.Pattern,
                    { name: 'TableObjectData' },
                    React.createElement(
                        _Description.Description,
                        null,
                        'Table with object data'
                    ),
                    React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.TableObjectData })
                ),
                React.createElement(
                    _Pattern.Pattern,
                    { name: 'TableLockedColumn' },
                    React.createElement(
                        _Description.Description,
                        null,
                        'Table with locked columns'
                    ),
                    React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.TableLockedColumn })
                ),
                React.createElement(
                    _Pattern.Pattern,
                    { name: 'TableCellHtml' },
                    React.createElement(
                        _Description.Description,
                        null,
                        'Table with custom cell rendering'
                    ),
                    React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.TableCellHtml })
                ),
                React.createElement(
                    _Pattern.Pattern,
                    { name: 'TableCallback' },
                    React.createElement(
                        _Description.Description,
                        null,
                        'Table with callback'
                    ),
                    React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.TableCallback })
                ),
                React.createElement(
                    _Pattern.Pattern,
                    { name: 'TableFixedHeader' },
                    React.createElement(
                        _Description.Description,
                        null,
                        'Table with fixed header'
                    ),
                    React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.TableFixedHeader })
                ),
                React.createElement(
                    _Pattern.Pattern,
                    { name: 'TableSortField' },
                    React.createElement(
                        _Description.Description,
                        null,
                        'Table with separate sort field'
                    ),
                    React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.TableSortField })
                ),
                React.createElement(
                    _Props.Props,
                    { name: 'Table props' },
                    React.createElement(
                        _Prop.Prop,
                        { name: 'columns', type: 'array', 'default': '' },
                        'The array of child columns for this table.Each column is a type of TableColumn class'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'enablePaging', type: 'boolean', 'default': 'true' },
                        'Flag to show or hide the paging control'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'pageLength', type: 'number', 'default': '20' },
                        'Size of the current page'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'enableSearch', type: 'boolean', 'default': 'true' },
                        'Flag to show or hide the search control'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'enableComponentUpdates', type: 'boolean', 'default': 'false' },
                        'Flag to enable component updates - defaults to false, so as to not cause any backwards compatibility issues. If set to true, the component will respond to props changes. Since DataTableWrapper wraps a jQuery component, we simply ignore any prop changes.'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'enableShowTotalCount', type: 'boolean', 'default': 'true' },
                        'Flag to show or hide the total count of the table records'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'enableOrdering', type: 'boolean', 'default': 'true' },
                        'Flag to enable or disable ordering for table'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'enableSearch', type: 'boolean', 'default': 'false' },
                        'Flag to show or hide the search control'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'enableVerticalScroll', type: 'boolean', 'default': 'falsetrue' },
                        'Flag to enable or disable the vertical scrolling behavior. When this is set to false, the table will grow until it renders all the data specified in the data array. If it is set to true, the table will have a fixed height and will render a scrollbar if the data exceeds that specified height.'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'enableHorizontalScroll', type: 'boolean', 'default': 'false' },
                        'Flag to enable or disable the horizontal scrolling behavior. When this is set to false, the table will fit all columns in the visible area. If it is set to true, the table will have a scrollbar that renders columns at their specified width.'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'enableDeferRender', type: 'boolean', 'default': 'true' },
                        'Render only the visible cells'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'enableScroll', type: 'boolean', 'default': 'false' },
                        'Shortcut to set both enableVerticalScroll and enableHorizontalScroll'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'enableColumnSettings', type: 'boolean', 'default': 'false' },
                        'Flag to enable or disable the settings btn [UX tbd] - This allows the user to choose columns to show.'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'enableFixedHeader', type: 'boolean', 'default': 'false' },
                        'Flag to enable or disable the fixed header functionality. Setting this to true will make the headers stick to the top when the user scrolls.'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'enableFixedGroupingRow', type: 'boolean', 'default': 'false' },
                        'Flag to enable or disable the fixed grouping row functionality. Setting this to true will make the group rows stick to the top when the user scrolls.'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'removeFirstGroupRow', type: 'boolean', 'default': 'false' },
                        'Remove first group row header, replace it with float header'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'fixedHeaderOffset', type: 'number', 'default': '20' },
                        'How far below the top of the window to render the fixed header. Defaults to zero, but you can change it if you have anything else fixed above this. For example, in CV2, we have the global sitewide fixed header on above the table header.'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'isLoading', type: 'boolean', 'default': 'false' },
                        'If true the table will displays a progress bar or a spinner icon'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'enableShowTotalCount', type: 'boolean', 'default': 'true' },
                        'Flag to show or hide the label "Showing X to Y of Z entries"'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'enableOrdering', type: 'boolean', 'default': 'true' },
                        'Flag to enable or disable ordering for table'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'defaultSortField', type: 'string, array[string]', 'default': '' },
                        'The name of a field in the data by which you want the data to be sorted by default.'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'rowGroupingField', type: 'string', 'default': '' },
                        'The name of a field in the data by which you want to group the rows. The grouped rows will show the data in a cell above the rest.'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'onColumnSortCallback', type: 'func', 'default': '' },
                        'Callback when user sort table by column'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'leftLockedCount', type: 'number', 'default': '0' },
                        'Number of columns to lock on the left.'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'rightLockedCount', type: 'number', 'default': '0' },
                        'Number of columns to lock on the right.'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'height', type: 'number', 'default': '300' },
                        'Height of the table component, in pixels, defaults to 300'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'rowCreatedCallback', type: 'func', 'default': '' },
                        'Call back function that takes the generated row, row data, and the index. Use this callback to perform any custom logic on the cells after it is created. Signature : (tr: any, data: any, index: any) => void;'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'headerCreatedCallback', type: 'func', 'default': '' },
                        'Call back function that takes the generated row, row data, and the index. Use this callback to perform any custom logic on the cells after it is created.'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'headerCreatedCallback', type: 'func', 'default': '' },
                        'Call back function that is called on every \'draw\' event (i.e. when a filter, sort or page event is initiated by the end user or the API), and allows you to dynamically modify the header row. This can be used to calculate and display useful information about the table. Signature : (thead: any, data: any, start: any, end: any, edisplaynd: any) => void'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'cellClickCallback', type: 'func', 'default': '' },
                        'Call back function that takes the generated cell, row data, and the index. \\ Use this callback to perform custom logic on click of any cell. Signature : (td: any, data: any, row: any, col: any) => void'
                    )
                )
            );
        }
    }]);

    return TablePattern;
}(React.Component);

},{"./components/CodeEditor":43,"./components/CodeSamples":44,"./components/Description":45,"./components/Pattern":47,"./components/PatternGroup":48,"./components/Prop":49,"./components/Props":50,"react":"react"}],36:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TabsPattern = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _PatternGroup = require('./components/PatternGroup');

var _Pattern = require('./components/Pattern');

var _Description = require('./components/Description');

var _Props = require('./components/Props');

var _Prop = require('./components/Prop');

var _CodeEditor = require('./components/CodeEditor');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CodeSamples = require('./components/CodeSamples');

var TabsPattern = exports.TabsPattern = function (_React$Component) {
  _inherits(TabsPattern, _React$Component);

  function TabsPattern() {
    _classCallCheck(this, TabsPattern);

    return _possibleConstructorReturn(this, (TabsPattern.__proto__ || Object.getPrototypeOf(TabsPattern)).apply(this, arguments));
  }

  _createClass(TabsPattern, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        _PatternGroup.PatternGroup,
        { name: 'Tabs' },
        React.createElement(
          _Pattern.Pattern,
          { name: 'Tabs' },
          React.createElement(
            _Description.Description,
            null,
            'Use of Tabs'
          ),
          React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.Tabs })
        ),
        React.createElement(
          _Props.Props,
          { name: 'Tabs props' },
          React.createElement(
            _Prop.Prop,
            { name: 'className', type: 'string', 'default': '' },
            'Custom CSS class name to apply to element'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'onAfterChange', type: 'func', 'default': '' },
            'Event handler after selected tab changed'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'onBeforeChange', type: 'func', 'default': '' },
            'Event handler before selected tab changed'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'onMount', type: 'func', 'default': '' },
            'Event handler initializing tabs'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'tabActive', type: 'number', 'default': '' },
            'Set active tab in the tabs'
          )
        ),
        React.createElement(
          _Props.Props,
          { name: 'TabPanel props' },
          React.createElement(
            _Prop.Prop,
            { name: 'className', type: 'string', 'default': '' },
            'Custom CSS class name to apply to element'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'title', type: 'string', 'default': '' },
            'Set tab title'
          )
        )
      );
    }
  }]);

  return TabsPattern;
}(React.Component);

},{"./components/CodeEditor":43,"./components/CodeSamples":44,"./components/Description":45,"./components/Pattern":47,"./components/PatternGroup":48,"./components/Prop":49,"./components/Props":50,"react":"react"}],37:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TextBoxPattern = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _PatternGroup = require('./components/PatternGroup');

var _Pattern = require('./components/Pattern');

var _Description = require('./components/Description');

var _Props = require('./components/Props');

var _Prop = require('./components/Prop');

var _CodeEditor = require('./components/CodeEditor');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CodeSamples = require('./components/CodeSamples');

var TextBoxPattern = exports.TextBoxPattern = function (_React$Component) {
  _inherits(TextBoxPattern, _React$Component);

  function TextBoxPattern() {
    _classCallCheck(this, TextBoxPattern);

    return _possibleConstructorReturn(this, (TextBoxPattern.__proto__ || Object.getPrototypeOf(TextBoxPattern)).apply(this, arguments));
  }

  _createClass(TextBoxPattern, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        _PatternGroup.PatternGroup,
        { name: 'TextBox' },
        React.createElement(
          _Pattern.Pattern,
          { name: 'Simple TextBox' },
          React.createElement(
            _Description.Description,
            null,
            'Example of a basic TextBox rendering and event handling'
          ),
          React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.TextBox })
        ),
        React.createElement(
          _Pattern.Pattern,
          { name: 'Multiline TextBox' },
          React.createElement(
            _Description.Description,
            null,
            'Multiline TextBox example using textarea'
          ),
          React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.MultilineTextBox })
        ),
        React.createElement(
          _Pattern.Pattern,
          { name: 'Multiple text boxes' },
          React.createElement(
            _Description.Description,
            null,
            'Example of building a fluid form with text boxes in a grid'
          ),
          React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.TextBoxInForm })
        ),
        React.createElement(
          _Props.Props,
          { name: 'TextBox props' },
          React.createElement(
            _Prop.Prop,
            { name: 'name', type: 'string', 'default': '' },
            'Set textbox element name'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'placeholder', type: 'string', 'default': '' },
            'Placeholder for the input'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'width', type: 'number', 'default': '100%' },
            'Set textbox width'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'value', type: 'string', 'default': '' },
            'Set textbox value'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'className', type: 'string', 'default': '' },
            'Set css class'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'disabled', type: 'boolean', 'default': 'false' },
            'When set to true textbox will be disabled and will no longer accept any events'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'multiline', type: 'boolean', 'default': 'false' },
            'When set to true textbox will render as a textarea'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'error', type: 'boolean', 'default': '' },
            'When set to true textbox will be displayed by the error style'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'onFocus', type: 'function', 'default': '' },
            'Callback that will be invoked when user focus on the textbox'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'onBlur', type: 'function', 'default': '' },
            'Callback that will be invoked when user onblur on the textbox'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'onChange', type: 'function', 'default': '' },
            'Callback that will be invoked when user change the text in the textbox'
          )
        )
      );
    }
  }]);

  return TextBoxPattern;
}(React.Component);

},{"./components/CodeEditor":43,"./components/CodeSamples":44,"./components/Description":45,"./components/Pattern":47,"./components/PatternGroup":48,"./components/Prop":49,"./components/Props":50,"react":"react"}],38:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ToggleButtonPattern = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _PatternGroup = require('./components/PatternGroup');

var _Pattern = require('./components/Pattern');

var _Description = require('./components/Description');

var _Props = require('./components/Props');

var _Prop = require('./components/Prop');

var _CodeEditor = require('./components/CodeEditor');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CodeSamples = require('./components/CodeSamples');

var ToggleButtonPattern = exports.ToggleButtonPattern = function (_React$Component) {
    _inherits(ToggleButtonPattern, _React$Component);

    function ToggleButtonPattern() {
        _classCallCheck(this, ToggleButtonPattern);

        return _possibleConstructorReturn(this, (ToggleButtonPattern.__proto__ || Object.getPrototypeOf(ToggleButtonPattern)).apply(this, arguments));
    }

    _createClass(ToggleButtonPattern, [{
        key: 'render',
        value: function render() {
            return React.createElement(
                _PatternGroup.PatternGroup,
                { name: 'ToggleButton' },
                React.createElement(
                    _Pattern.Pattern,
                    { name: 'ToggleButton' },
                    React.createElement(
                        _Description.Description,
                        null,
                        'Use of ToggleButton'
                    ),
                    React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.ToggleButton })
                ),
                React.createElement(
                    _Props.Props,
                    { name: 'ToggleButton props' },
                    React.createElement(
                        _Prop.Prop,
                        { name: 'disabled', type: 'boolean', 'default': 'false' },
                        'If true, disabled property gets passed down to child elements'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'selected', type: 'number', 'default': '', required: true },
                        'Zero-based index of selected child'
                    )
                )
            );
        }
    }]);

    return ToggleButtonPattern;
}(React.Component);

},{"./components/CodeEditor":43,"./components/CodeSamples":44,"./components/Description":45,"./components/Pattern":47,"./components/PatternGroup":48,"./components/Prop":49,"./components/Props":50,"react":"react"}],39:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TooltipPattern = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _PatternGroup = require('./components/PatternGroup');

var _Pattern = require('./components/Pattern');

var _Description = require('./components/Description');

var _CodeEditor = require('./components/CodeEditor');

var _Props = require('./components/Props');

var _Prop = require('./components/Prop');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CodeSamples = require('./components/CodeSamples');

var TooltipPattern = exports.TooltipPattern = function (_React$Component) {
  _inherits(TooltipPattern, _React$Component);

  function TooltipPattern() {
    _classCallCheck(this, TooltipPattern);

    return _possibleConstructorReturn(this, (TooltipPattern.__proto__ || Object.getPrototypeOf(TooltipPattern)).apply(this, arguments));
  }

  _createClass(TooltipPattern, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        _PatternGroup.PatternGroup,
        { name: 'Tooltip' },
        React.createElement(
          _Description.Description,
          null,
          'Basic Tooltip controls, show overlay when trigger event happens on the child element.'
        ),
        React.createElement(
          _Pattern.Pattern,
          { name: 'Tooltips Default' },
          React.createElement(
            _Description.Description,
            null,
            'Default Tooltip'
          ),
          React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.DefaultTooltip })
        ),
        React.createElement(
          _Props.Props,
          { name: 'Tooltips props' },
          React.createElement(
            _Prop.Prop,
            { name: 'tooltipTrigger', type: 'any', 'default': '', required: true },
            'The element that can trigger tooltip when mouse hove the type could be any'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'tooltipText', type: 'string', 'default': '', required: true },
            'Tooltiptext to show when it be triggered'
          ),
          React.createElement(
            _Prop.Prop,
            { name: 'align', type: 'string', 'default': 'top-right', required: true },
            'The align prop should be one of[\'top-right\', \'top-left\', \'right\', \'left\', \'bottom-right\', \'bottom-left\', \'right-top\', \'left-top\', \'right-bottom\', \'left-bottom\']'
          )
        )
      );
    }
  }]);

  return TooltipPattern;
}(React.Component);

},{"./components/CodeEditor":43,"./components/CodeSamples":44,"./components/Description":45,"./components/Pattern":47,"./components/PatternGroup":48,"./components/Prop":49,"./components/Props":50,"react":"react"}],40:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.TreePattern = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _PatternGroup = require('./components/PatternGroup');

var _Pattern = require('./components/Pattern');

var _Description = require('./components/Description');

var _Props = require('./components/Props');

var _Prop = require('./components/Prop');

var _CodeEditor = require('./components/CodeEditor');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CodeSamples = require('./components/CodeSamples');

var TreePattern = exports.TreePattern = function (_React$Component) {
    _inherits(TreePattern, _React$Component);

    function TreePattern() {
        _classCallCheck(this, TreePattern);

        return _possibleConstructorReturn(this, (TreePattern.__proto__ || Object.getPrototypeOf(TreePattern)).apply(this, arguments));
    }

    _createClass(TreePattern, [{
        key: 'render',
        value: function render() {
            return React.createElement(
                _PatternGroup.PatternGroup,
                { name: 'Tree' },
                React.createElement(
                    _Pattern.Pattern,
                    { name: 'Tree' },
                    React.createElement(
                        _Description.Description,
                        null,
                        'Tree component'
                    ),
                    React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.Tree })
                ),
                React.createElement(
                    _Pattern.Pattern,
                    { name: 'Checkbox Tree' },
                    React.createElement(
                        _Description.Description,
                        null,
                        'Tree component with checkboxes'
                    ),
                    React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.TreeCheckbox })
                ),
                React.createElement(
                    _Pattern.Pattern,
                    { name: 'CustomCheckbox Tree' },
                    React.createElement(
                        _Description.Description,
                        null,
                        'Checkbox Tree component with custom rendering and no root'
                    ),
                    React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.TreeCheckboxCustom })
                ),
                React.createElement(
                    _Props.Props,
                    { name: 'Tree props' },
                    React.createElement(
                        _Prop.Prop,
                        { name: 'className', type: 'string', 'default': '' },
                        'Custom CSS class name to apply to element'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'title', type: 'string/object', 'default': '', required: true },
                        'Title of the tree node. Optional for the root and if ommited for the root no root will be rendered.'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'name', type: 'string', 'default': '' },
                        'Name for the tree node'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'id', type: 'string', 'default': '' },
                        'User can assign an id to tree element.'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'checkbox', type: 'boolean', 'default': 'false' },
                        'To create a checkbox tree'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'checked', type: 'boolean', 'default': 'false' },
                        'When true Checkbox appears as checked'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'visible', type: 'boolean', 'default': 'true' },
                        'Tree node will be hidden if false'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'expanded', type: 'boolean', 'default': 'false' },
                        'When true tree loads in all-expand mode'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'showAllCollapseExpand', type: 'boolean', 'default': 'false' },
                        'When true icon to collapse/expand all appears'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'onCollpaseExpandClick', type: 'func', 'default': '' },
                        'Callback when expand or collapse the node'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'onNodeCheckboxClick', type: 'func', 'default': '' },
                        'Callback when user check/uncheck checkbox'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'inheritState', type: 'boolean', 'default': 'true' },
                        'When true children inherit checkbox select/deselect state of parent'
                    )
                )
            );
        }
    }]);

    return TreePattern;
}(React.Component);

},{"./components/CodeEditor":43,"./components/CodeSamples":44,"./components/Description":45,"./components/Pattern":47,"./components/PatternGroup":48,"./components/Prop":49,"./components/Props":50,"react":"react"}],41:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.TypeaheadPattern = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _PatternGroup = require('./components/PatternGroup');

var _Pattern = require('./components/Pattern');

var _Description = require('./components/Description');

var _CodeEditor = require('./components/CodeEditor');

var _Props = require('./components/Props');

var _Prop = require('./components/Prop');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CodeSamples = require('./components/CodeSamples');

var TypeaheadPattern = exports.TypeaheadPattern = function (_React$Component) {
    _inherits(TypeaheadPattern, _React$Component);

    function TypeaheadPattern() {
        _classCallCheck(this, TypeaheadPattern);

        return _possibleConstructorReturn(this, (TypeaheadPattern.__proto__ || Object.getPrototypeOf(TypeaheadPattern)).apply(this, arguments));
    }

    _createClass(TypeaheadPattern, [{
        key: 'render',
        value: function render() {
            return React.createElement(
                _PatternGroup.PatternGroup,
                { name: 'Typeahead' },
                React.createElement(
                    _Description.Description,
                    null,
                    'Typeahead control'
                ),
                React.createElement(
                    _Pattern.Pattern,
                    { name: 'Static Typeahead' },
                    React.createElement(
                        _Description.Description,
                        null,
                        'Typeahead searches item using static source provided with configuration of Typeahead control'
                    ),
                    React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.Typeahead })
                ),
                React.createElement(
                    _Pattern.Pattern,
                    { name: 'Server Typeahead' },
                    React.createElement(
                        _Description.Description,
                        null,
                        'Typehead searches item from the server and provides results back to the control'
                    ),
                    React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.TypeaheadServer })
                ),
                React.createElement(
                    _Pattern.Pattern,
                    { name: 'Custom Typeahead' },
                    React.createElement(
                        _Description.Description,
                        null,
                        'User have capability to render result as needed with paging on scroll.'
                    ),
                    React.createElement(_CodeEditor.CodeEditor, { codeText: CodeSamples.TypeaheadCustomRender })
                ),
                React.createElement(
                    _Props.Props,
                    { name: 'Typeahead props' },
                    React.createElement(
                        _Prop.Prop,
                        { name: 'charCount', type: 'number', 'default': '1' },
                        'Minimum number of characters required to trigger the search'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'className', type: 'string', 'default': '' },
                        'Custom CSS class name to apply to element'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'delay', type: 'number', 'default': '250' },
                        'Delay before search triggers (in milliseconds) and to disable the timer/delay set it to 0'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'listHeight', type: 'number', 'default': '250' },
                        'Height of the result list (in px)'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'multiSelect', type: 'boolean', 'default': 'false' },
                        'When true results will display with checkboxes to select multiple results'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'multiSelectButtonText', type: 'string', 'default': '' },
                        'Button text for multi select ok button'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'onRender', type: 'func', 'default': '' },
                        'Callback where user can provide how the result would render'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'onSearch', type: 'func', 'default': '' },
                        'Callback when user needs to search on server.'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'onSelected', type: 'func', 'default': '' },
                        'Callback when user select item(s) from the suggested list and a string can be return to appear in the input'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'options', type: 'string', 'default': '' },
                        'Array of string to search from,  for example \'Banking, Finance, Human Resources\''
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'pageSize', type: 'number', 'default': '0' },
                        'Page size for paging'
                    ),
                    React.createElement(
                        _Prop.Prop,
                        { name: 'placeholder', type: 'string', 'default': 'Search' },
                        'Placeholder for search input'
                    )
                )
            );
        }
    }]);

    return TypeaheadPattern;
}(React.Component);

},{"./components/CodeEditor":43,"./components/CodeSamples":44,"./components/Description":45,"./components/Pattern":47,"./components/PatternGroup":48,"./components/Prop":49,"./components/Props":50,"react":"react"}],42:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Canvas = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var style = require('./style.less');

var Canvas = exports.Canvas = function (_React$Component) {
    _inherits(Canvas, _React$Component);

    function Canvas() {
        _classCallCheck(this, Canvas);

        return _possibleConstructorReturn(this, (Canvas.__proto__ || Object.getPrototypeOf(Canvas)).apply(this, arguments));
    }

    _createClass(Canvas, [{
        key: 'render',
        value: function render() {
            return React.createElement(
                'div',
                { className: style.canvas },
                React.createElement(
                    'div',
                    { className: style.label },
                    'EXAMPLES'
                ),
                this.props.children
            );
        }
    }]);

    return Canvas;
}(React.Component);

},{"./style.less":52,"react":"react"}],43:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CodeEditor = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _reactDom = require('react-dom');

var ReactDOM = _interopRequireWildcard(_reactDom);

var _codemirror = require('codemirror');

var CodeMirror = _interopRequireWildcard(_codemirror);

var _babelStandalone = require('babel-standalone');

var Babel = _interopRequireWildcard(_babelStandalone);

var _Example = require('./Example');

var _Canvas = require('./Canvas');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var style = require('./style.less');
require('codemirror/mode/jsx/jsx');
require('./codemirror.css');

/* eslint-disable */
var fusionApi = require('../../../../fusionApi').default;
var Icon = require('../../../../../src/components/Icon').default;
var NavMenu = require('../../../../../src/components/NavMenu').default;
var Button = require('../../../../../src/components/Button').default;
var ButtonToolbar = require('../../../../../src/components/ButtonToolbar').default;
var Label = require('../../../../../src/components/Label').default;
var Grid = require('../../../../../src/components/Grid').default;
var Row = require('../../../../../src/components/Grid/Row').default;
var Column = require('../../../../../src/components/Grid/Column').default;
var Tabs = require('../../../../../src/components/Tabs').default;
var TabPanel = require('../../../../../src/components/Tabs/TabPanel').default;
var Link = require('../../../../../src/components/Link').default;
var Spinner = require('../../../../../src/components/Spinner').default;
var Radio = require('../../../../../src/components/Radio').default;
var RadioGroup = require('../../../../../src/components/RadioGroup').default;
var Dropdown = require('../../../../../src/components/Dropdown').default;
var DropdownList = require('../../../../../src/components/DropdownList').default;
var Pager = require('../../../../../src/components/Pager').default;
var Modal = require('../../../../../src/components/Modal').default;
var TextBox = require('../../../../../src/components/TextBox').default;
var CheckBox = require('../../../../../src/components/CheckBox').default;
var Table = require('../../../../../src/components/Table').default;
var superagent = require('superagent');
var TableColumn = require('../../../../../src/components/Table/TableColumn').default;
var DateInput = require('../../../../../src/components/DateInput').default;
var Accordion = require('../../../../../src/components/Accordion').default;
var Panel = require('../../../../../src/components/Panel').default;
var PanelGroup = require('../../../../../src/components/PanelGroup').default;
var Drawers = require('../../../../../src/components/Drawers').default;
var Popover = require('../../../../../src/components/Popover').default;
var Typeahead = require('../../../../../src/components/Typeahead').default;
var Tree = require('../../../../../src/components/Tree').default;
var TreeNode = require('../../../../../src/components/Tree/TreeNode').default;
var ToggleButton = require('../../../../../src/components/ToggleButton').default;
var MultiDropdown = require('../../../../../src/components/MultiDropdown').default;
var Content = require('../../../../../src/components/Popover/Content').default;
var PopoverTrigger = require('../../../../../src/components/Popover/Trigger').default;

var _require = require('../../../../../src/components/ButtonGroup');

var ButtonGroup = _require.ButtonGroup;
var ButtonGroupItem = _require.ButtonGroupItem;

var LiteTable = require('../../../../../src/components/LiteTable').default;
var ReactTable = require('../../../../../src/components/ReactTable').default;
var DrillDown = require('../../../../../src/components/DrillDown').default;
var ComboBox = require('../../../../../src/components/ComboBox').default;
var AlertBanner = require('../../../../../src/components/AlertBanner').default;
var Tooltip = require('../../../../../src/components/Tooltip').default;
/* eslint-enable */

var CodeViewer = function (_React$Component) {
    _inherits(CodeViewer, _React$Component);

    function CodeViewer(props) {
        _classCallCheck(this, CodeViewer);

        var _this = _possibleConstructorReturn(this, (CodeViewer.__proto__ || Object.getPrototypeOf(CodeViewer)).call(this, props));

        _this.editor = null;
        _this.ctrls = { editor: null };
        _this.handleChange = _this.handleChange.bind(_this);
        return _this;
    }

    _createClass(CodeViewer, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            // wrap in a div to fully contain CodeMirror
            /* eslint no-return-assign: 0, react/jsx-no-bind: 0*/
            var editorEl = React.createElement('textarea', { ref: function ref(editor) {
                    return _this2.ctrls.editor = editor;
                }, defaultValue: this.props.codeText });
            return React.createElement(
                'div',
                { className: style.code },
                editorEl
            );
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            if (CodeMirror === undefined) {
                return;
            }
            var config = {
                lineNumbers: true,
                lineWrapping: false,
                mode: 'jsx',
                readOnly: this.props.readonly === undefined ? false : this.props.readonly,
                tabSize: 2,
                theme: 'monokai'
            };
            this.editor = CodeMirror.fromTextArea(this.ctrls.editor, config);
            this.editor.setSize(null, '100%');
            this.editor.on('change', this.handleChange);
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate() {
            if (this.props.readonly) {
                this.editor.setValue(this.props.codeText);
            }
        }
    }, {
        key: 'handleChange',
        value: function handleChange() {
            if (!this.props.readonly && this.props.onChange) {
                this.props.onChange(this.editor.getValue());
            }
        }
    }]);

    return CodeViewer;
}(React.Component);

var SelfCleaningTimeoutMixin = {
    componentDidUpdate: function componentDidUpdate() {
        clearTimeout(this.timeoutId);
    },
    updateTimeout: function updateTimeout() {
        clearTimeout(this.timeoutId);
        this.timeoutId = setTimeout.apply(null, arguments);
    }
};

var CodeEditor = exports.CodeEditor = React.createClass({
    displayName: 'CodeEditor',
    /* eslint react/prefer-es6-class: 0 */
    mixins: [SelfCleaningTimeoutMixin],
    getInitialState: function getInitialState() {
        return {
            code: this.props.codeText,
            codeChanged: false,
            showCode: true
        };
    },
    render: function render() {
        return React.createElement(
            _Example.Example,
            null,
            React.createElement(
                _Canvas.Canvas,
                null,
                this.renderExample()
            ),
            this.renderEditor()
        );
    },
    DOMRenderHook: function DOMRenderHook(element) {
        // console.log('hooked');
        this._initialExample = element;
    },
    componentWillMount: function componentWillMount() {
        // For the initial render, we can hijack React.render to intercept the
        // example element and render it normally. This is safe because it's code
        // that we supply, so we can ensure ahead of time that it won't throw an
        // exception while rendering.
        var originalRender = ReactDOM.render;
        ReactDOM.render = this.DOMRenderHook;
        // Stub out mountNode for the example code.
        var mountNode = null; /* eslint no-unused-vars: 0*/
        try {
            var compiledCode = this.transformer(this.props.codeText);
            // const compiler: Function = new Function(compiledCode);
            // compiler();      
            eval(compiledCode); /* eslint no-eval: 0 */
        } finally {
            ReactDOM.render = originalRender;
        }
    },
    componentWillUnmount: function componentWillUnmount() {
        this.clearExample();
    },
    handleCodeChange: function handleCodeChange(value) {
        this.setState({ code: value, codeChanged: true, showCode: true }, this.executeCode);
    },
    renderExample: function renderExample() {
        var example = void 0;
        if (this.state.codeChanged) {
            example = React.createElement('div', { ref: 'mount' });
        } else {
            if (this._initialExample === undefined) {
                console.error('_initial example cannot be undefined');
            }
            example = React.createElement(
                'div',
                null,
                this._initialExample
            );
        }
        return React.createElement(
            'div',
            null,
            example
        );
    },
    renderEditor: function renderEditor() {
        if (!this.state.showCode) {
            return null;
        }
        return React.createElement(CodeViewer, { key: 'jsx', onChange: this.handleCodeChange, codeText: this.state.code });
    },
    clearExample: function clearExample() {
        if (!this.state.codeChanged) {
            return null;
        }
        var mountNode = this.refs.mount;
        try {
            ReactDOM.unmountComponentAtNode(mountNode);
        } catch (e) {
            console.error(e); // eslint-disable-line no-console
        }
        return mountNode;
    },
    executeCode: function executeCode() {
        var mountNode = this.clearExample();
        console.log('code executed: ' + mountNode);
        var compiledCode = null;
        try {
            compiledCode = this.transformer(this.state.code);
            //  const compiler: Function = new Function(compiledCode);
            //  compiler();      
            eval(compiledCode); /* eslint no-eval: 0 */
        } catch (err) {
            if (compiledCode !== null) {
                console.log(err, compiledCode); // eslint-disable-line no-console
            } else {
                console.log(err); // eslint-disable-line no-console
            }
            this.updateTimeout(function () {
                ReactDOM.render(React.createElement(
                    'span',
                    null,
                    err.toString()
                ), mountNode);
            }, 500);
        }
    },
    transformer: function transformer(code) {
        return Babel.transform(code, { plugins: ['transform-react-jsx'], presets: ['es2015'] }).code;
    }
});
// https://github.com/react-bootstrap/react-bootstrap/blob/master/docs/src/ReactPlayground.js

},{"../../../../../src/components/Accordion":74,"../../../../../src/components/AlertBanner":76,"../../../../../src/components/Button":82,"../../../../../src/components/ButtonGroup":78,"../../../../../src/components/ButtonToolbar":80,"../../../../../src/components/CheckBox":84,"../../../../../src/components/ComboBox":87,"../../../../../src/components/DateInput":91,"../../../../../src/components/Drawers":97,"../../../../../src/components/DrillDown":103,"../../../../../src/components/Dropdown":107,"../../../../../src/components/DropdownList":105,"../../../../../src/components/Grid":111,"../../../../../src/components/Grid/Column":109,"../../../../../src/components/Grid/Row":110,"../../../../../src/components/Icon":134,"../../../../../src/components/Label":136,"../../../../../src/components/Link":139,"../../../../../src/components/LiteTable":144,"../../../../../src/components/Modal":155,"../../../../../src/components/MultiDropdown":161,"../../../../../src/components/NavMenu":166,"../../../../../src/components/Pager":168,"../../../../../src/components/Panel":172,"../../../../../src/components/PanelGroup":170,"../../../../../src/components/Popover":177,"../../../../../src/components/Popover/Content":174,"../../../../../src/components/Popover/Trigger":176,"../../../../../src/components/Radio":181,"../../../../../src/components/RadioGroup":179,"../../../../../src/components/ReactTable":201,"../../../../../src/components/Spinner":203,"../../../../../src/components/Table":210,"../../../../../src/components/Table/TableColumn":209,"../../../../../src/components/Tabs":213,"../../../../../src/components/Tabs/TabPanel":212,"../../../../../src/components/TextBox":215,"../../../../../src/components/ToggleButton":217,"../../../../../src/components/Tooltip":219,"../../../../../src/components/Tree":222,"../../../../../src/components/Tree/TreeNode":221,"../../../../../src/components/Typeahead":224,"../../../../fusionApi":63,"./Canvas":42,"./Example":46,"./codemirror.css":51,"./style.less":52,"babel-standalone":"babel-standalone","codemirror":"codemirror","codemirror/mode/jsx/jsx":"codemirror/mode/jsx/jsx","react":"react","react-dom":"react-dom","superagent":"superagent"}],44:[function(require,module,exports){
'use strict';


var CodeSamples = {
    Icon: "const IconInstance = (<div>\r\n    <div>\r\n        <table className = \"rc-table\" style = {{\"width\": \"80%\", \"textAlign\": \"center\"}}>\r\n            <thead>\r\n                <tr>\r\n                <th>Name</th>\r\n                <th>Default</th>\r\n                <th>Color</th>\r\n                <th>Zoom</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            <tr>\r\n                <td>arrow-down</td>\r\n                <td><Icon name=\"arrow-down\"/></td>\r\n                <td>RED:<Icon name=\"arrow-down\" color = \"RED\"/></td>\r\n                <td><Icon name=\"arrow-down\" zoom = \"1.5\"/></td>\r\n            </tr>\r\n            <tr>\r\n                <td>arrow-left</td>\r\n                <td><Icon name=\"arrow-left\"/></td>\r\n                <td>MA_BLUE:<Icon name=\"arrow-left\" color = \"MA_BLUE\"/></td>\r\n                <td><Icon name=\"arrow-left\" zoom = \"1.5\"/></td>\r\n            </tr>\r\n            <tr>\r\n                <td>arrow-right</td>\r\n                <td><Icon name=\"arrow-right\"/></td>\r\n                <td>MIS_BLUE:<Icon name=\"arrow-right\" color = \"MIS_BLUE\"/></td>\r\n                <td><Icon name=\"arrow-right\" zoom = \"1.5\"/></td>\r\n            </tr>\r\n            <tr>\r\n                <td>arrow-sort</td>\r\n                <td><Icon name=\"arrow-sort\"/></td>\r\n                <td>MOODYS_BLUE:<Icon name=\"arrow-sort\" color = \"MOODYS_BLUE\"/></td>\r\n                <td><Icon name=\"arrow-sort\" zoom = \"1.5\"/></td>\r\n            </tr>\r\n            <tr>\r\n                <td>arrow-up</td>\r\n                <td><Icon name=\"arrow-up\"/></td>\r\n                <td>GOLD:<Icon name=\"arrow-up\" color = \"GOLD\"/></td>\r\n                <td><Icon name=\"arrow-up\" zoom = \"1.5\"/></td>\r\n            </tr>\r\n            <tr>\r\n                <td>bell</td>\r\n                <td><Icon name=\"bell\"/></td>\r\n                <td>BLACK:<Icon name=\"bell\" color = \"BLACK\"/></td>\r\n                <td><Icon name=\"bell\" zoom = \"1.5\"/></td>\r\n            </tr>\r\n            <tr>\r\n                <td>calendar</td>\r\n                <td><Icon name=\"calendar\"/></td>\r\n                <td>GREY_4:<Icon name=\"calendar\" color = \"GREY_4\"/></td>\r\n                <td><Icon name=\"calendar\" zoom = \"1.5\"/></td>\r\n            </tr>\r\n            <tr>\r\n                <td>checkmark</td>\r\n                <td><Icon name=\"checkmark\"/></td>\r\n                <td>GREY_3_4:<Icon name=\"checkmark\" color = \"GREY_3_4\"/></td>\r\n                <td><Icon name=\"checkmark\" zoom = \"1.5\"/></td>\r\n            </tr>\r\n            <tr>\r\n                <td>close</td>\r\n                <td><Icon name=\"close\"/></td>\r\n                <td>GREY_3_3:<Icon name=\"close\" color = \"GREY_3_3\"/></td>\r\n                <td><Icon name=\"close\" zoom = \"1.5\"/></td>\r\n            </tr>\r\n            <tr>\r\n                <td>document</td>\r\n                <td><Icon name=\"document\"/></td>\r\n                <td>GREY_3_2:<Icon name=\"document\" color = \"GREY_3_2\"/></td>\r\n                <td><Icon name=\"document\" zoom = \"1.5\"/></td>\r\n            </tr>\r\n            <tr>\r\n                <td>globe</td>\r\n                <td><Icon name=\"globe\"/></td>\r\n                <td>GREY_3_1:<Icon name=\"globe\" color = \"GREY_3_1\"/></td>\r\n                <td><Icon name=\"globe\" zoom = \"1.5\"/></td>\r\n            </tr>\r\n            <tr>\r\n                <td>information</td>\r\n                <td><Icon name=\"information\"/></td>\r\n                <td>GREY_3:<Icon name=\"information\" color = \"GREY_3\"/></td>\r\n                <td><Icon name=\"information\" zoom = \"1.5\"/></td>\r\n            </tr>\r\n            <tr>\r\n                <td>search</td>\r\n                <td><Icon name=\"search\"/></td>\r\n                <td>GREY_2_1:<Icon name=\"search\" color = \"GREY_2_1\"/></td>\r\n                <td><Icon name=\"search\" zoom = \"1.5\"/></td>\r\n            </tr>\r\n            <tr>\r\n                <td>slider</td>\r\n                <td><Icon name=\"slider\"/></td>\r\n                <td>GREY_2:<Icon name=\"slider\" color = \"GREY_2\"/></td>\r\n                <td><Icon name=\"slider\" zoom = \"1.5\"/></td>\r\n            </tr>\r\n            <tr>\r\n                <td>speech-bubble</td>\r\n                <td><Icon name=\"speech-bubble\"/></td>\r\n                <td>GREY_1:<Icon name=\"speech-bubble\" color = \"GREY_1\"/></td>\r\n                <td><Icon name=\"speech-bubble\" zoom = \"1.5\"/></td>\r\n            </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n    </div>);\r\nReactDOM.render(IconInstance, mountNode);\r\n",
    DefaultNavMenu: "const DefaultNavMenu = React.createClass({\r\n    render() {\r\n        var menuItems = [\r\n            {\r\n                label: 'Summary',\r\n                url: \"\",\r\n                disabled: false,\r\n                active: true,\r\n                pjax: true,\r\n                children: []\r\n            },\r\n            {\r\n                label: 'Research',\r\n                url: \"\",\r\n                disabled: false,\r\n                pjax: true,\r\n                active: false\r\n            },\r\n            {\r\n                label: 'Ratings',\r\n                url: \"\",\r\n                disabled: false,\r\n                pjax: true,\r\n                active: false\r\n            },\r\n            {\r\n                label: 'Capital Structure',\r\n                url: \"\",\r\n                disabled: false,\r\n                pjax: true,\r\n                active: false\r\n            },\r\n            {\r\n                label: 'Financials',\r\n                url: \"\",\r\n                disabled: false,\r\n                active: false,\r\n                children: [\r\n                    { label: 'key Indicators', url: \"\", disabled: false, pjax: true, active: true },\r\n                    { label: 'Income Statement', url: \"\", disabled: false, pjax: true },\r\n                    { label: 'Balance Sheet', url: \"\", disabled: false },\r\n                    { label: 'Supplemental Data', url: \"http://www.moodys.com\", target: \"_blank\", pjax: true, disabled: false },\r\n                    { label: 'All Ratios', url: \"http://www.moodys.com\", disabled: true }\r\n                ]\r\n            },\r\n            {\r\n                label: 'Market Signals',\r\n                url: \"http://www.moodys.com\",\r\n                disabled: false,\r\n                active: false\r\n            },\r\n            {\r\n                label: 'Disable - demo',\r\n                url: \"http://www.moodys.com\",\r\n                disabled: true,\r\n                active: false\r\n            }\r\n        ];\r\n        return <NavMenu menuItems={menuItems} topBold/>;\r\n    }\r\n});\r\nReactDOM.render(<DefaultNavMenu />, mountNode);\r\n",
    DefaultButton: "const buttonsInstance = (<ButtonToolbar>\r\n    <Button>Button</Button>\r\n    <Button disabled>Disabled</Button>\r\n    <Button primary>Primary button</Button>\r\n    <Button primary disabled>Primary Disabllled</Button>\r\n  </ButtonToolbar>);\r\nReactDOM.render(buttonsInstance, mountNode);\r\n",
    ButtonToolbar: "const buttonsInstance = (<ButtonToolbar>\r\n    <Button primary>Button 1</Button>\r\n    <Button>Button 2</Button>\r\n    <Button secondary>Button 3</Button>\r\n    <Button>Button 4</Button>\r\n    <Button>Button 5</Button>\r\n    <Button>Button 6</Button>\r\n  </ButtonToolbar>);\r\nReactDOM.render(buttonsInstance, mountNode);\r\n",
    StateButton: "const StateButton = React.createClass({\r\n    getInitialState() {\r\n        return {\r\n            isLoading: false\r\n        };\r\n    },\r\n    render() {\r\n        let isLoading = this.state.isLoading;\r\n        return (<Button disabled={isLoading} onClick={!isLoading ? this.handleClick : null}>\r\n        {isLoading ? 'Loading...' : 'Loading state'}\r\n      </Button>);\r\n    },\r\n    handleClick() {\r\n        this.setState({ isLoading: true });\r\n        // This probably where you would have an `ajax` call\r\n        setTimeout(() => {\r\n            // Completed of async action, set loading state back\r\n            this.setState({ isLoading: false });\r\n        }, 2000);\r\n    }\r\n});\r\nReactDOM.render(<StateButton />, mountNode);\r\n",
    DisabledButton: "const DisabledButton = React.createClass({\r\n    render() {\r\n        return (<ButtonToolbar>\r\n        <Button onClick={this.handleClick}>Click Me</Button>\r\n        <Button disabled onClick={this.handleClick}>Can't click me</Button>\r\n      </ButtonToolbar>);\r\n    },\r\n    handleClick() {\r\n        alert('clicked');\r\n    }\r\n});\r\nReactDOM.render(<DisabledButton />, mountNode);\r\n",
    BasicGrid: "const cellStyle = {\r\n    background: '#eee',\r\n    height: '100px',\r\n    marginBottom: '20px',\r\n    position: 'relative'\r\n};\r\nconst cellValueStyle = {\r\n    position: 'absolute',\r\n    bottom: '10px',\r\n    right: '10px',\r\n    color: '#888',\r\n    width: '50px',\r\n    height: '50px',\r\n    borderRadius: '50px',\r\n    backgroundColor: '#FFF',\r\n    textAlign: 'center',\r\n    lineHeight: '50px',\r\n    zIndex: 100\r\n};\r\nconst CellValue = React.createClass({\r\n    render() {\r\n        return (<div style={cellValueStyle}>\r\n        {this.props.value}\r\n      </div>);\r\n    }\r\n});\r\nconst Cell = React.createClass({\r\n    render() {\r\n        return (<div style={cellStyle}>\r\n          {this.props.children}\r\n        </div>);\r\n    }\r\n});\r\nconst grid = (<Grid columnWidth={80} gutterWidth={5}>\r\n\t\t<Row>\r\n      <Column width='6/18'>\r\n        <Cell><CellValue value='6/18'/></Cell>\r\n      </Column>\r\n      <Column width='6/18' offset='6/18'>\r\n        <Cell><CellValue value='6/18'/></Cell>\r\n      </Column>\r\n    </Row>\r\n\t\t<Row>\r\n      <Column width='3/12'>\r\n        <Cell><CellValue value='3/12'/></Cell>\r\n      </Column>\r\n      \r\n      <Column width='6/12'>\r\n        <Cell><CellValue value='6/12'/></Cell>\r\n      </Column>\r\n      <Column width='3/12'>\r\n        <Cell><CellValue value='3/12'/></Cell>\r\n      </Column>\r\n    </Row>\r\n\t\t<Row>\r\n      <Column width='4/4'>\r\n        <Cell><CellValue value='4/4'/></Cell>\r\n      </Column> \r\n    </Row>     \r\n    <Row>\r\n      <Column width='3/12' offset='9/12'>\r\n        <Cell><CellValue value='3/12'/></Cell>\r\n      </Column>\r\n    </Row>    \r\n  </Grid>);\r\nReactDOM.render(grid, mountNode);\r\n",
    Tabs: "const TheTabs = React.createClass({\r\n    getInitialState() {\r\n        return {\r\n            isLoading: false\r\n        };\r\n    },\r\n    onBeforeChange: (selectedIndex, $selectedPanel) => {\r\n        console.log('before the tab ' + $selectedPanel);\r\n    },\r\n    onAfterChange: (selectedIndex) => {\r\n        console.log('after the tab ' + selectedIndex);\r\n    },\r\n    render() {\r\n        return (<Tabs tabActive={1} onBeforeChange={this.onBeforeChange} onAfterChange={this.onAfterChange}>\r\n        <TabPanel title='Tab One'>\r\n          <div>Lorem Ipsum is simply dummy text of the printing and typesetting industry, for TAB One</div>\r\n        </TabPanel>\r\n        <TabPanel title='Tab Two'>\r\n          <div>Lorem Ipsum is simply dummy text of the printing and typesetting industry, for TAB Two</div>\r\n        </TabPanel>\r\n        <TabPanel title='Tab Three'>\r\n          <div>Lorem Ipsum is simply dummy text of the printing and typesetting industry, for TAB Three</div>\r\n        </TabPanel>\r\n        <TabPanel title='Tab Four'>\r\n          <div>Lorem Ipsum is simply dummy text of the printing and typesetting industry, for TAB Four</div>\r\n        </TabPanel>\r\n        <TabPanel title='Tab Five' disabled=\"true\">\r\n          <div>Lorem Ipsum is simply dummy text of the printing and typesetting industry, for TAB Five</div>\r\n        </TabPanel>\r\n      </Tabs>);\r\n    }\r\n});\r\n\r\nReactDOM.render(<TheTabs />, mountNode);\r\n",
    DefaultLink: "const LinkInstance = (<div>\r\n        <Link href=\"http://neptune-ui/\">Neptune Link</Link>\r\n        <br />\r\n        <Link href=\"http://neptune-ui/\" className=\"CustomClassName\" disabled>disabled Neptune Link</Link>\r\n    </div>);\r\nReactDOM.render(LinkInstance, mountNode);\r\n",
    GoldLink: "const GoldLinkInstance = (<div>\r\n        <Link type=\"Gold\" href=\"http://neptune-ui/\">Neptune Link</Link>\r\n        <br />\r\n        <Link type=\"Gold\" href=\"http://neptune-ui/\" disabled>disabled Neptune Link</Link>\r\n    </div>);\r\nReactDOM.render(GoldLinkInstance, mountNode);\r\n",
    GreyLink: "const GreyLinkInstance = (<div>\r\n        <Link type=\"Grey\" href=\"http://neptune-ui/\">Neptune Link</Link>\r\n        <br />\r\n        <Link type=\"Grey\" href=\"http://neptune-ui/\" disabled>disabled Neptune Link</Link>\r\n    </div>);\r\nReactDOM.render(GreyLinkInstance, mountNode);\r\n",
    DefaultLabel: "const labelsInstance = (<div>\r\n    <Label block for=\"someId\">Original label</Label>\r\n    <Label block>Default label</Label>\r\n    <Label block disabled>Disabled label</Label>\r\n    <Label block>label is block</Label>\r\n    <Label block html>{\"html example <a href = 'https://www.moodys.com'>moodys.com</a>\"}</Label>\r\n    <Label block maxLength=\"12\" color=\"MA-BLUE\">label maxLength is 12</Label>\r\n    <Label block className=\"custom\">label className is custom</Label>\r\n    <Label block type=\"LABEL-STANDARD\">label type is LABEL-STANDARD</Label>\r\n    <Label block type=\"Body-Secondary\" tooltip=\"hi there!\">mouseover to show tooltip</Label>\r\n  </div>);\r\nReactDOM.render(labelsInstance, mountNode);\r\n",
    DefaultList: "/* eslint no-use-before-define: 0*/\r\nconst someItemsFromAPI = [\r\n    { id: 1, text: \"Text 1\" },\r\n    { id: 2, text: \"Text 2\" },\r\n    { id: 3, text: \"Text 3\" },\r\n    { id: 4, text: \"Text 4\" },\r\n    { id: 5, text: \"Text 5\" },\r\n    { id: 6, text: \"Text 6\" },\r\n    { id: 7, text: \"Text 7\" },\r\n    { id: 8, text: \"Text 8\" }\r\n];\r\nconst ListInstance = React.createClass({\r\n    getInitialState: () => {\r\n        return {\r\n            filter: '',\r\n            multiselect: false,\r\n            filtered: false,\r\n            items: someItemsFromAPI,\r\n            results: []\r\n        };\r\n    },\r\n    toggleMultiselect() {\r\n        this.setState({ multiselect: !this.state.multiselect });\r\n    },\r\n    toggleFiltered() {\r\n        this.setState({ filtered: !this.state.filtered, filter: \"\" });\r\n    },\r\n    handleFilterChange(event) {\r\n        this.setState({ filter: event.target.value });\r\n    },\r\n    onChange(selection) {\r\n        if (selection) {\r\n            if (!(selection instanceof Array)) {\r\n                selection = [selection];\r\n            }\r\n            this.setState({ results: selection });\r\n        } else {\r\n            this.setState({ results: [] });\r\n        }\r\n    },\r\n    onItemSelected(item) {\r\n        alert('Item [' + item.text + '] was selected');\r\n    },\r\n    onItemDeselected(item) {\r\n        alert('Item [' + item.text + '] was unselected');\r\n    },\r\n    selectAll() {\r\n        this.refs.sampleList.selectAll();\r\n    },\r\n    unselectAll() {\r\n        this.refs.sampleList.clearSelection();\r\n    },\r\n    render() {\r\n        let ftext = this.state.filtered\r\n            ? <input type=\"text\" onChange={this.handleFilterChange} value={this.state.filter} placeholder='Enter filter text'/>\r\n            : \"\";\r\n        return (<div>\r\n        <div style={panelStyle}>\r\n          <List items={this.state.items} filterText={this.state.filter} multiselect={this.state.multiselect} \r\n              onChange={this.onChange} onItemSelected={this.onItemSelected} \r\n              onItemDeselected={this.onItemDeselected} ref=\"sampleList\"\r\n          />\r\n        </div>\r\n        <div style={resultsStyle}>\r\n          <span>Selected Items</span>\r\n          <div style={resultsListStyle}>\r\n            <ul style={ulStyle}>\r\n              {this.state.results.map((item, indx) => {\r\n                  return <li key={indx}>{item.text}</li>;\r\n              })}\r\n            </ul>\r\n          </div>\r\n          <input type=\"checkbox\" name=\"cbm\" value={this.state.multiselect} onChange={this.toggleMultiselect}/>\r\n          <span>Multi Select</span>\r\n          <br />\r\n          <button type='button' style={buttonlStyle} onClick={this.selectAll}>Select All</button>\r\n          <button type='button' style={buttonlStyle} onClick={this.unselectAll}>Unsel. All</button>\r\n          <br />\r\n          <input type=\"checkbox\" name=\"cbf\" value={this.state.filtered} onChange={this.toggleFiltered}/>\r\n          <span>Filtered</span>\r\n          {ftext}\r\n        </div>\r\n      </div>);\r\n    }\r\n});\r\nconst panelStyle = {\r\n    background: '#fff',\r\n    padding: '10px',\r\n    border: '2px solid #f0f0f0',\r\n    width: '170px',\r\n    height: '120px',\r\n    margin: '15px',\r\n    position: 'relative'\r\n};\r\nconst resultsStyle = {\r\n    background: '#fff',\r\n    padding: '10px 10px 45px 10px',\r\n    border: '1px solid #f0f0f0',\r\n    width: '170px',\r\n    height: '120px',\r\n    margin: '-165px 15px 5px 350px',\r\n    position: 'relative'\r\n};\r\nconst resultsListStyle = {\r\n    background: '#eee',\r\n    height: '50px',\r\n    padding: '0',\r\n    margin: '0',\r\n    overflowY: 'auto'\r\n};\r\nconst buttonlStyle = {\r\n    margin: '5px'\r\n};\r\nconst ulStyle = {\r\n    margin: '2px 0 2px 0'\r\n};\r\nReactDOM.render(<ListInstance />, mountNode);\r\n",
    Spinner: "const SpinnerInstance = (<div>\r\n        <Spinner> Default </Spinner>\r\n        <Spinner size={60} lineWidth={2} color={'rgb(64,134,191)'} fontStyle={{ fontStyle: 'italic' }}> Custom </Spinner>\r\n    </div>);\r\nReactDOM.render(SpinnerInstance, mountNode);\r\n",
    TextBox: "const TextBoxInstance = React.createClass({\r\n    render() {\r\n        return (<TextBox value=\"Hello\" disabled={false} onChange={this.handleTextChange} onFocus={this.handleFocus} onBlur={this.handleBlur}/>);\r\n    },\r\n    handleTextChange() {\r\n        console.log('the text in input has been changed');\r\n    },\r\n    handleFocus() {\r\n        console.log('the  input is on focus');\r\n    },\r\n    handleBlur() {\r\n        console.log('the  input is on blur');\r\n    }\r\n});\r\nReactDOM.render(<TextBoxInstance />, mountNode);\r\n",
    MultilineTextBox: "const MultilineTextBox = React.createClass({\r\n    render() {\r\n        return (<TextBox placeholder=\"enter multiline text here\" multiline height={200} width={200} />);\r\n    }\r\n});\r\n\r\nReactDOM.render(<MultilineTextBox />, mountNode);\r\n",
    TextBoxInForm: "const formElementStyle = {\r\n    marginTop: '20px'\r\n};\r\nconst FormElement = React.createClass({\r\n    render() {\r\n        return (<div style={formElementStyle}> {this.props.children} </div>);\r\n    }\r\n});\r\nconst TextBoxInstance = React.createClass({\r\n    render() {\r\n        return (<Grid columnWidth={80} gutterWidth={60}>\r\n        <Row>\r\n          <Column width=\"1/1\">\r\n            <FormElement>\r\n                <TextBox value=\"Hello\" onChange={this.handleTextChange} onFocus={this.handleFocus} onBlur={this.handleBlur}/>\r\n            </FormElement>\r\n          </Column>\r\n        </Row>\r\n        <Row>\r\n          <Column width=\"1/2\">\r\n            <FormElement>\r\n                <TextBox value={\"Error 1\"} error/>\r\n            </FormElement>\r\n          </Column>\r\n          <Column width=\"1/2\">\r\n            <FormElement>\r\n                <TextBox value={\"Right cell\"}/>\r\n            </FormElement>\r\n          </Column>\r\n        </Row>\r\n        <Row>\r\n          <Column width=\"1/2\">\r\n            <FormElement>\r\n                <TextBox value=\"Fixed width and error\" disabled={false} width={130} error/>\r\n            </FormElement>\r\n            <FormElement>\r\n                <TextBox value=\"Custom width (disabled)\" disabled={true} width={'70%'}/>\r\n            </FormElement>\r\n          </Column>\r\n          <Column width=\"1/2\">\r\n            <FormElement>\r\n                <TextBox value=\"Multiline\" multiline height='80px'/>\r\n            </FormElement>\r\n          </Column>\r\n         </Row>\r\n      </Grid>);\r\n    },\r\n    handleTextChange() {\r\n        console.log('the text in input has been changed');\r\n    },\r\n    handleFocus() {\r\n        console.log('the  input is on focus');\r\n    },\r\n    handleBlur() {\r\n        console.log('the  input is on blur');\r\n    }\r\n});\r\n\r\nReactDOM.render(<TextBoxInstance />, mountNode);\r\n",
    Radio: "const RadioInstance = React.createClass({\r\n    render() {\r\n        return (<RadioGroup>\r\n            <Radio onChange={this.handleClick}>Check Me</Radio>\r\n            <Radio disabled onChange={this.handleClick}>Can't check me</Radio>\r\n        </RadioGroup>);\r\n    },\r\n    handleClick() {\r\n        alert('checked!');\r\n    }\r\n});\r\nReactDOM.render(<RadioInstance />, mountNode);\r\n",
    RadioGroup: "const RadioGroupInstance = (<RadioGroup>\r\n         <Radio checked name='group'>Radio1</Radio>\r\n         <Radio name='group'>Radio2</Radio>\r\n         <Radio name='group'>Radio3</Radio>\r\n    </RadioGroup>);\r\nReactDOM.render(RadioGroupInstance, mountNode);\r\n",
    DropdownList: "const items1 = [\r\n    { text: \"A\", value: 1 },\r\n    { text: \"B\", value: 2 },\r\n    { text: \"C\", value: 3 }\r\n];\r\nconst items2 = [\r\n    { text: \"the first option\", value: 1 },\r\n    { text: \"the second option\", value: 2 },\r\n    { text: \"the third option\", value: 3, selected: true }\r\n];\r\nconst DropdownListInstance = React.createClass({\r\n    render() {\r\n        return (<div>\r\n            <DropdownList optionItems={items1} width=\"50%\" onChange={this.handleSelectItemChange}/>   \r\n            <DropdownList optionItems={items1} width=\"250px\" onChange={this.handleSelectItemChange}/>   \r\n            <DropdownList optionItems={items2} onChange={this.handleSelectItemChange}/>   \r\n        </div>);\r\n    },\r\n    handleSelectItemChange(val, options) {\r\n        const selectedOption = options.filter((opt) => opt.value === val)[0];\r\n        const logText = `selected item value is: {text: \"${selectedOption.text}\", value: ${val}}`;\r\n        console.log(logText);\r\n        // alert(logText);\r\n    } });\r\nReactDOM.render(<DropdownListInstance />, mountNode);\r\n",
    Pager: "const PagerInstance = React.createClass({\r\n    getInitialState: () => {\r\n        return { currentIndex: 0 };\r\n    },\r\n    render() {\r\n        const config = {\r\n            pageSize: 50\r\n        };\r\n\r\n        const pageGenerateMessage = (currentIndex) => {\r\n            const data = [];\r\n            const startPage = currentIndex * config.pageSize + 1;\r\n            const totalCount = 2400;\r\n            const endPage = (currentIndex + 1) * config.pageSize > totalCount ? totalCount : (currentIndex + 1) * config.pageSize;\r\n            const selectedCount = endPage - startPage + 1;\r\n            data.push('Displaying:  ' + startPage + '  to  ' + endPage + '  of  ' + totalCount + '  Follows');\r\n            data.push('All  ' + selectedCount + '  Follows on this page are selected.');\r\n            data.push('All  ' + totalCount + '  follows are selected.');\r\n            return data;\r\n        };\r\n\r\n        return (<Pager onPageSelect={this.handleSelectItemChange} currentIndex={this.state.currentIndex} totalCount={2400} pageSize={config.pageSize} labels={pageGenerateMessage(this.state.currentIndex)}/>);\r\n    },\r\n    handleSelectItemChange(pageNum) {\r\n        this.setState({ currentIndex: pageNum - 1 });\r\n    }\r\n});\r\n\r\nReactDOM.render(<PagerInstance />, mountNode);\r\n",
    Modal: "const DefaultModal = React.createClass({\r\n    getInitialState() {\r\n        return {\r\n            modalVisible: false\r\n        };\r\n    },\r\n    showModal() {\r\n        this.setState({ modalVisible: true });\r\n    },\r\n    hideModal() {\r\n        this.setState({ modalVisible: false });\r\n    },\r\n    onSaveClick() {\r\n        console.log('save');\r\n        this.hideModal();\r\n    },\r\n    onCancelClick() {\r\n        console.log('cancel');\r\n        this.hideModal();\r\n    },\r\n    render() {\r\n        let buttons = (<ButtonToolbar>\r\n            <Button onClick={this.onCancelClick}>Cancel</Button>\r\n            <Button onClick={this.onSaveClick}>Save</Button>\r\n        </ButtonToolbar>);\r\n\r\n        return (<div>\r\n          <button onClick={this.showModal}>display modal</button>\r\n          <Modal visible={this.state.modalVisible} onRequestClose={this.hideModal} title='Email Preferences' footer={buttons}>\r\n            Hi, modal content\r\n          </Modal>\r\n        </div>);\r\n    }\r\n});\r\n\r\nReactDOM.render(<DefaultModal />, mountNode);\r\n",
    CheckBox: {
        Default: "const CheckBoxInstance = React.createClass({\r\n    render: function render() {\r\n        return (<div>\r\n            <CheckBox text=\"Test1\" value=\"check1\" onChange={this.onChange} name=\"Test-1\" />   \r\n            <CheckBox text=\"Test2\" value=\"check2\" onChange={this.onChange} name=\"Test-2\" checked />   \r\n      </div>);\r\n    },\r\n    onChange: function onChange(e, checked, value) {\r\n        console.log(\"checked=\" + checked + \", value=\" + value);\r\n    }\r\n});\r\n\r\nReactDOM.render(<CheckBoxInstance />, mountNode);",
        Disabled: "const DisabledCheckBoxInstance = React.createClass({\r\n    render() {\r\n        return (<CheckBox text=\"Check Box 2\" value=\"1\" onChange={this.onChange} name=\"Test-3\" disabled />);\r\n    },\r\n    onChange: function onChange() {\r\n        console.log(\"this should NOT be called\");\r\n    }    \r\n});\r\n\r\nReactDOM.render(<DisabledCheckBoxInstance />, mountNode);\r\n",
        Readonly: "const CheckBoxInstance = React.createClass({\r\n    getInitialState: () => {\r\n        return { chk1: false, chk2: true };\r\n    },\r\n    render: function render() {\r\n        return (<div>\r\n            <CheckBox text=\"Test1\" value=\"check1\" readonly onChange={this.onChange} name=\"Test-4\" checked={this.state.chk1} />   \r\n            <CheckBox text=\"Test2\" value=\"check2\" readonly onChange={this.onChange} name=\"Test-5\" checked={this.state.chk2} />   \r\n      </div>);\r\n    },\r\n\r\n    onChange: function onChange(e, checked, value) {\r\n        if (value === 'check1') {\r\n            this.setState({chk1: !this.state.chk1});\r\n        }\r\n        if (value === 'check2') {\r\n            this.setState({chk2: !this.state.chk2});\r\n        }\r\n        \r\n        console.log(\"checked=\" + !checked + \", value=\" + value);\r\n    }\r\n});\r\n\r\nReactDOM.render(<CheckBoxInstance />, mountNode);"
    },
    Table: "const TableInstance = React.createClass({\r\n    componentDidMount() {\r\n        superagent\r\n            .get('/api/TableData')\r\n            .end((err, res) => {\r\n                var myArr = JSON.parse(res.text);\r\n                this.refs.dataTable.setDataArray(myArr.data);\r\n            });\r\n    },\r\n    render() {\r\n        let columns = [\r\n            { headerText: \"Basic\", children: [{ headerText: \"Name\" }, { headerText: \"Position\" }] },\r\n            { headerText: \"Office\" },\r\n            { headerText: \"Extn.\" },\r\n            { headerText: \"Start date\" },\r\n            { headerText: \"Salary\" }\r\n        ];\r\n        return (<Table columns={columns} ref=\"dataTable\"/>);\r\n    }\r\n});\r\n\r\nReactDOM.render(<TableInstance />, mountNode);\r\n",
    TableObjectData: "const TableObjectData = React.createClass({\r\n    componentDidMount() {\r\n        superagent\r\n            .get('/api/TableObjectData')\r\n            .end((err, res) => {\r\n                const myArr = JSON.parse(res.text);\r\n                this.refs.dataTable.setData(myArr.data);\r\n            });\r\n    },\r\n    render() {\r\n        const parentcol = this.createColumn('basic');\r\n        parentcol.children = [this.createColumn('name'),\r\n            this.createColumn('gender')];\r\n        let columns = [\r\n            parentcol,\r\n            this.createColumn('company'),\r\n            this.createColumn('email'),\r\n            this.createColumn('phone'),\r\n            this.createColumn('address')\r\n        ];\r\n        return (<Table columns={columns} ref=\"dataTable\"/>);\r\n    },\r\n    createColumn(dataField, headerText) {\r\n        headerText = headerText || dataField;\r\n        const tc = new TableColumn();\r\n        tc.dataField = dataField;\r\n        tc.headerText = headerText;\r\n        return tc;\r\n    }\r\n});\r\n\r\nReactDOM.render(<TableObjectData />, mountNode);\r\n",
    TableLockedColumn: "const TableObjectData = React.createClass({\r\n    componentDidMount() {\r\n        superagent\r\n            .get('/api/TableObjectData')\r\n            .end((err, res) => {\r\n                var myArr = JSON.parse(res.text);\r\n                this.refs.dataTable.setData(myArr.data);\r\n            });\r\n    },\r\n    render() {\r\n        let columns = [\r\n            this.createColumn('name'),\r\n            this.createColumn('gender'),\r\n            this.createColumn('company'),\r\n            this.createColumn('email'),\r\n            this.createColumn('phone'),\r\n            this.createColumn('address')\r\n        ];\r\n        return (<Table columns={columns} leftLockedCount={1} ref=\"dataTable\" width=\"800px\"/>);\r\n    },\r\n    createColumn(dataField, headerText) {\r\n        headerText = headerText || dataField;\r\n        const tc = new TableColumn();\r\n        tc.dataField = dataField;\r\n        tc.headerText = headerText;\r\n        return tc;\r\n    }\r\n});\r\n\r\nReactDOM.render(<TableObjectData />, mountNode);\r\n",
    TableRowGrouping: "const TableObjectData = React.createClass({\r\n    componentDidMount() {\r\n        superagent\r\n            .get('/api/TableObjectData')\r\n            .end((err, res) => {\r\n                var myArr = JSON.parse(res.text);\r\n                this.refs.dataTable.setData(myArr.data);\r\n            });\r\n    },\r\n    render() {\r\n        let columns = [\r\n            this.createColumn('name'),\r\n            this.createColumn('gender'),\r\n            this.createColumn('company'),\r\n            this.createColumn('email'),\r\n            this.createColumn('phone'),\r\n            this.createColumn('address')\r\n        ];\r\n        return (<Table columns={columns} ref=\"dataTable\" rowGroupingField=\"gender\" leftLockedCount={1} height=\"500px\" width=\"800px\" enableScroll enablePaging={false} enableSearch={false} enableShowTotalCount={false} enableOrdering={false}/>);\r\n    },\r\n    createColumn(dataField, headerText) {\r\n        headerText = headerText || dataField;\r\n        const tc = new TableColumn();\r\n        tc.dataField = dataField;\r\n        tc.headerText = headerText;\r\n        return tc;\r\n    }\r\n});\r\nReactDOM.render(<TableObjectData />, mountNode);\r\n",
    TableCellHtml: "const TableObjectData = React.createClass({\r\n    componentDidMount() {\r\n        superagent\r\n            .get('/api/TableObjectData')\r\n            .end((err, res) => {\r\n                const myArr = JSON.parse(res.text);\r\n                this.refs.dataTable.setData(myArr.data);\r\n            });\r\n    },\r\n    render() {\r\n        let columns = [\r\n            this.createColumn('name'),\r\n            this.createColumn('gender'),\r\n            this.createColumn('company'),\r\n            this.createColumn('email'),\r\n            this.createColumn('phone'),\r\n            this.createColumn('address')\r\n        ];\r\n        const tc = columns[columns.length - 1];\r\n        tc.cellHtmlCallback = (data) => {\r\n            return \"<a href='http://www.google.com' onclick=''>\" + data + \"</a><div class='triangle-up-right'></div>\";\r\n        };\r\n        return (<Table columns={columns} ref=\"dataTable\" enableScroll={true}/>);\r\n    },\r\n    createColumn(dataField, headerText) {\r\n        headerText = headerText || dataField;\r\n        const tc = new TableColumn();\r\n        tc.dataField = dataField;\r\n        tc.headerText = headerText;\r\n        return tc;\r\n    }\r\n});\r\nReactDOM.render(<TableObjectData />, mountNode);\r\n",
    TableCallback: "const TableObjectData = React.createClass({\r\n    componentDidMount() {\r\n        superagent\r\n            .get('/api/TableObjectData')\r\n            .end((err, res) => {\r\n                const myArr = JSON.parse(res.text);\r\n                this.refs.dataTable.setData(myArr.data);\r\n            });\r\n    },\r\n    cellClickCallback(td) {\r\n        alert('You clicked' + td.innerHTML);\r\n    },\r\n    render() {\r\n        let columns = [\r\n            this.createColumn('name'),\r\n            this.createColumn('gender'),\r\n            this.createColumn('company'),\r\n            this.createColumn('email'),\r\n            this.createColumn('phone'),\r\n            this.createColumn('address')\r\n        ];\r\n        return (<Table columns={columns} ref=\"dataTable\" rowGroupingField=\"gender\" enableScroll={true} cellClickCallback={this.cellClickCallback}/>);\r\n    },\r\n    createColumn(dataField, headerText) {\r\n        headerText = headerText || dataField;\r\n        const tc = new TableColumn();\r\n        tc.dataField = dataField;\r\n        tc.headerText = headerText;\r\n        return tc;\r\n    }\r\n});\r\n\r\nReactDOM.render(<TableObjectData />, mountNode);\r\n",
    TableFixedHeader: "const TableObjectData = React.createClass({\r\n    componentDidMount() {\r\n        superagent\r\n            .get('/api/TableObjectData')\r\n            .end((err, res) => {\r\n                var myArr = JSON.parse(res.text);\r\n                this.refs.dataTable.setData(myArr.data);\r\n            });\r\n    },\r\n    render() {\r\n        const parentcol = this.createColumn('basic');\r\n        parentcol.children = [this.createColumn('name'),\r\n            this.createColumn('gender')];\r\n        let columns = [\r\n            parentcol,\r\n            this.createColumn('company'),\r\n            this.createColumn('email'),\r\n            this.createColumn('phone'),\r\n            this.createColumn('address')\r\n        ];\r\n        return (<Table columns={columns} ref=\"dataTable\" rowGroupingField=\"gender\" enableFixedHeader={true}/>);\r\n    },\r\n    createColumn(dataField, headerText) {\r\n        headerText = headerText || dataField;\r\n        const tc = new TableColumn();\r\n        tc.dataField = dataField;\r\n        tc.headerText = headerText;\r\n        return tc;\r\n    }\r\n});\r\n\r\nReactDOM.render(<TableObjectData />, mountNode);\r\n",
    SimpleTable: "const TableObjectData = React.createClass({\r\n    render() {\r\n        let columns = [\r\n            this.createColumn('name'),\r\n            this.createColumn('gender'),\r\n            this.createColumn('company')\r\n        ];\r\n\r\n        return (<div>\r\n              <Table columns={columns} isLoading={false} ref=\"dataTable1\"/>\r\n              <div style={{ marginTop: '80px' }}>\r\n                <Table columns={columns} isLoading={true} ref=\"dataTable2\"/>\r\n              </div>\r\n        </div>);\r\n    },\r\n    componentDidMount() {\r\n        this.refs.dataTable1.setData([\r\n            { name: \"Tom\", gender: \"male\", company: \"MIS\" },\r\n            { name: \"Tim\", gender: \"male\", company: \"MIT\" }\r\n        ]);\r\n        this.refs.dataTable2.setData([\r\n            { name: \"Anne\", gender: \"female\", company: \"MIS\" },\r\n            { name: \"Maria\", gender: \"female\", company: \"MIT\" }\r\n        ]);\r\n    },\r\n    createColumn(dataField, headerText) {\r\n        headerText = headerText || dataField;\r\n        const tc = new TableColumn();\r\n        tc.dataField = dataField;\r\n        tc.headerText = headerText;\r\n        return tc;\r\n    }\r\n});\r\n\r\nReactDOM.render(<TableObjectData />, mountNode);\r\n",
    AdvancedTable: "const TableObjectData = React.createClass({\r\n    componentDidMount() {\r\n        superagent\r\n            .get('/api/TableObjectData')\r\n            .end((err, res) => {\r\n                const myArr = JSON.parse(res.text);\r\n                this.refs.dataTable.setFixedColumnData(myArr.data, this.refs.dataTable.setDataMultiHierarchy);\r\n            });\r\n    },\r\n    render() {\r\n        let columns = [\r\n            { headerText: \"Basic\", children: [this.createColumn(\"name\")] },\r\n            this.createColumn(\"gender\"),\r\n            { headerText: \"2016\", children: [this.createColumn(\"company\"), this.createColumn(\"email\")] },\r\n            { headerText: \"2015\", children: [this.createColumn(\"phone\"), this.createColumn(\"Position\")] },\r\n            { headerText: \"2014\", children: [this.createColumn(\"phone\"), this.createColumn(\"Position\")] },\r\n            { headerText: \"2013\", children: [this.createColumn(\"phone\"), this.createColumn(\"Position\")] },\r\n            { headerText: \"2012\", children: [this.createColumn(\"phone\"), this.createColumn(\"Position\")] }\r\n        ];\r\n        return (<div>\r\n         <Table columns={columns} removeFirstGroupRow rowGroupingField=\"gender\" fixedColumn={1} ref=\"dataTable\" enableScroll height={1800} enablePaging={false} enableSearch={false} enableShowTotalCount={false} enableOrdering={false} enableFixedHeader={true}/>\r\n      </div>);\r\n    },\r\n    createColumn(dataField, headerText) {\r\n        headerText = headerText || dataField;\r\n        const tc = new TableColumn();\r\n        tc.dataField = dataField;\r\n        tc.headerText = headerText;\r\n        return tc;\r\n    }\r\n});\r\n\r\nReactDOM.render(<TableObjectData />, mountNode);\r\n",
    TableCustomComponentInCell: "const TableObjectData = React.createClass({\r\n    componentDidMount() {\r\n        superagent\r\n            .get('/api/TableObjectData')\r\n            .end((err, res) => {\r\n                var myArr = JSON.parse(res.text);\r\n                this.refs.dataTable.setData(myArr.data);\r\n            });\r\n    },\r\n    render() {\r\n        const columns = [\r\n            this.createColumn('name'),\r\n            this.createColumn('gender'),\r\n            this.createColumn('company'),\r\n            this.createColumn('email'),\r\n            this.createColumn('phone'),\r\n            this.createColumn('address')\r\n        ];\r\n        var tc = columns[columns.length - 1];\r\n        tc.cellRenderedCallback = (td) => {\r\n            this.refs.dataTable.renderIntoNode(<Button primary>Primary button</Button>, td);\r\n        };\r\n        return (<Table columns={columns} ref=\"dataTable\" enableVerticalScroll={true}/>);\r\n    },\r\n    createColumn(dataField, headerText) {\r\n        headerText = headerText || dataField;\r\n        const tc = new TableColumn();\r\n        tc.dataField = dataField;\r\n        tc.headerText = headerText;\r\n        return tc;\r\n    }\r\n});\r\nReactDOM.render(<TableObjectData />, mountNode);\r\n",
    TableSortField: "const TableObjectData = React.createClass({\r\n    \r\n    componentDidMount() {\r\n        superagent\r\n            .get('/api/TableDataConverted')\r\n            .end((err, res) => {\r\n                const myArr = JSON.parse(res.text);\r\n                this.refs.dataTable.setData(myArr.data);\r\n            });\r\n    },\r\n\r\n    render() {\r\n        const parentcol = this.createColumn('basic');\r\n        parentcol.children = [this.createColumn('name'),\r\n            this.createColumn('title')];\r\n        let columns = [\r\n            parentcol,\r\n            this.createColumn('city'),\r\n            this.createColumn('dateHired'),\r\n            this.createColumn('dateHiredTicks'),\r\n            this.createColumn('phone'),\r\n            this.createColumn('salary'),\r\n            this.createColumn('salaryNum')\r\n        ];\r\n        columns[1].sortField = 'dateHiredTicks';\r\n        columns[5].sortField = 'salaryNum';\r\n        return (<Table columns={columns} ref=\"dataTable\" onColumnSortCallback={this.sortTable}/>);\r\n    },\r\n    sortTable(sort) {\r\n        console.log(sort);\r\n    },\r\n    createColumn(dataField, headerText) {\r\n        headerText = headerText || dataField;\r\n        const tc = new TableColumn();\r\n        tc.dataField = dataField;\r\n        tc.headerText = headerText;\r\n        return tc;\r\n    }\r\n});\r\n\r\nReactDOM.render(<TableObjectData />, mountNode);\r\n",
    DateInput: "const TheDateInput = React.createClass({\r\n    getInitialState() {\r\n        return {\r\n            isLoading: false\r\n        };\r\n    },\r\n    render() {\r\n        return (<DateInput format='MM/DD/YYYY'/>);\r\n    }\r\n});\r\n\r\nReactDOM.render(<TheDateInput />, mountNode);\r\n",
    Accordion: "const AccordionInstance = React.createClass({\r\n    render() {\r\n        return (<Accordion activePanel={0} onItemExpandCollapse={this.onItemExpandCollapseClick}>\r\n                <Panel title=\"Regions\" onExpandCollapseClick={this.onRegionsExpandCollapseClick}>\r\n                 <CheckBox text=\"Test1\" value=\"0\" name=\"Test-1\"/>\r\n                 <CheckBox text=\"Test2\" value=\"1\" name=\"Test-2\"/>\r\n                </Panel>\r\n                <Panel title=\"Sectors\">\r\n                  <CheckBox text=\"Test1\" value=\"0\" name=\"Test-1\"/>\r\n                  <CheckBox text=\"Test2\" value=\"1\" name=\"Test-2\"/>\r\n                </Panel>\r\n                <Panel title=\"Ratings\">\r\n                  <CheckBox text=\"Test1\" value=\"0\" name=\"Test-1\"/>\r\n                  <CheckBox text=\"Test2\" value=\"1\" name=\"Test-2\"/>\r\n                </Panel>\r\n            </Accordion>);\r\n    },\r\n    onItemExpandCollapseClick(panel) {\r\n        console.log(panel.props.title);\r\n    },\r\n    onRegionsExpandCollapseClick(panel) {\r\n        console.log(panel.props.title);\r\n    }\r\n});\r\nReactDOM.render(<AccordionInstance />, mountNode);\r\n",
    Panel: "const PanelInstance = React.createClass({\r\n    getInitialState: () => {\r\n        return { expanded: true };\r\n    },\r\n    render() {\r\n        return (<Panel title=\"TITLE\" subTitle=\"Sub Title\" expanded={this.state.expanded} onExpandCollapseClick={this.onExpandCollapseClick} collapsible>\r\n                    Content for the panel, which may be plain text or combinations of other components with text etc goes here. \r\n                    Content for the panel, which may be plain text or combinations of other components with text etc goes here.\r\n                    Content for the panel, which may be plain text or combinations of other components with text etc goes here.\r\n                    Content for the panel, which may be plain text or combinations of other components with text etc goes here.           \r\n               </Panel>);\r\n    },\r\n    onExpandCollapseClick(panel) {\r\n        console.log(panel);\r\n        this.setState({ expanded: !this.state.expanded });\r\n    }\r\n});\r\nReactDOM.render(<PanelInstance />, mountNode);\r\n",
    PanelGroup: "const PanelGroupInstance = React.createClass({\r\n    render() {\r\n        return (<PanelGroup>\r\n                <Panel title=\"Human Resources\">\r\n                    Human resources content goes here\r\n                </Panel>\r\n                <Panel title=\"IT Services\">\r\n                   IT services content goes here\r\n                </Panel>\r\n                <Panel title=\"Sales Department\">\r\n                   Sales Department content goes here\r\n                </Panel>\r\n            </PanelGroup>);\r\n    }\r\n});\r\nReactDOM.render(<PanelGroupInstance />, mountNode);\r\n",
    Drawers: "const items = [1, 2, 3].map((item, indx) => {\r\n    return (<div key={indx}>Hello, world! I am {item}</div>);\r\n});\r\n\r\nconst DrawersInstance = React.createClass({\r\n    getInitialState: () => {\r\n        return { visible: false };\r\n    },\r\n    render() {\r\n        if (!this.state.visible) {\r\n            return <a onClick={this.handleSelectItemChange}>click</a>;\r\n        }\r\n        return (<div>\r\n                <a onClick={this.handleSelectItemChange}>click</a>\r\n                <Drawers className=\"Feed_MyFollowsDrawer\" onRequestClose={this.handleSelectItemChange} title=\"Financial Data Package\">\r\n                    <div className=\"Feed_MyFollowsDrawer_List\">\r\n                        <div className=\"Head\">\r\n                            <b>My FOLLOWS</b> RELATED TO THIS POST\r\n                            <span>{items.length}</span>\r\n                        </div>\r\n                        {items}\r\n                    </div>\r\n                </Drawers>\r\n            </div>);\r\n    },\r\n    handleSelectItemChange() {\r\n        this.setState({ visible: !this.state.visible });\r\n    }\r\n});\r\n\r\nReactDOM.render(<DrawersInstance />, mountNode);\r\n",
    Typeahead: "const TypeaheadInstance = React.createClass({\r\n    render() {\r\n        return (\r\n            <Typeahead options={[\"Alabama\", \"Alaska\", \"Arizona\", \"Arkansas\", \"California\", \"Colorado\", \"Connecticut\", \"Delaware\", \"Florida\", \"Georgia\", \"Hawaii\", \"Idaho\", \"Illinois\", \"Indiana\", \"Iowa\", \"Kansas\", \"Kentucky\",\r\n                \"Louisiana\", \"Maine\", \"Maryland\", \"Massachusetts\", \"Michigan\", \"Minnesota\", \"Mississippi\", \"Missouri\", \"Montana\", \"Nebraska\", \"Nevada\", \"New Hampshire\", \"New Jersey\", \"New Mexico\", \"New York\", \"North Carolina\",\r\n                \"North Dakota\", \"Ohio\", \"Oklahoma\", \"Oregon\", \"Pennsylvania\", \"Rhode Island\", \"South Carolina\", \"South Dakota\", \"Tennessee\", \"Texas\", \"Utah\", \"Vermont\", \"Virginia\", \"Washington\", \"West Virginia\", \"Wisconsin\", \"Wyoming\"]} placeholder=\"Search state\" onSelected={this.onSearchResultSelected} pageSize={20}\r\n            />);\r\n    },\r\n    onSearchResultSelected(result) {\r\n        alert(\"You have selected \" + result);\r\n    }\r\n});\r\n\r\nReactDOM.render(<TypeaheadInstance />, mountNode);\r\n",
    TypeaheadServer: "const TypeaheadInstance = React.createClass({\r\n    render() {\r\n        return (\r\n            <Typeahead delay={1000} placeholder=\"Search state\" \r\n                onSelected={this.onSearchResultSelected} pageSize={20} \r\n                multiSelect onSearch={this.onSearchTrigger}\r\n            />);\r\n    },\r\n    onSearchResultSelected(result) {\r\n        alert(\"You have selected \" + result);\r\n    },\r\n    onSearchTrigger(searchText, pager, searchCompletedCallback) {\r\n        fusionApi.getOrganizationsSvc(searchText, pager.pageNumber - 1, pager.pageSize).then((res) => {\r\n            searchCompletedCallback(res.map((org) => { \r\n                return org.Name; \r\n            }));\r\n        });\r\n    }\r\n});\r\n\r\nReactDOM.render(<TypeaheadInstance />, mountNode);\r\n",
    TypeaheadCustomRender: "const TypeaheadInstance = React.createClass({\r\n    render() {\r\n        return (\r\n            <Typeahead placeholder=\"Search state\" onSelected={this.onSearchResultSelected} \r\n                pageSize={20} onSearch={this.onSearchTrigger} onRender={this.onRenderResults}\r\n            />);\r\n    },\r\n    onSearchResultSelected(result) {\r\n        return result.Name;\r\n    },\r\n    onSearchTrigger(searchText, pager, searchCompletedCallback) {\r\n        fusionApi.getOrganizationsSvc(searchText, pager.pageNumber - 1, pager.pageSize).then((res) => {\r\n            searchCompletedCallback(res);\r\n        });\r\n    },\r\n    onRenderResults(result) {\r\n        return result.Name;\r\n    }\r\n});\r\n\r\nReactDOM.render(<TypeaheadInstance />, mountNode);\r\n",
    DefaultPopover: "const DefaultPopover = React.createClass({\r\n    handleTriggered() {\r\n        console.log(\"triggered\");\r\n    },\r\n    handleClosed() {\r\n        console.log(\"closed\");\r\n    },\r\n    render() {\r\n        return (<div style={{ margin: 'auto' }}>\r\n                <Popover trigger=\"click\" align='right' onTriggered={this.handleTriggered} onClosed={this.handleClosed} toolTips>\r\n                    <PopoverTrigger>Default</PopoverTrigger>\r\n                    <Content>\r\n                        <div style={{ position: \"relative\", fontSize: \"14px\", fontWeight: \"bold\" }}>\r\n                            Lorem ipsum dolorLorem ipsum dolorLorem ipsum dolorLorem ipsum dolorLorem ipsum dolorLorem ipsum dolorLorem ipsum dolor\r\n                        </div>\r\n                    </Content>\r\n                </Popover>\r\n            </div>);\r\n    }\r\n});\r\nReactDOM.render(<DefaultPopover />, mountNode);\r\n",
    TextPopover: "const TextPopover = React.createClass({\r\n    render() {\r\n        return (<Popover trigger=\"click\" align='bottom-right'>\r\n                <PopoverTrigger><Link>Email Setting</Link></PopoverTrigger>\r\n                <Content>\r\n                    <div style={{ position: \"relative\", width: \"263px\", height: \"100px\", border: \"1px solid\" }}>\r\n                        <div>\r\n                            <button>NONE</button>\r\n                            <button>REAL TIME</button>\r\n                            <button>DAILY</button>\r\n                            <button>WEEKLY</button>\r\n                        </div>\r\n                        <button style={{ position: \"absolute\", bottom: \"0px\", right: \"0px\" }}>Apply</button>\r\n                    </div>\r\n                </Content>\r\n            </Popover>);\r\n    }\r\n});\r\nReactDOM.render(<TextPopover />, mountNode);\r\n",
    IconPopover: "const DefaultPopover = React.createClass({\r\n    render() {\r\n        return (<Popover trigger=\"click\" align='right'>\r\n                <PopoverTrigger><Icon icon=\"bell\"/></PopoverTrigger>\r\n                <Content>\r\n                    <div style={{ position: \"relative\", width: \"263px\", height: \"100px\", border: \"1px solid\" }}>\r\n                        <div>\r\n                            <button>NONE</button>\r\n                            <button>REAL TIME</button>\r\n                            <button>DAILY</button>\r\n                            <button>WEEKLY</button>\r\n                        </div>\r\n                        <button style={{ position: \"absolute\", bottom: \"0px\", right: \"0px\" }}>Apply</button>\r\n                    </div>\r\n                </Content>\r\n            </Popover>);\r\n    }\r\n});\r\nReactDOM.render(<DefaultPopover />, mountNode);\r\n",
    Tree: "const TreeInstance = React.createClass({\r\n    render() {\r\n        return (<Tree title=\"Financial Institutions\" onCollpaseExpandClick={this.onCollpaseExpandClick}>\r\n                <TreeNode title=\"Banking\">\r\n                    <TreeNode title=\"Chase\"/>\r\n                    <TreeNode title=\"Bank of America\"/>\r\n                </TreeNode>\r\n                <TreeNode title=\"Insurance\">\r\n                    <TreeNode title=\"All State\"/>\r\n                    <TreeNode title=\"New York Life\"/>\r\n                    <TreeNode title=\"United Health\"/>\r\n                </TreeNode>\r\n                <TreeNode title=\"Finance Companies\"/>\r\n                <TreeNode title=\"Secutiry\"/>\r\n                <TreeNode title=\"Real Estate\"/>\r\n            </Tree>);\r\n    },\r\n    onCollpaseExpandClick(node) {\r\n        alert(node.title);\r\n    }\r\n});\r\n\r\nReactDOM.render(<TreeInstance />, mountNode);\r\n",
    TreeCheckbox: "const TreeInstance = React.createClass({\r\n    render() {\r\n        return (<Tree title=\"Financial Institutions\" onNodeCheckboxClick={this.onNodeCheckboxClick} checkbox>\r\n                <TreeNode title=\"Banking\" id=\"bank1\">\r\n                    <TreeNode title=\"Chase\"/>\r\n                    <TreeNode title=\"Bank of America\"/>\r\n                </TreeNode>\r\n                <TreeNode title=\"Insurance\">\r\n                    <TreeNode title=\"All State\"/>\r\n                    <TreeNode title=\"New York Life\"/>\r\n                    <TreeNode title=\"United Health\"/>\r\n                </TreeNode>\r\n                <TreeNode title=\"Finance Companies\"/>                   \r\n                <TreeNode title=\"Secutiry\"/>\r\n                <TreeNode title=\"Real Estate\"/>\r\n            </Tree>);\r\n    },\r\n    onNodeCheckboxClick(node) {\r\n        console.log(node);\r\n    }\r\n});\r\n\r\nReactDOM.render(<TreeInstance />, mountNode);\r\n",
    TreeCheckboxCustom: "const TreeInstance = React.createClass({\r\n    render() {\r\n        const divStyle = { width: \"25%\", border: \"1px solid\" };\r\n        return (<div style={divStyle}>\r\n                <Tree onNodeCheckboxClick={this.onNodeCheckboxClick} checkbox>\r\n                    <TreeNode title={this.getCustomTitle(\"Banking\", 12450)}>\r\n                        <TreeNode title=\"Chase\"/>\r\n                        <TreeNode title=\"Bank of America\"/>\r\n                    </TreeNode>\r\n                    <TreeNode title={this.getCustomTitle(\"Insurance\", 13450)}>\r\n                        <TreeNode title=\"All State\"/>\r\n                        <TreeNode title=\"New York Life\"/>\r\n                        <TreeNode title=\"United Health\"/>\r\n                    </TreeNode>\r\n                    <TreeNode title=\"Finance Companies\"/>\r\n                    <TreeNode title=\"Secutiry\"/>\r\n                    <TreeNode title=\"Real Estate\"/>\r\n                </Tree>\r\n             </div>);\r\n    },\r\n    getCustomTitle(title, count) {\r\n        const pullRight = { float: \"right\" };\r\n        const pullLeft = { float: \"left\" };\r\n        const clearBoth = { clear: \"both\" };\r\n        return (<div>\r\n                <div style={pullLeft}>{title}</div>\r\n                <div style={pullRight}>{count}</div>\r\n                <div style={clearBoth}></div>\r\n            </div>);\r\n    },\r\n    onNodeCheckboxClick(node) {\r\n        alert(node.title);\r\n    }\r\n});\r\n\r\nReactDOM.render(<TreeInstance />, mountNode);\r\n",
    MultiDropdown: "const items = [\r\n    { text: \"item1\", value: \"1\" },\r\n    { text: \"item2\", value: \"2\" },\r\n    { text: \"item3\", value: \"3\" },\r\n    { text: \"item4\", value: \"4\" },\r\n    { text: \"item5\", value: \"5\" }\r\n];\r\nconst selectedItems = [\"item1\", \"item2\", \"item3\", \"item4\", \"item5\"];\r\nconst dropdownTitle = \"inustry\";\r\n\r\nconst MultiDropdownInstance = React.createClass({\r\n    render() {\r\n        return (<MultiDropdown includeButtons selectedOptions={selectedItems} removeUnchecked hideSearch hideTitle mouseLeave={this.mouseLeave.bind(this)} optionsItems={items} dropdownTitle={dropdownTitle} dropdownType={0} uploadTheSelected={this.uploadTheSelected.bind(this)}/>);\r\n    },\r\n    uploadTheSelected() {\r\n        return;\r\n    },\r\n    mouseLeave(selectedOptions) {\r\n        console.log(selectedOptions);\r\n    }\r\n});\r\n\r\nReactDOM.render(<MultiDropdownInstance />, mountNode);\r\n",
    ToggleButton: "const TheToggleButton = React.createClass({\r\n    getInitialState() {\r\n        return {\r\n            isLoading: false,\r\n            selected: 1\r\n        };\r\n    },\r\n    clicked(ind) {\r\n        console.log(\"The button index clicked: \" + ind);\r\n        this.setState({ selected: ind });\r\n    },\r\n    render() {\r\n        return (<ToggleButton selected={this.state.selected} onToggle={this.clicked}>\r\n          <Button>Entity</Button>\r\n          <Button>Priority</Button>\r\n          <Button>Weight</Button>\r\n       </ToggleButton>);\r\n    }\r\n});\r\n\r\nReactDOM.render(<TheToggleButton />, mountNode);\r\n",
    DefaultButtonGroup: "const buttonGroupInstance = (<div>\r\n    <div>\r\n      <ButtonGroup>\r\n        <ButtonGroupItem>1Y</ButtonGroupItem>\r\n        <ButtonGroupItem onClick={ () => { console.log('clicked!'); }}>2Y</ButtonGroupItem>\r\n        <ButtonGroupItem>3Y</ButtonGroupItem>\r\n        <ButtonGroupItem>4Y</ButtonGroupItem>\r\n        <ButtonGroupItem>5Y</ButtonGroupItem>\r\n      </ButtonGroup>\r\n    </div>\r\n    <div>\r\n      <ButtonGroup type=\"big\" style={{ marginTop: '20px' }}>\r\n        <ButtonGroupItem>big</ButtonGroupItem>\r\n        <ButtonGroupItem>big</ButtonGroupItem>\r\n        <ButtonGroupItem>big</ButtonGroupItem>\r\n        <ButtonGroupItem>big</ButtonGroupItem>\r\n        <ButtonGroupItem>big</ButtonGroupItem>\r\n      </ButtonGroup>\r\n    </div>\r\n  </div>);\r\nReactDOM.render(buttonGroupInstance, mountNode);\r\n",
    ButtonGroupAPI: "class ButtonGroupApiInstance extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            thisIndex: 0,\r\n            nextIndex: 2,\r\n            alert: null\r\n        };\r\n        this.handleOnChange = this.handleOnChange.bind(this);\r\n        this.handleChangeIndexManually = this.handleChangeIndexManually.bind(this);\r\n        this.handleItemClick = this.handleItemClick.bind(this);\r\n        this.t = null;\r\n    }\r\n    handleOnChange(thisIndex, nextIndex) {\r\n        this.setState({ \r\n            thisIndex,\r\n            nextIndex\r\n        });\r\n    }\r\n    handleChangeIndexManually() {\r\n        const childNum = 5;\r\n        if (this.state.nextIndex === (childNum - 1)) {\r\n            this.setState({\r\n                thisIndex: this.state.nextIndex,\r\n                nextIndex: 0\r\n            });\r\n        } else {\r\n            this.setState({\r\n                thisIndex: this.state.nextIndex,\r\n                nextIndex: this.state.nextIndex + 1\r\n            });\r\n        }\r\n    }\r\n    handleItemClick(e, reactElement) {\r\n        if (this.t) {\r\n            clearTimeout(this.t);\r\n        }\r\n        e.preventDefault();\r\n        console.log(reactElement);\r\n        const alert = `Oh, you clicked ${reactElement.props.children} !\r\n                      This is the ${reactElement.props.index} button !`;\r\n        this.setState({\r\n            alert\r\n        });\r\n        this.t = setTimeout(() => {\r\n            this.setState({\r\n                alert: null\r\n            });\r\n        }, 2000);\r\n    }\r\n    componentWillUnmount() {\r\n        if (this.t) {\r\n            clearTimeout(this.t);\r\n        }\r\n    }\r\n    render() {\r\n        return (<div>\r\n                <p>{`Last Selected Index: ${this.state.thisIndex}`}</p>\r\n                <p>{`Current Selected Index: ${this.state.nextIndex}`}</p>\r\n                <p style={{ color: 'Crimson' }}>{this.state.alert}</p>\r\n                <div>\r\n                    <ButtonGroup type='big' defaultIndex={2} onChange={this.handleOnChange} selectedIndex={this.state.nextIndex} style={{ marginBottom: '30px' }}>\r\n                        <ButtonGroupItem onClick={this.handleItemClick}>\r\n                            New York\r\n                        </ButtonGroupItem>\r\n                        <ButtonGroupItem onClick={this.handleItemClick}>\r\n                            Shang Hai\r\n                        </ButtonGroupItem>\r\n                        <ButtonGroupItem onClick={this.handleItemClick}>\r\n                            San Francisco\r\n                        </ButtonGroupItem>\r\n                        <ButtonGroupItem onClick={this.handleItemClick}>\r\n                            Tokyo\r\n                        </ButtonGroupItem>\r\n                        <ButtonGroupItem onClick={this.handleItemClick}>\r\n                            Shen Zhen\r\n                        </ButtonGroupItem>\r\n                    </ButtonGroup>\r\n                </div>\r\n                <Button primary onClick={this.handleChangeIndexManually}> \r\n                    press to manually change the selected items \r\n                </Button>\r\n            </div>);\r\n    }\r\n}\r\n\r\nReactDOM.render(<ButtonGroupApiInstance />, mountNode);\r\n",
    LiteTableSample: "const LiteTableDemo = React.createClass({\r\n    render() {\r\n        return (\r\n            <LiteTable ref=\"table1\" options={{\r\n                //scrollY: \"300px\",\r\n                scrollX: true,\r\n                paging: false,\r\n                data: dataSet, /* eslint no-use-before-define: 0*/\r\n                ordering: false,\r\n                searching: false,\r\n                columns: [\r\n                    { width: 100 },\r\n                    { width: 300 },\r\n                    { width: 400 },\r\n                    { width: 280 },\r\n                    { width: 180 },\r\n                    { width: 100 }\r\n                ],\r\n                fixedColumns: {\r\n                    leftColumns: 1,\r\n                    rightColumns: 1\r\n                },\r\n                fixedRows: true,\r\n                rowGroupingIndex: 2\r\n            }} style={{ width: 768 }} \r\n            >\r\n                <thead>\r\n                    <tr><th rowSpan=\"2\">Name</th><th colSpan=\"4\">Info</th><th rowSpan=\"2\">Salary</th></tr>\r\n                    <tr><th>Position</th><th>Office</th><th>Extn</th><th>Start date</th></tr>\r\n                </thead>\r\n                <tbody></tbody>\r\n        </LiteTable>);\r\n    }\r\n});\r\n\r\nconst dataSet = [\r\n    [\"Tiger Nixon\", \"System Architect\", \"Edinburgh\", \"5421\", \"2011/04/25\", \"$320,800\"],\r\n    [\"Cedric Kelly\", \"Senior Javascript Developer\", \"Edinburgh\", \"6224\", \"2012/03/29\", \"$433,060\"],\r\n    [\"Sonya Frost\", \"Software Engineer\", \"Edinburgh\", \"1667\", \"2008/12/13\", \"$103,600\"],\r\n    [\"Quinn Flynn\", \"Support Lead\", \"Edinburgh\", \"9497\", \"2013/03/03\", \"$342,000\"],\r\n    [\"Dai Rios\", \"Personnel Lead\", \"Edinburgh\", \"2290\", \"2012/09/26\", \"$217,500\"],\r\n    [\"Gavin Joyce\", \"Developer\", \"Edinburgh\", \"8822\", \"2010/12/22\", \"$92,575\"],\r\n    [\"Martena Mccray\", \"Post-Sales support\", \"Edinburgh\", \"8240\", \"2011/03/09\", \"$324,050\"],\r\n    [\"Shou Itou\", \"Regional Marketing\", \"Tokyo\", \"8899\", \"2011/08/14\", \"$163,000\"],\r\n    [\"Garrett Winters\", \"Accountant\", \"Tokyo\", \"8422\", \"2011/07/25\", \"$170,750\"],\r\n    [\"Airi Satou\", \"Accountant\", \"Tokyo\", \"5407\", \"2008/11/28\", \"$162,700\"],\r\n    [\"Rhona Davidson\", \"Integration Specialist\", \"Tokyo\", \"6200\", \"2010/10/14\", \"$327,900\"],\r\n    [\"Ashton Cox\", \"Junior Technical Author\", \"San Francisco\", \"1562\", \"2009/01/12\", \"$86,000\"],\r\n    [\"Herrod Chandler\", \"Sales Assistant\", \"San Francisco\", \"9608\", \"2012/08/06\", \"$137,500\"],\r\n    [\"Colleen Hurst\", \"Javascript Developer\", \"San Francisco\", \"2360\", \"2009/09/15\", \"$205,500\"],\r\n    [\"Charde Marshall\", \"Regional Director\", \"San Francisco\", \"6741\", \"2008/10/16\", \"$470,600\"],\r\n    [\"Brenden Wagner\", \"Software Engineer\", \"San Francisco\", \"1314\", \"2011/06/07\", \"$206,850\"],\r\n    [\"Gavin Cortez\", \"Team Leader\", \"San Francisco\", \"2860\", \"2008/10/26\", \"$235,500\"],\r\n    [\"Fiona Green\", \"Chief Operating Officer (COO)\", \"San Francisco\", \"2947\", \"2010/03/11\", \"$850,000\"],\r\n    [\"Unity Butler\", \"Marketing Designer\", \"San Francisco\", \"5384\", \"2009/12/09\", \"$85,675\"],\r\n    [\"Brielle Williamson\", \"Integration Specialist\", \"New York\", \"4804\", \"2012/12/02\", \"$372,000\"],\r\n    [\"Paul Byrd\", \"Chief Financial Officer (CFO)\", \"New York\", \"3059\", \"2010/06/09\", \"$725,000\"],\r\n    [\"Gloria Little\", \"Systems Administrator\", \"New York\", \"1721\", \"2009/04/10\", \"$237,500\"],\r\n    [\"Jenette Caldwell\", \"Development Lead\", \"New York\", \"1937\", \"2011/09/03\", \"$345,000\"],\r\n    [\"Yuri Berry\", \"Chief Marketing Officer (CMO)\", \"New York\", \"6154\", \"2009/06/25\", \"$675,000\"],\r\n    [\"Caesar Vance\", \"Pre-Sales Support\", \"New York\", \"8330\", \"2011/12/12\", \"$106,450\"],\r\n    [\"Bradley Greer\", \"Software Engineer\", \"London\", \"2558\", \"2012/10/13\", \"$132,000\"],\r\n    [\"Jena Gaines\", \"Office Manager\", \"London\", \"3814\", \"2008/12/19\", \"$90,560\"],\r\n    [\"Haley Kennedy\", \"Senior Marketing Designer\", \"London\", \"3597\", \"2012/12/18\", \"$313,500\"],\r\n    [\"Tatyana Fitzpatrick\", \"Regional Director\", \"London\", \"1965\", \"2010/03/17\", \"$385,750\"],\r\n    [\"Michael Silva\", \"Marketing Designer\", \"London\", \"1581\", \"2012/11/27\", \"$198,500\"],\r\n    [\"Angelica Ramos\", \"Chief Executive Officer (CEO)\", \"London\", \"5797\", \"2009/10/09\", \"$1,200,000\"],\r\n    [\"Prescott Bartlett\", \"Technical Author\", \"London\", \"3606\", \"2011/05/07\", \"$145,000\"],\r\n    [\"Suki Burks\", \"Developer\", \"London\", \"6832\", \"2009/10/22\", \"$114,500\"],\r\n    [\"Jennifer Chang\", \"Regional Director\", \"Singapore\", \"9239\", \"2010/11/14\", \"$357,650\"],\r\n    [\"Doris Wilder\", \"Sales Assistant\", \"Sidney\", \"3023\", \"2010/09/20\", \"$85,600\"],\r\n    [\"Michelle House\", \"Integration Specialist\", \"Sidney\", \"2769\", \"2011/06/02\", \"$95,400\"]\r\n];\r\nReactDOM.render(<LiteTableDemo />, mountNode);\r\n",
    ReactTable: "const columns = [\r\n    { title: \"title1\", dataIndex: \"a\", key: \"a\", width: 100 },\r\n    { id: \"123\", title: \"title2\", dataIndex: \"b\", key: \"b\", width: 100 },\r\n    { title: \"title3\", dataIndex: \"c\", key: \"c\", width: 200 },\r\n    {\r\n        title: \"Operations\", dataIndex: \"\", key: \"d\", render() {\r\n            return <a href=\"#\">Operations</a>;\r\n        }\r\n    }\r\n];\r\n\r\nconst data = [\r\n    { a: \"123\", key: \"1\" },\r\n    { a: \"cdd\", b: \"edd\", key: \"2\" },\r\n    { a: \"1333\", c: \"eee\", d: 2, key: \"3\" }\r\n];\r\n\r\nReactDOM.render(<ReactTable columns={columns} className=\"bordered\" data={data}/>, mountNode);\r\n",
    ReactDragTable: "const columns = [\r\n    { title: '(All Ratios in Local Currency)', dataIndex: 'name', key: 'name', fixed: 'left' },\r\n    { title: <div>2006 31 DEC 2006</div>, children: [{ title: 'REPORTED', dataIndex: 'R2006', key: 'R2006' }, { title: 'ADJUSTED', dataIndex: 'A2006', key: 'A2006' }] },\r\n    { title: <div>2007 31 DEC 2007</div>, children: [{ title: 'REPORTED', dataIndex: 'R2007', key: 'R2007' }, { title: 'ADJUSTED', dataIndex: 'A2007', key: 'A2007' }] },\r\n    { title: <div>2008 31 DEC 2008</div>, children: [{ title: 'REPORTED', dataIndex: 'R2008', key: 'R2008' }, { title: 'ADJUSTED', dataIndex: 'A2008', key: 'A2008' }] },\r\n    { title: <div>2009 31 DEC 2009</div>, children: [{ title: 'REPORTED', dataIndex: 'R2009', key: 'R2009' }, { title: 'ADJUSTED', dataIndex: 'A2009', key: 'A2009' }] },\r\n    { title: <div>2010 31 DEC 2010</div>, children: [{ title: 'REPORTED', dataIndex: 'R2010', key: 'R2010' }, { title: 'ADJUSTED', dataIndex: 'A2010', key: 'A2010' }] },\r\n    { title: <div>2011 31 DEC 2011</div>, children: [{ title: 'REPORTED', dataIndex: 'R2011', key: 'R2011' }, { title: 'ADJUSTED', dataIndex: 'A2011', key: 'A2011' }] },\r\n    { title: <div>2012 31 DEC 2012</div>, children: [{ title: 'REPORTED', dataIndex: 'R2012', key: 'R2012' }, { title: 'ADJUSTED', dataIndex: 'A2012', key: 'A2012' }] },\r\n    { title: <div>2013 31 DEC 2013</div>, children: [{ title: 'REPORTED', dataIndex: 'R2013', key: 'R2013' }, { title: 'ADJUSTED', dataIndex: 'A2013', key: 'A2013' }] },\r\n    { title: <div>2014 31 DEC 2014</div>, children: [{ title: 'REPORTED', dataIndex: 'R2014', key: 'R2014' }, { title: 'ADJUSTED', dataIndex: 'A2014', key: 'A2014' }] },\r\n    { title: <div>2015 31 DEC 2015</div>, children: [{ title: 'REPORTED', dataIndex: 'R2015', key: 'R2015' }, { title: 'ADJUSTED', dataIndex: 'A2015', key: 'A2015' }] }\r\n];\r\nconst createData = function () {\r\n    const count = 5;\r\n    const datas = [];\r\n    for (let i = 0; i < count; i++) {\r\n        const data = { key: i, name: 'Net Interest Margin ' + (i + 1), R2006: '0.48 %', A2006: '0.48 %', R2007: '0.55 %', A2007: '0.55 %', R2008: '0.67 %', A2008: '0.95 %', R2009: '0.74 %', A2009: '1.42 %', R2010: '0.97 %', A2010: '1.60 %', R2011: '0.96 %', A2011: '1.43 %', R2012: '0.82 %', A2012: '1.36 %', R2013: '0.87 %', A2013: '1.33 %', R2014: '0.95 %', A2014: '1.43 %', R2015: '1.01 %', A2015: '1.56 %' };\r\n        datas.push(data);\r\n    }\r\n    return datas;\r\n};\r\nconst data = createData();\r\nReactDOM.render(<ReactTable columns={columns} className=\"bordered\" data={data} enableColumnDraggable/>, mountNode);\r\n",
    ReactSortTable: "import * as _ from \"lodash\";\r\n\r\nclass SortReactTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: this.props.data\r\n        };\r\n        this.sortOrder = this.sortOrder.bind(this);\r\n    }\r\n    \r\n    sortOrder(name, currSortOrder, event) {\r\n        let data = this.props.data;\r\n        const item = this.props.sortColumns.find((o) => o.columnName === name);\r\n        if (item) {\r\n            data = _.orderBy(data, [name.toLowerCase()], [currSortOrder]);\r\n        }\r\n        this.setState({data});\r\n        console.log(`column: ${name}, Index: ${currSortOrder}, event: ${event.target}`);\r\n    }\r\n\r\n    render() {\r\n        const {columns, sortColumns} = this.props;\r\n        return (\r\n            <ReactTable \r\n                columns={columns} \r\n                data={this.state.data} \r\n                sortOrder={this.sortOrder}\r\n                sortColumns={sortColumns}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst columns = [\r\n    {title: \"Name\", dataIndex: \"name\", key: \"name\", width: 400},\r\n    {title: \"Type\", dataIndex: \"type\", key: \"type\", width: 100},\r\n    {title: \"Email Setting\", dataIndex: \"emailSetting\", key: \"emailSetting\", width: 320},\r\n    {title: \"Date Time\", dataIndex: \"datetime\", key: \"datetime\", width: 150}\r\n];\r\n\r\nconst datas = [\r\n    {\r\n        name: \"Sectors 2014-02-17 16:10:53 Dveadgovd Izkgvtcws Rwjvyhjw Gxzquge Ayzkkdjm\", type: 3, emailSetting: 2, datetime: \"2004-05-07 15:44:40\"\r\n    },\r\n    {\r\n        name: \"Issuer 2004-05-07 15:44:40 Jmps Behkoionkn Fxqzsk Xpkplv\", type: 2, emailSetting: 2, datetime: \"2004-05-07 15:44:40\"\r\n    },\r\n    {\r\n        name: \"Issuer 1984-08-20 12:34:17 Louiciw Lrn Rhjmrb Tiom Hanxwedu Qgjzbxe Frsqh\", type: 2, emailSetting: 2, datetime: \"1984-08-20 12:34:17\"\r\n    },\r\n    {\r\n        name: \"Issuer 1973-03-03 02:11:42 Scewsnfbw Fzxs Ojxyuhopb Lnekgufly Fpb Yfexutbgt\", type: 1, emailSetting: 2, datetime: \"1973-03-03 02:11:42\"\r\n    },\r\n    {\r\n        name: \"Issuer 1999-11-02 12:26:38 Ryys Giliyirx Xwbg Utrs\", type: 2, emailSetting: 2, datetime: \"1999-11-02 12:26:38\"\r\n    },\r\n    {\r\n        name: \"Issuer 1988-12-24 11:26:19 Nivfi Kdglhkbgw Nujokcxvx Ksuaa Pkgy\", type: 1, emailSetting: 2, datetime: \"1988-12-24 11:26:19\"\r\n    },\r\n    {\r\n        name: \"Issuer 1992-11-14 06:08:36 Ejafb Ebkjjalre Ptqbc Rbyb Eokqgbym Iwytvxjs\", type: 1, emailSetting: 2, datetime: \"1992-11-14 06:08:36\"\r\n    },\r\n    {\r\n        name: \"Issuer 2016-09-13 02:34:53 Joi Dadvv Oyjopt\", type: 2, emailSetting: 3, datetime: \"2016-09-13 02:34:53\"\r\n    }\r\n];\r\n\r\nconst arrowUp = <Icon icon=\"arrow-up\"/>;\r\nconst arrowDown = <Icon icon=\"arrow-down\" />;\r\n\r\nconst sortColumns = [\r\n    {\r\n        columnName: \"Name\",\r\n        sortOrderOptions: [{sortOrder: \"asc\", icon: arrowUp}, {sortOrder: \"desc\", icon: arrowDown}],\r\n        currSortOrder: \"asc\"\r\n    }\r\n];\r\n\r\nReactDOM.render(\r\n  <SortReactTable \r\n      columns={columns} \r\n      data={datas} \r\n      sortColumns={sortColumns}\r\n  />, mountNode);",
    LiteTableTreeViewSample: "const LiteTableTreeViewDemo = React.createClass({\r\n    render() {\r\n        return (<LiteTable ref=\"table1\" style={{ width: 768 }} options={{\r\n            scrollX: true,\r\n            scrollXInner: \"1505px\",\r\n            data: dataSet, /* eslint no-use-before-define: 0 */\r\n            columns: [\r\n                { width: '100px', data: 'name' },\r\n                { width: '400px', data: 'position' },\r\n                { data: 'office' },\r\n                { width: '400px', data: 'extn' },\r\n                { width: '400px', data: 'date' },\r\n                { width: '100px', data: 'salary' }\r\n            ],\r\n            fixedColumns: {\r\n                leftColumns: 1,\r\n                rightColumns: 1\r\n            },\r\n            fixedRows: true,\r\n            rowGroupingIndex: 2,\r\n            treeView: {\r\n                identSize: 20\r\n            }\r\n        }}>\r\n            <thead>\r\n                <tr><th rowSpan=\"2\">Name</th><th colSpan=\"4\">Info</th><th rowSpan=\"2\">Salary</th></tr>\r\n                <tr><th>Position</th><th>Office</th><th>Extn</th><th>Start date</th></tr>\r\n            </thead>\r\n            <tbody></tbody>\r\n        </LiteTable>);\r\n    }\r\n});\r\n\r\nvar dataSet = [\r\n    { name: \"Tiger Nixon\", depth: 1, position: \"System Architect\", office: \"Edinburgh\", extn: \"5421\", date: \"2011/04/25\", salary: \"$320,800\" },\r\n    { name: \"Cedric Kelly\", depth: 2, position: \"Senior Javascript Developer\", office: \"Edinburgh\", extn: \"6224\", date: \"2012/03/29\", salary: \"$433,060\" },\r\n    { name: \"Sonya Frost\", depth: 3, position: \"Software Engineer\", office: \"Edinburgh\", extn: \"1667\", date: \"2008/12/13\", salary: \"$103,600\" },\r\n    { name: \"Quinn Flynn\", depth: 2, position: \"Support Lead\", office: \"Edinburgh\", extn: \"9497\", date: \"2013/03/03\", salary: \"$342,000\" },\r\n    { name: \"Tiger Nixon\", depth: 1, position: \"System Architect\", office: \"Tokyo\", extn: \"5421\", date: \"2011/04/25\", salary: \"$320,800\" },\r\n    { name: \"Cedric Kelly\", depth: 2, position: \"Senior Javascript Developer\", office: \"Tokyo\", extn: \"6224\", date: \"2012/03/29\", salary: \"$433,060\" },\r\n    { name: \"Sonya Frost\", depth: 3, position: \"Software Engineer\", office: \"Tokyo\", extn: \"1667\", date: \"2008/12/13\", salary: \"$103,600\" },\r\n    { name: \"Quinn Flynn\", depth: 3, position: \"Support Lead\", office: \"Tokyo\", extn: \"9497\", date: \"2013/03/03\", salary: \"$342,000\" },\r\n    { name: \"Tiger Nixon\", depth: 1, position: \"System Architect\", office: \"New York\", extn: \"5421\", date: \"2011/04/25\", salary: \"$320,800\" },\r\n    { name: \"Cedric Kelly\", depth: 2, position: \"Senior Javascript Developer\", office: \"New York\", extn: \"6224\", date: \"2012/03/29\", salary: \"$433,060\" },\r\n    { name: \"Sonya Frost\", depth: 3, position: \"Software Engineer\", office: \"New York\", extn: \"1667\", date: \"2008/12/13\", salary: \"$103,600\" },\r\n    { name: \"Quinn Flynn\", depth: 4, position: \"Support Lead\", office: \"New York\", extn: \"9497\", date: \"2013/03/03\", salary: \"$342,000\" }\r\n];\r\n\r\nReactDOM.render(<LiteTableTreeViewDemo />, mountNode);\r\n",
    BasicDrillDown: "const { Drillable, DrillableDetailRow, DrillDownFooter, DrillDownHeader } = DrillDown;\r\n\r\nconst styles = {\r\n    drillable: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        maxWidth: '900px'\r\n    }\r\n};\r\n\r\nconst data = {\r\n    reportedData: [{\r\n        name: 'Noncontrolling interest - minority interest',\r\n        value: 2.15,\r\n        calculateAction: '+',\r\n        filing: null\r\n    }],\r\n    adjustmentData: [{\r\n        name: 'Noncontrolling interest',\r\n        value: 1.1,\r\n        calculateAction: '+',\r\n        filing: null\r\n    }, {\r\n        name: 'Hybird sec',\r\n        value: 0.3,\r\n        calculateAction: '+',\r\n        filing: null\r\n    }],\r\n    adjustedData: [{\r\n        name: 'Noncontrolling interest - minority interest',\r\n        value: 2.15,\r\n        calculateAction: '+',\r\n        filing: null\r\n    }]\r\n};\r\n\r\nclass Drilldown extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            organizationData: null,\r\n            accountData: null,\r\n            collapse: false\r\n        };\r\n        this.onDrill = this.onDrill.bind(this);\r\n        this.renderChildDirllable = this.renderChildDirllable.bind(this);\r\n        this.renderDetailRow = this.renderDetailRow.bind(this);\r\n        this.onCollapsePressed = this.onCollapsePressed.bind(this);\r\n    }\r\n    renderChildDirllable(currentLevel) {\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve([\r\n                    <Drillable key={1} level={currentLevel + 1} hasChildDrillable={true} childDrillableNumber={3} name={'Common Shares'} value={45.23} calculateAction={'+'} onDrill={() => this.onDrill(false, currentLevel + 1, null)}/>,\r\n                    <Drillable key={2} level={currentLevel + 1} hasChildDrillable={true} childDrillableNumber={3} name={'Retained earning'} value={45.23} calculateAction={'+'} onDrill={() => this.onDrill(false, currentLevel + 1, null)}/>\r\n                ]);\r\n            }, 2000);\r\n        });\r\n    }\r\n    renderDetailRow() {\r\n        return ([\r\n            <DrillableDetailRow key={1} description=\"As Reported\" data={data.reportedData}/>,\r\n            <DrillableDetailRow key={2} description=\"Standard Adjustment\" data={data.adjustmentData}/>,\r\n            <DrillableDetailRow key={3} description=\"As Adjust\" data={data.adjustedData}/>\r\n        ]);\r\n    }\r\n    onDrill(hasChildDrillable, currentLevel, flag) {\r\n        return new Promise((resolve1) => {\r\n            if (hasChildDrillable) {\r\n                this.renderChildDirllable(currentLevel, flag)\r\n                    .then((res) => resolve1(res));\r\n            } else {\r\n                resolve1(this.renderDetailRow(flag));\r\n            }\r\n        });\r\n    }\r\n    onCollapsePressed() {\r\n        this.setState({\r\n            collapse: !this.state.collapse\r\n        });\r\n    }\r\n    render() {\r\n        return (<div style={styles.drilldown} className=\"drilldown\">\r\n                <DrillDownHeader collapsed={this.state.collapsed} onCollapse={this.onCollapsePressed}/>\r\n                <Drillable level={1} childType={'drillable'} name={'Common Equity'} value={45.23} calculateAction={'+'} onDrill={() => this.onDrill(true, 1, null)} collapse={this.state.collapse}/>\r\n                <Drillable level={1} childType={'drillable'} name={'Goodwill'} value={7.91} calculateAction={'+'} onDrill={() => this.onDrill(true, 1, null)} collapse={this.state.collapse}/>\r\n                <Drillable level={1} childType={'LookBack'} name={'Noncontrolling interest'} value={22.64} calculateAction={'+'} onDrill={() => this.onDrill(false, 1, null)} collapse={this.state.collapse}/>\r\n                <DrillDownFooter name={'Cost of Goods / Products'} value={45.82}/>\r\n            </div>);\r\n    }\r\n}\r\n\r\nReactDOM.render(<Drilldown />, mountNode);\r\n",
    AVGDrillDown: "const { Drillable, DrillableDetailRow, DrillDownFooter, DrillDownHeader } = DrillDown;\r\n\r\nconst AVGdata = [{\r\n    name: 'Q1 2016 TYD',\r\n    value: \"14.00\",\r\n    calculateAction: '/AVG',\r\n    filing: null\r\n}, {\r\n    name: 'Q2 2016 TYD',\r\n    value: \"14.23\",\r\n    calculateAction: 'plus',\r\n    filing: null\r\n}, {\r\n    name: 'Q3 2016 TYD',\r\n    value: \"14.88\",\r\n    calculateAction: 'plus',\r\n    filing: null\r\n}, {\r\n    name: 'FY 2015',\r\n    value: \"11.23\",\r\n    calculateAction: 'plus',\r\n    filing: null\r\n}];\r\n\r\nclass AVGDrilldown extends React.Component {\r\n    render() {\r\n        return (\r\n          <div className=\"drilldown\">\r\n              <DrillDownHeader />\r\n              <Drillable level={1} childType={\"LookBack\"} name={'Loan Loss Provisions'} value={\"4.18\"} calculateAction={null} />\r\n              <DrillableDetailRow description=\"Allowance for loan losses\" data={AVGdata} AVGstyle={true} />\r\n              <DrillDownFooter name={'Cost of Goods / Products'} value={\"39.86 %\"}/>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(<AVGDrilldown />, mountNode);",
    ComboBox: "const ComboBoxInstance = React.createClass({\r\n    getInitialState: () => {\r\n        return { showContent: false, searchText: \"\" };\r\n    },\r\n    _renderStates() {\r\n        const searchText = this.state.searchText;\r\n        let states = [\"Alabama\", \"Alaska\", \"Arizona\", \"Arkansas\", \"California\", \"Colorado\", \"Connecticut\", \"Delaware\", \"Florida\", \"Georgia\", \"Hawaii\", \"Idaho\", \"Illinois\", \"Indiana\", \"Iowa\", \"Kansas\", \"Kentucky\",\r\n            \"Louisiana\", \"Maine\", \"Maryland\", \"Massachusetts\", \"Michigan\", \"Minnesota\", \"Mississippi\", \"Missouri\", \"Montana\", \"Nebraska\", \"Nevada\", \"New Hampshire\", \"New Jersey\", \"New Mexico\", \"New York\", \"North Carolina\",\r\n            \"North Dakota\", \"Ohio\", \"Oklahoma\", \"Oregon\", \"Pennsylvania\", \"Rhode Island\", \"South Carolina\", \"South Dakota\", \"Tennessee\", \"Texas\", \"Utah\", \"Vermont\", \"Virginia\", \"Washington\", \"West Virginia\", \"Wisconsin\", \"Wyoming\"];\r\n        if (searchText) {\r\n            states = states.filter((state) => {\r\n                return state.toLowerCase().indexOf(searchText) >= 0;\r\n            });\r\n        }\r\n        return states.map((state, index) => {\r\n            return (<div key={index}> <CheckBox text={state}/> </div>);\r\n        });\r\n    },\r\n    _renderContent() {\r\n        const divContainer = { maxHeight: \"250px\", overflow: \"auto\", borderBottom: \"1px solid #ccc\" };\r\n        const buttonSpan = { marginRight: \"10px\" };\r\n        const buttonsDiv = { padding: \"10px\" };\r\n        return (<div>\r\n                <div style={divContainer}>\r\n                    {this._renderStates()}\r\n                </div>\r\n                <div style={buttonsDiv}>\r\n                    <span style={buttonSpan}><Button onClick={this.onCancelClick}>Cancel</Button></span>\r\n                    <span><Button onClick={this.onOkClick} primary>OK</Button></span>\r\n                </div>\r\n            </div>);\r\n    },\r\n    onCancelClick() {\r\n        this.setState({ showContent: false });\r\n    },\r\n    onOkClick() {\r\n        this.setState({ showContent: false });\r\n    },\r\n    render() {\r\n        return (<ComboBox onCollapseExpandClick={this.onCollapseExpandClick} showContent={this.state.showContent} searchText={this.state.searchText} onMouseLeave={this.onMouseLeave} onSearchTextChange={this.onSearchTextChange} placeholder=\"Search or Select State\">\r\n                {this._renderContent()}\r\n            </ComboBox>);\r\n    },\r\n    onCollapseExpandClick() {\r\n        this.setState({ showContent: !this.state.showContent });\r\n    },\r\n    onMouseLeave() {\r\n        this.setState({ showContent: false });\r\n    },\r\n    onSearchTextChange(e) {\r\n        this.setState({ showContent: true, searchText: e.currentTarget.value });\r\n    }\r\n});\r\nReactDOM.render(<ComboBoxInstance />, mountNode);\r\n",
    TreeReactTable: "class TreeTable extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.onExpand = this.onExpand.bind(this);\r\n        this.onClick = this.onClick.bind(this);\r\n        this.state = {\r\n            reported: true\r\n        };\r\n        this.columns = [{ \r\n            title: <div>\r\n                       <CheckBox text=\"Reported\" value=\"Reported\" checked onclick={this.onClick} name=\"Reported\" />\r\n                   </div>, \r\n            dataIndex: 'name', \r\n            key: 'name', \r\n            fixed: 'left'\r\n        }, { \r\n            title: <div>2006 31 DEC 2006</div>, \r\n            children: [{ title: 'REPORTED', dataIndex: 'R2006', key: 'R2006' }, { title: 'ADJUSTED', dataIndex: 'A2006', key: 'A2006' }]\r\n        }, { \r\n            title: <div>2007 31 DEC 2007</div>,\r\n            children: [{ title: 'REPORTED', dataIndex: 'R2007', key: 'R2007' }, { title: 'ADJUSTED', dataIndex: 'A2007', key: 'A2007' }]\r\n        }];\r\n        this.data = [{\r\n            key: 1,\r\n            name: 'Net Interest Margin',\r\n            R2006: '0.66 %',\r\n            A2006: '0.43 %',\r\n            R2007: '0.55 %',\r\n            A2007: '1.23 %',\r\n            children: [{\r\n                key: 2,\r\n                name: 'Net Interest Margin',\r\n                R2006: '0.66 %',\r\n                A2006: '0.43 %',\r\n                R2007: '0.55 %',\r\n                A2007: '1.23 %',\r\n                children: [{\r\n                    key: 3,\r\n                    name: 'Net Interest Margin',\r\n                    R2006: '0.66 %',\r\n                    A2006: '0.43 %',\r\n                    R2007: '0.55 %',\r\n                    A2007: '1.23 %'\r\n                }]\r\n            }]\r\n        }, {\r\n            key: 4,\r\n            name: 'Net Interest Margin',\r\n            R2006: '0.66 %',\r\n            A2006: '0.43 %',\r\n            R2007: '0.55 %',\r\n            A2007: '1.23 %'\r\n        }];\r\n    }\r\n    onClick() {\r\n        if (this.state.reported === true) {\r\n            this.columns = [{ \r\n                title: <div>\r\n                            <CheckBox text=\"Reported\" value=\"Reported\" checked onclick={this.onClick} name=\"Reported\" />\r\n                        </div>, \r\n                dataIndex: 'name', \r\n                key: 'name', \r\n                fixed: 'left'\r\n            }, { \r\n                title: <div>2006 31 DEC 2006</div>, \r\n                children: [{ title: 'ADJUSTED', dataIndex: 'A2006', key: 'A2006' }]\r\n            }, { \r\n                title: <div>2007 31 DEC 2007</div>,\r\n                children: [{ title: 'ADJUSTED', dataIndex: 'A2007', key: 'A2007' }]\r\n            }];\r\n            this.setState({reported: false});\r\n        } else {\r\n            this.columns = [{ \r\n                title: <div>\r\n                        <CheckBox text=\"Reported\" value=\"Reported\" checked onclick={this.onClick} name=\"Reported\" />\r\n                    </div>, \r\n                dataIndex: 'name', \r\n                key: 'name', \r\n                fixed: 'left'\r\n            }, { \r\n                title: <div>2006 31 DEC 2006</div>, \r\n                children: [{ title: 'REPORTED', dataIndex: 'R2006', key: 'R2006' }, { title: 'ADJUSTED', dataIndex: 'A2006', key: 'A2006' }]\r\n            }, { \r\n                title: <div>2007 31 DEC 2007</div>,\r\n                children: [{ title: 'REPORTED', dataIndex: 'R2007', key: 'R2007' }, { title: 'ADJUSTED', dataIndex: 'A2007', key: 'A2007' }]\r\n            }];\r\n            this.setState({reported: true});\r\n        }\r\n    }\r\n    onExpand(expanded, record) {\r\n        console.log('onExpand', expanded, record);\r\n    }\r\n    render() {\r\n        return (\r\n            <ReactTable columns={this.columns} data={this.data} onExpand={this.onExpand} enableColumnDraggable />\r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n  <TreeTable />,\r\n  mountNode\r\n);",
    AlertBanner: "const AlertBannerInstance = React.createClass({\r\n    render() {\r\n        return (<AlertBanner>\r\n                    <div>\r\n                        <Icon icon=\"checkmark\"/> &nbsp;\r\n                        Basic AlertBanner with auto open and close.\r\n                    </div>\r\n            </AlertBanner>\r\n        );\r\n    }\r\n});\r\nReactDOM.render(<AlertBannerInstance />, mountNode);\r\n",
    AdvancedAlertBanner: "const AdvancedAlertBannerInstance = React.createClass({\r\n    getInitialState: () => {\r\n        return { visible: false };\r\n    },\r\n    render() {\r\n        const msgLinkStyle = {\r\n            color: \"white\", cursor: \"pointer\", textDecoration: \"underline\"\r\n        };\r\n        const content = this.state.visible ?\r\n               <AlertBanner\r\n                   autoclose \r\n                   closeable\r\n                   onClose={this.handleClose}\r\n               >\r\n                    <div>\r\n                        <Icon icon=\"checkmark\"/> &nbsp;\r\n                        Advance Alert Banner with configurable Properties.&nbsp;\r\n                        <Link style={msgLinkStyle} onClick={this.onUndoClickHandler}>Undo</Link><br/>\r\n                        Click <Link style={msgLinkStyle} onClick={this.onMoreClickHandler}>Here</Link> for more details.\r\n                    </div>\r\n               </AlertBanner>\r\n              : null;\r\n        return (<div> { content } \r\n            <Link onClick={this.handleOpen}>Show Alert</Link>\r\n          </div>);\r\n    },\r\n                                                      \r\n    handleOpen() {\r\n        if (this.state.visible !== true) {  \r\n            this.setState({ visible: true });\r\n        }\r\n    },\r\n    handleClose() {\r\n        console.log(\"AlertBanner close Handler called..\");\r\n        this.setState({ visible: false });\r\n    },\r\n    onUndoClickHandler() {\r\n        console.log(\"Clicked Undo link..\");\r\n        this.setState({ visible: false });\r\n    },\r\n    onMoreClickHandler() {\r\n        console.log(\"Clicked More link..\");\r\n        this.setState({ visible: false });\r\n    }\r\n});\r\n\r\nReactDOM.render(<AdvancedAlertBannerInstance />, mountNode);\r\n",
    DefaultTooltip: "const TooltipInstance = React.createClass({\r\n\r\n    render() {\r\n        const DefaultTrigger = <Label block for=\"someId\">Default(top-right)</Label>;\r\n        const tlTrigger = <Label block for=\"someId\">top-left</Label>;\r\n        const lTrigger = <Label block for=\"someId\">left</Label>;\r\n        const rTrigger = <Label block for=\"someId\">right</Label>;\r\n        const blTrigger = <Label block for=\"someId\">bottom-left</Label>;\r\n        const brTrigger = <Label block for=\"someId\">bottom-right</Label>;\r\n        const rtTrigger = <Label block for=\"someId\">right-top</Label>;\r\n        const ltTrigger = <Label block for=\"someId\">left-top</Label>;        \r\n        const lbTrigger = <Label block for=\"someId\">left-bottom</Label>;\r\n        const rbTrigger = <Label block for=\"someId\">right-bottom</Label>;        \r\n        const blockStyle = { width: '20%', height: '100px', display: 'inline-block' };\r\n        const minwidthTooltiptext = \"Lorem\";\r\n        const maxwidthTooltiptext = \"Consequuuntur magni dolores eos qui ratione volupatem sequiaccusantiom doereldsal .\";\r\n        \r\n        return (  \r\n    <div>\r\n    <div style={blockStyle}>\r\n    <Tooltip tooltipTrigger={DefaultTrigger} tooltipText={minwidthTooltiptext} align=\"top-right\"/>\r\n    </div>\r\n    <div style={blockStyle}>\r\n    <Tooltip tooltipTrigger={tlTrigger} tooltipText={minwidthTooltiptext} align=\"top-left\"/>\r\n    </div>\r\n    <div style={blockStyle}>\r\n    <Tooltip tooltipTrigger={lTrigger} tooltipText={minwidthTooltiptext} align=\"left\"/>\r\n    </div>\r\n        <div style={blockStyle}>\r\n    <Tooltip tooltipTrigger={rTrigger} tooltipText={minwidthTooltiptext} align=\"right\"/>\r\n    </div>\r\n        <div style={blockStyle}>\r\n    <Tooltip tooltipTrigger={blTrigger} tooltipText={minwidthTooltiptext} align=\"bottom-left\"/>\r\n    </div>\r\n        <div style={blockStyle}>\r\n    <Tooltip tooltipTrigger={brTrigger} tooltipText={maxwidthTooltiptext} align=\"bottom-right\"/>\r\n    </div>\r\n            <div style={blockStyle}>\r\n    <Tooltip tooltipTrigger={rtTrigger} tooltipText={maxwidthTooltiptext} align=\"right-top\"/>\r\n    </div>\r\n            <div style={blockStyle}>\r\n    <Tooltip tooltipTrigger={ltTrigger} tooltipText={maxwidthTooltiptext} align=\"left-top\"/>\r\n    </div>\r\n        <div style={blockStyle}>\r\n    <Tooltip tooltipTrigger={lbTrigger} tooltipText={maxwidthTooltiptext} align=\"left-bottom\"/>\r\n    </div>\r\n        <div style={blockStyle}>\r\n    <Tooltip tooltipTrigger={rbTrigger} tooltipText={maxwidthTooltiptext} align=\"right-bottom\"/>\r\n    </div>\r\n    </div>\r\n    );\r\n    }\r\n});\r\n\r\nReactDOM.render(<TooltipInstance />, mountNode);\r\n",
    ModalAlertBanner: "const ModalAlertBannerInstance = React.createClass({\r\n    getInitialState() {\r\n        return {\r\n            modalVisible: false\r\n        };\r\n    },\r\n    showModal() {\r\n        this.setState({ modalVisible: true });\r\n    },\r\n    hideModal() {\r\n        this.setState({ modalVisible: false });\r\n    },\r\n    render() {\r\n        return (<div>\r\n          <button onClick={this.showModal}>Display Modal</button>\r\n          <Modal visible={this.state.modalVisible} onRequestClose={this.hideModal} title='Model with AlertBanner'>\r\n            <AlertBanner inline><div>AlertBanner content</div></AlertBanner>\r\n            <div>\r\n                Modal Dialog Content\r\n            </div>\r\n          </Modal>\r\n        </div>);\r\n    }\r\n});\r\n\r\nReactDOM.render(<ModalAlertBannerInstance />, mountNode);\r\n",
    Dropdown: {
        Default: "const itemsA = [\r\n    { key: \"itemA1\", text: \"A\", value: 1 },\r\n    { key: \"itemA2\", text: \"B - A very very very very very very very very very long option\", value: 2 },\r\n    { key: \"itemA3\", text: \"C\", value: 3 }\r\n];\r\nconst itemsB = [\r\n    { key: \"itemB1\", text: \"the first option\" },\r\n    { key: \"itemB2\", text: \"the second option - A very very very very very very very very very long option\" },\r\n    { key: \"itemB3\", text: \"the third option\", selected: true},\r\n    { key: \"itemB4\", text: \"the fourth option\" },\r\n    { key: \"itemB5\", text: \"the fifth option\" },\r\n    { key: \"itemB6\", text: \"the sixth option\" }\r\n];\r\nconst DropdownListInstance = React.createClass({\r\n    render() {\r\n        return (<Grid>\r\n            <Row>\r\n                <div style={{marginBottom: '20px'}}>\r\n                    <Dropdown optionItems={itemsA} width=\"50%\" onChange={this.handleSelectItemChange}/>  \r\n                </div> \r\n            </Row>\r\n            <Row>\r\n                <div style={{marginBottom: '20px'}}>\r\n                    <Dropdown optionItems={itemsA} width=\"250px\" onChange={this.handleSelectItemChange}/> \r\n                </div>  \r\n            </Row>\r\n            <Row>\r\n                <Dropdown optionItems={itemsB} onChange={this.handleSelectItemChange}/>   \r\n            </Row>\r\n        </Grid>);\r\n    },\r\n    handleSelectItemChange(key, options) {\r\n        const selectedOption = options.filter((opt) => opt.key === key)[0];\r\n        const logText = `selected item is: key: ${key}, text: ${selectedOption.text}, value: ${selectedOption.value}`;\r\n        console.log(logText);\r\n    } });\r\nReactDOM.render(<DropdownListInstance />, mountNode);\r\n",
        Multiselect: "const optionItems = [\r\n    { text: \"item 1\", key: \"1\" },\r\n    { text: \"item 2\", key: \"2\" },\r\n    { text: \"item 3\", key: \"3\", selected: true },\r\n    { text: \"item 4\", key: \"4\", selected: true },\r\n    { text: \"item 5\", key: \"5\" },\r\n    { text: \"item 6\", key: \"6\" },\r\n    { text: \"item 7\", key: \"7\" },\r\n    { text: \"item 8\", key: \"8\" },\r\n    { text: \"item 9\", key: \"9\" },\r\n    { text: \"item 10\", key: \"10\" }\r\n];\r\n\r\nconst DropdownMultiselect = React.createClass({ \r\n    render() {\r\n        return (\r\n            <Dropdown multiselect optionItems={optionItems} onChange={this.selectionChanged} width=\"200px\" />\r\n        );\r\n    },\r\n    selectionChanged(allItems) {\r\n        const items = allItems.filter((item) => item.selected === true);\r\n        console.log(`selected items = [${items.map((item) => item.key).join(\",\")}]`);\r\n    }\r\n});\r\n\r\nReactDOM.render(<DropdownMultiselect />, mountNode);\r\n",
        MultiselectControlled: "const optionItems = [\r\n    { text: \"item1\", value: \"1\", key: \"k1\" },\r\n    { text: \"item2 - A very very very very very very very long one\", value: \"2\", key: \"k2\" },\r\n    { text: \"item3\", value: \"3\", selected: true, key: \"k3\" },\r\n    { text: \"item4\", value: \"4\", selected: true, key: \"k4\" },\r\n    { text: \"item5\", value: \"5\", key: \"k5\" }\r\n];\r\n\r\nconst DropdownMultiselect = React.createClass({\r\n    render() {\r\n        return (\r\n            <Dropdown multiselect controlled optionItems={optionItems} onChange={this.selectionChanged} width=\"200px\" />\r\n        );\r\n    },\r\n    selectionChanged(allItems) {\r\n        const items = allItems.filter((item) => item.selected === true);\r\n        console.log(`selected items = [${items.map((item) => item.key).join(\",\")}]`);\r\n    }\r\n});\r\n\r\nReactDOM.render(<DropdownMultiselect />, mountNode);\r\n",
        Searchable: "const ComboBoxInstance = React.createClass({\r\n    getInitialState: () => {\r\n        return { showContent: false, searchText: \"\" };\r\n    },\r\n    _renderStates() {\r\n        const searchText = this.state.searchText;\r\n        let states = [\"Alabama\", \"Alaska\", \"Arizona\", \"Arkansas\", \"California\", \"Colorado\", \"Connecticut\", \"Delaware\", \"Florida\", \"Georgia\", \"Hawaii\", \"Idaho\", \"Illinois\", \"Indiana\", \"Iowa\", \"Kansas\", \"Kentucky\",\r\n            \"Louisiana\", \"Maine\", \"Maryland\", \"Massachusetts\", \"Michigan\", \"Minnesota\", \"Mississippi\", \"Missouri\", \"Montana\", \"Nebraska\", \"Nevada\", \"New Hampshire\", \"New Jersey\", \"New Mexico\", \"New York\", \"North Carolina\",\r\n            \"North Dakota\", \"Ohio\", \"Oklahoma\", \"Oregon\", \"Pennsylvania\", \"Rhode Island\", \"South Carolina\", \"South Dakota\", \"Tennessee\", \"Texas\", \"Utah\", \"Vermont\", \"Virginia\", \"Washington\", \"West Virginia\", \"Wisconsin\", \"Wyoming\"];\r\n        if (searchText) {\r\n            states = states.filter((state) => {\r\n                return state.toLowerCase().indexOf(searchText) >= 0;\r\n            });\r\n        }\r\n        return states.map((state, index) => {\r\n            return (<div key={index}> <CheckBox text={state}/> </div>);\r\n        });\r\n    },\r\n    _renderContent() {\r\n        const divContainer = { maxHeight: \"250px\", overflow: \"auto\", borderBottom: \"1px solid #ccc\" };\r\n        const buttonSpan = { marginRight: \"10px\" };\r\n        const buttonsDiv = { padding: \"10px\" };\r\n        return (<div>\r\n                <div style={divContainer}>\r\n                    {this._renderStates()}\r\n                </div>\r\n                <div style={buttonsDiv}>\r\n                    <span style={buttonSpan}><Button onClick={this.onCancelClick}>Cancel</Button></span>\r\n                    <span><Button onClick={this.onOkClick} primary>OK</Button></span>\r\n                </div>\r\n            </div>);\r\n    },\r\n    onCancelClick() {\r\n        this.setState({ showContent: false });\r\n    },\r\n    onOkClick() {\r\n        this.setState({ showContent: false });\r\n    },\r\n    render() {\r\n        return (<ComboBox onCollapseExpandClick={this.onCollapseExpandClick} showContent={this.state.showContent} searchText={this.state.searchText} onMouseLeave={this.onMouseLeave} onSearchTextChange={this.onSearchTextChange} placeholder=\"Search or Select State\">\r\n                {this._renderContent()}\r\n            </ComboBox>);\r\n    },\r\n    onCollapseExpandClick() {\r\n        this.setState({ showContent: !this.state.showContent });\r\n    },\r\n    onMouseLeave() {\r\n        this.setState({ showContent: false });\r\n    },\r\n    onSearchTextChange(e) {\r\n        this.setState({ showContent: true, searchText: e.currentTarget.value });\r\n    }\r\n});\r\nReactDOM.render(<ComboBoxInstance />, mountNode);\r\n",
        SearchableMultiselect: "const ComboBoxInstance = React.createClass({\r\n    getInitialState: () => {\r\n        return { showContent: false, searchText: \"\" };\r\n    },\r\n    _renderStates() {\r\n        const searchText = this.state.searchText;\r\n        let states = [\"Alabama\", \"Alaska\", \"Arizona\", \"Arkansas\", \"California\", \"Colorado\", \"Connecticut\", \"Delaware\", \"Florida\", \"Georgia\", \"Hawaii\", \"Idaho\", \"Illinois\", \"Indiana\", \"Iowa\", \"Kansas\", \"Kentucky\",\r\n            \"Louisiana\", \"Maine\", \"Maryland\", \"Massachusetts\", \"Michigan\", \"Minnesota\", \"Mississippi\", \"Missouri\", \"Montana\", \"Nebraska\", \"Nevada\", \"New Hampshire\", \"New Jersey\", \"New Mexico\", \"New York\", \"North Carolina\",\r\n            \"North Dakota\", \"Ohio\", \"Oklahoma\", \"Oregon\", \"Pennsylvania\", \"Rhode Island\", \"South Carolina\", \"South Dakota\", \"Tennessee\", \"Texas\", \"Utah\", \"Vermont\", \"Virginia\", \"Washington\", \"West Virginia\", \"Wisconsin\", \"Wyoming\"];\r\n        if (searchText) {\r\n            states = states.filter((state) => {\r\n                return state.toLowerCase().indexOf(searchText) >= 0;\r\n            });\r\n        }\r\n        return states.map((state, index) => {\r\n            return (<div key={index}> <CheckBox text={state}/> </div>);\r\n        });\r\n    },\r\n    _renderContent() {\r\n        const divContainer = { maxHeight: \"250px\", overflow: \"auto\", borderBottom: \"1px solid #ccc\" };\r\n        const buttonSpan = { marginRight: \"10px\" };\r\n        const buttonsDiv = { padding: \"10px\" };\r\n        return (<div>\r\n                <div style={divContainer}>\r\n                    {this._renderStates()}\r\n                </div>\r\n                <div style={buttonsDiv}>\r\n                    <span style={buttonSpan}><Button onClick={this.onCancelClick}>Cancel</Button></span>\r\n                    <span><Button onClick={this.onOkClick} primary>OK</Button></span>\r\n                </div>\r\n            </div>);\r\n    },\r\n    onCancelClick() {\r\n        this.setState({ showContent: false });\r\n    },\r\n    onOkClick() {\r\n        this.setState({ showContent: false });\r\n    },\r\n    render() {\r\n        return (<ComboBox onCollapseExpandClick={this.onCollapseExpandClick} showContent={this.state.showContent} searchText={this.state.searchText} onMouseLeave={this.onMouseLeave} onSearchTextChange={this.onSearchTextChange} placeholder=\"Search or Select State\">\r\n                {this._renderContent()}\r\n            </ComboBox>);\r\n    },\r\n    onCollapseExpandClick() {\r\n        this.setState({ showContent: !this.state.showContent });\r\n    },\r\n    onMouseLeave() {\r\n        this.setState({ showContent: false });\r\n    },\r\n    onSearchTextChange(e) {\r\n        this.setState({ showContent: true, searchText: e.currentTarget.value });\r\n    }\r\n});\r\nReactDOM.render(<ComboBoxInstance />, mountNode);\r\n"
    },
    TooltipsPopover: "const TooltipsPopover = React.createClass({\r\n    render() {\r\n        const blockStyle = { width: '20%', height: '100px', display: 'inline-block' };\r\n        return (<div>\r\n                <div style={blockStyle}>\r\n                    <Popover trigger='hover' toolTips align='top-right'>\r\n                        <PopoverTrigger>Default (top-right) </PopoverTrigger>\r\n                        <Content>\r\n                            <div style={{ position: \"relative\", fontSize: \"14px\", fontWeight: \"bold\" }}>\r\n                                Lorem ipsum dolor\r\n                            </div>\r\n                        </Content>\r\n                    </Popover>\r\n                </div>\r\n                <div style={blockStyle}>\r\n                    <Popover trigger='hover' toolTips align='top-left'>\r\n                        <PopoverTrigger>top-left</PopoverTrigger>\r\n                        <Content>\r\n                            <div style={{ position: \"relative\", fontSize: \"14px\", fontWeight: \"bold\" }}>\r\n                                Lorem ipsum dolor\r\n                            </div>\r\n                        </Content>\r\n                    </Popover>\r\n                </div>\r\n                <div style={blockStyle}>\r\n                    <Popover trigger='hover' toolTips align='left'>\r\n                        <PopoverTrigger>left</PopoverTrigger>\r\n                        <Content>\r\n                            <div style={{ position: \"relative\", fontSize: \"14px\", fontWeight: \"bold\" }}>\r\n                                Lorem ipsum dolor\r\n                            </div>\r\n                        </Content>\r\n                    </Popover>\r\n                </div>\r\n                <div style={blockStyle}>\r\n                    <Popover trigger='hover' toolTips align='right'>\r\n                        <PopoverTrigger>right</PopoverTrigger>\r\n                        <Content>\r\n                            <div style={{ position: \"relative\", fontSize: \"14px\", fontWeight: \"bold\" }}>\r\n                                Lorem ipsum dolor\r\n                            </div>\r\n                        </Content>\r\n                    </Popover>\r\n                </div>\r\n                <div style={blockStyle}>\r\n                    <Popover trigger='hover' toolTips align='bottom-left'>\r\n                        <PopoverTrigger>bottom-left</PopoverTrigger>\r\n                        <Content>\r\n                            <div style={{ position: \"relative\", fontSize: \"14px\", fontWeight: \"bold\" }}>\r\n                                Lorem ipsum dolor\r\n                            </div>\r\n                        </Content>\r\n                    </Popover>\r\n                </div>\r\n                <div style={blockStyle}>\r\n                    <Popover trigger='hover' toolTips align='bottom-right'>\r\n                        <PopoverTrigger>bottom-right</PopoverTrigger>\r\n                        <Content>\r\n                            <div style={{ position: \"relative\", fontSize: \"14px\", fontWeight: \"bold\" }}>\r\n                                Lorem ipsum dolor\r\n                            </div>\r\n                        </Content>\r\n                    </Popover>\r\n                </div>\r\n                <div style={blockStyle}>\r\n                    <Popover trigger='hover' toolTips align='right-top'>\r\n                        <PopoverTrigger>right-top</PopoverTrigger>\r\n                        <Content>\r\n                            <div style={{ position: \"relative\", fontSize: \"14px\", fontWeight: \"bold\" }}>\r\n                                Lorem ipsum dolor\r\n                            </div>\r\n                        </Content>\r\n                    </Popover>\r\n                </div>\r\n                <div style={blockStyle}>\r\n                    <Popover trigger='hover' toolTips align='left-top'>\r\n                        <PopoverTrigger>left-top</PopoverTrigger>\r\n                        <Content>\r\n                            <div style={{ position: \"relative\", fontSize: \"14px\", fontWeight: \"bold\" }}>\r\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\r\n                                dolore magna aliqua.Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\r\n                                nisi ut aliquip ex ea commodo consequat.\r\n                            </div>\r\n                        </Content>\r\n                    </Popover>\r\n                </div>\r\n                <div style={blockStyle}>\r\n                    <Popover trigger='hover' toolTips align='left-bottom'>\r\n                        <PopoverTrigger>left-bottom</PopoverTrigger>\r\n                        <Content>\r\n                            <div style={{ position: \"relative\", fontSize: \"14px\", fontWeight: \"bold\" }}>\r\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\r\n                                dolore magna aliqua.Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\r\n                                nisi ut aliquip ex ea commodo consequat.\r\n                            </div>\r\n                        </Content>\r\n                    </Popover>\r\n                </div>\r\n                <div style={blockStyle}>\r\n                    <Popover trigger='hover' toolTips align='right-bottom'>\r\n                        <PopoverTrigger>right-bottom</PopoverTrigger>\r\n                        <Content>\r\n                            <div style={{ position: \"relative\", fontSize: \"14px\", fontWeight: \"bold\" }}>\r\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\r\n                                dolore magna aliqua.Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\r\n                                nisi ut aliquip ex ea commodo consequat.\r\n                            </div>\r\n                        </Content>\r\n                    </Popover>\r\n                </div>\r\n\r\n            </div>);\r\n    }\r\n});\r\nReactDOM.render(<TooltipsPopover />, mountNode);\r\n"

};
module.exports = CodeSamples;

},{}],45:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Description = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var style = require('./style.less');

var Description = exports.Description = function (_React$Component) {
    _inherits(Description, _React$Component);

    function Description() {
        _classCallCheck(this, Description);

        return _possibleConstructorReturn(this, (Description.__proto__ || Object.getPrototypeOf(Description)).apply(this, arguments));
    }

    _createClass(Description, [{
        key: 'render',
        value: function render() {
            return React.createElement(
                'p',
                { className: style.description },
                this.props.children
            );
        }
    }]);

    return Description;
}(React.Component);

},{"./style.less":52,"react":"react"}],46:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Example = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var style = require('./style.less');

var Example = exports.Example = function (_React$Component) {
    _inherits(Example, _React$Component);

    function Example() {
        _classCallCheck(this, Example);

        return _possibleConstructorReturn(this, (Example.__proto__ || Object.getPrototypeOf(Example)).apply(this, arguments));
    }

    _createClass(Example, [{
        key: 'render',
        value: function render() {
            return React.createElement(
                'div',
                { className: style.examples },
                this.props.children
            );
        }
    }]);

    return Example;
}(React.Component);

},{"./style.less":52,"react":"react"}],47:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Pattern = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var style = require('./style.less');

var Pattern = exports.Pattern = function (_React$Component) {
    _inherits(Pattern, _React$Component);

    function Pattern() {
        _classCallCheck(this, Pattern);

        return _possibleConstructorReturn(this, (Pattern.__proto__ || Object.getPrototypeOf(Pattern)).apply(this, arguments));
    }

    _createClass(Pattern, [{
        key: 'render',
        value: function render() {
            return React.createElement(
                'div',
                { className: style.pattern, id: this.props.tag === undefined ? this.props.name.replace(' ', '_') : this.props.tag },
                React.createElement(
                    'span',
                    { className: style.patternName },
                    this.props.name
                ),
                this.props.children
            );
        }
    }]);

    return Pattern;
}(React.Component);

},{"./style.less":52,"react":"react"}],48:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.PatternGroup = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var style = require('./style.less');

var SubLink = function (_React$Component) {
    _inherits(SubLink, _React$Component);

    function SubLink() {
        _classCallCheck(this, SubLink);

        return _possibleConstructorReturn(this, (SubLink.__proto__ || Object.getPrototypeOf(SubLink)).apply(this, arguments));
    }

    _createClass(SubLink, [{
        key: 'render',
        value: function render() {
            var elemProps = {};
            if (this.props.className) {
                elemProps.className = this.props.className;
            }
            return React.createElement(
                'div',
                elemProps,
                React.createElement(
                    'a',
                    { href: '#' + this.props.section.replace(' ', '_') },
                    this.props.section
                )
            );
        }
    }]);

    return SubLink;
}(React.Component);

var PatternGroup = exports.PatternGroup = function (_React$Component2) {
    _inherits(PatternGroup, _React$Component2);

    function PatternGroup() {
        _classCallCheck(this, PatternGroup);

        return _possibleConstructorReturn(this, (PatternGroup.__proto__ || Object.getPrototypeOf(PatternGroup)).apply(this, arguments));
    }

    _createClass(PatternGroup, [{
        key: 'render',
        value: function render() {
            var grpId = this.props.tag === undefined ? this.props.name.replace(' ', '_') : this.props.tag;
            var propsLink = React.Children.map(this.props.children, function (el, indx) {
                if (el.type.name === 'Props') {
                    return React.createElement(SubLink, { className: style.patternGroupNavPropsLink, key: 'item-' + indx, section: 'Props' });
                } else {
                    return null;
                }
            });
            var links = React.Children.map(this.props.children, function (el, indx) {
                if (el.type.name === 'Pattern') {
                    return React.createElement(SubLink, { key: 'item-' + indx, section: el.props.name });
                } else {
                    return null;
                }
            });
            return React.createElement(
                'div',
                { className: style.patternGroup, id: grpId },
                React.createElement(
                    'div',
                    { className: style.patternGroupTitle },
                    '<' + this.props.name + '>'
                ),
                React.createElement(
                    'div',
                    { className: style.patternGroupNav },
                    [[propsLink[0]], links]
                ),
                React.createElement(
                    'div',
                    { className: style.patternGroupContent },
                    this.props.children
                )
            );
        }
    }]);

    return PatternGroup;
}(React.Component);

},{"./style.less":52,"react":"react"}],49:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Prop = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var style = require('./style.less');

var Prop = exports.Prop = function (_React$Component) {
  _inherits(Prop, _React$Component);

  function Prop(prop) {
    _classCallCheck(this, Prop);

    return _possibleConstructorReturn(this, (Prop.__proto__ || Object.getPrototypeOf(Prop)).call(this, prop));
  }

  _createClass(Prop, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        'tr',
        null,
        React.createElement(
          'td',
          null,
          this.props.name
        ),
        React.createElement(
          'td',
          null,
          this.props.children
        ),
        React.createElement(
          'td',
          null,
          this.props.default
        ),
        React.createElement(
          'td',
          null,
          React.createElement(
            'div',
            { className: style.propsType },
            this.props.type
          )
        ),
        React.createElement(
          'td',
          null,
          React.createElement(
            'div',
            { className: this.props.required ? style.propsRequired : style.propsOptional },
            this.props.required ? 'Required' : 'Optional'
          )
        )
      );
    }
  }]);

  return Prop;
}(React.Component);

Prop.defaultProps = {
  required: false
};

},{"./style.less":52,"react":"react"}],50:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Props = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var style = require('./style.less');

var Props = exports.Props = function (_React$Component) {
  _inherits(Props, _React$Component);

  function Props(props) {
    _classCallCheck(this, Props);

    return _possibleConstructorReturn(this, (Props.__proto__ || Object.getPrototypeOf(Props)).call(this, props));
  }

  _createClass(Props, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        'div',
        { className: style.props, id: 'Props' },
        React.createElement(
          'span',
          { className: style.propsTitle },
          this.props.name
        ),
        React.createElement(
          'table',
          null,
          React.createElement(
            'thead',
            null,
            React.createElement(
              'tr',
              null,
              React.createElement(
                'th',
                null,
                'Name'
              ),
              React.createElement(
                'th',
                null,
                'Description'
              ),
              React.createElement(
                'th',
                null,
                'Default Value'
              ),
              React.createElement(
                'th',
                null,
                'Type'
              ),
              React.createElement(
                'th',
                null,
                'Required'
              )
            )
          ),
          React.createElement(
            'tbody',
            null,
            this.props.children
          )
        )
      );
    }
  }]);

  return Props;
}(React.Component);

},{"./style.less":52,"react":"react"}],51:[function(require,module,exports){
arguments[4][3][0].apply(exports,arguments)
},{"dup":3}],52:[function(require,module,exports){
module.exports = {"patternGroup":"neptune_patternGroup_1kq3r","patternGroupTitle":"neptune_patternGroupTitle_1kq3r","patternGroupContent":"neptune_patternGroupContent_1kq3r","patternGroupNav":"neptune_patternGroupNav_1kq3r","patternGroupNavPropsLink":"neptune_patternGroupNavPropsLink_1kq3r","pattern":"neptune_pattern_1kq3r","description":"neptune_description_1kq3r","example":"neptune_example_1kq3r","canvas":"neptune_canvas_1kq3r","label":"neptune_label_1kq3r","code":"neptune_code_1kq3r","props":"neptune_props_1kq3r","propsTitle":"neptune_propsTitle_1kq3r","propsType":"neptune_propsType_1kq3r","propsRequired":"neptune_propsRequired_1kq3r","propsOptional":"neptune_propsOptional_1kq3r"}
},{}],53:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.NavGroup = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var style = require('./style.less');

var NavGroup = exports.NavGroup = function (_React$Component) {
    _inherits(NavGroup, _React$Component);

    function NavGroup(props) {
        _classCallCheck(this, NavGroup);

        return _possibleConstructorReturn(this, (NavGroup.__proto__ || Object.getPrototypeOf(NavGroup)).call(this, props));
    }

    _createClass(NavGroup, [{
        key: 'render',
        value: function render() {
            return React.createElement(
                'div',
                null,
                React.createElement(
                    'div',
                    { className: style.group },
                    this.props.name
                ),
                React.createElement(
                    'ul',
                    { className: style.groupItems },
                    this.props.children
                )
            );
        }
    }]);

    return NavGroup;
}(React.Component);

},{"./style.less":56,"react":"react"}],54:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.NavGroupItem = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _reactRouter = require('react-router');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var style = require('./style.less');

var NavGroupItem = exports.NavGroupItem = function (_React$Component) {
    _inherits(NavGroupItem, _React$Component);

    function NavGroupItem(props, context) {
        _classCallCheck(this, NavGroupItem);

        return _possibleConstructorReturn(this, (NavGroupItem.__proto__ || Object.getPrototypeOf(NavGroupItem)).call(this, props, context));
    }

    _createClass(NavGroupItem, [{
        key: 'render',
        value: function render() {
            var cl = style.groupItem;
            if (this.props.noop) {
                cl = [cl, style.groupItemNOOP].join(' ');
            }
            var link = this.props.noop === undefined ? React.createElement(
                _reactRouter.Link,
                { to: '/' + this.context.page + '/' + this.props.name.replace(' ', '-') },
                this.props.name
            ) : this.props.name;
            return React.createElement(
                'li',
                { className: cl },
                link
            );
        }
    }]);

    return NavGroupItem;
}(React.Component);

NavGroupItem.contextTypes = {
    page: React.PropTypes.string
};

},{"./style.less":56,"react":"react","react-router":"react-router"}],55:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Nav = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var style = require('./style.less');

var Nav = exports.Nav = function (_React$Component) {
    _inherits(Nav, _React$Component);

    function Nav(props) {
        _classCallCheck(this, Nav);

        return _possibleConstructorReturn(this, (Nav.__proto__ || Object.getPrototypeOf(Nav)).call(this, props));
    }

    _createClass(Nav, [{
        key: 'getChildContext',
        value: function getChildContext() {
            return { page: this.props.page };
        }
    }, {
        key: 'render',
        value: function render() {
            return React.createElement(
                'div',
                { className: style.nav },
                this.props.children
            );
        }
    }]);

    return Nav;
}(React.Component);

Nav.childContextTypes = {
    page: React.PropTypes.string
};

},{"./style.less":56,"react":"react"}],56:[function(require,module,exports){
module.exports = {"nav":"neptune_nav_1gtaw","group":"neptune_group_1gtaw","groupItems":"neptune_groupItems_1gtaw","groupItem":"neptune_groupItem_1gtaw","groupItemNOOP":"neptune_groupItemNOOP_1gtaw"}
},{}],57:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Docs = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _Header = require('./../header/Header');

var _DocsNav = require('./DocsNav');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var baseStyle = require('../baseStyle.less');

var Docs = exports.Docs = function (_React$Component) {
  _inherits(Docs, _React$Component);

  function Docs() {
    _classCallCheck(this, Docs);

    return _possibleConstructorReturn(this, (Docs.__proto__ || Object.getPrototypeOf(Docs)).apply(this, arguments));
  }

  _createClass(Docs, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        'div',
        null,
        React.createElement(_Header.Header, { activePage: 'Docs' }),
        React.createElement(_DocsNav.DocsNav, null),
        React.createElement(
          'div',
          { className: baseStyle.navContent },
          this.props.children
        )
      );
    }
  }]);

  return Docs;
}(React.Component);

},{"../baseStyle.less":4,"./../header/Header":64,"./DocsNav":58,"react":"react"}],58:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.DocsNav = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _Nav = require('../components/Nav');

var _NavGroup = require('../components/Nav/NavGroup');

var _NavGroupItem = require('../components/Nav/NavGroupItem');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var DocsNav = exports.DocsNav = function (_React$Component) {
    _inherits(DocsNav, _React$Component);

    function DocsNav() {
        _classCallCheck(this, DocsNav);

        return _possibleConstructorReturn(this, (DocsNav.__proto__ || Object.getPrototypeOf(DocsNav)).apply(this, arguments));
    }

    _createClass(DocsNav, [{
        key: 'render',
        value: function render() {
            return React.createElement(
                _Nav.Nav,
                { page: 'docs' },
                React.createElement(
                    _NavGroup.NavGroup,
                    { name: 'Docs' },
                    React.createElement(_NavGroupItem.NavGroupItem, { name: 'Readme' }),
                    React.createElement(_NavGroupItem.NavGroupItem, { name: 'Guidelines' })
                )
            );
        }
    }]);

    return DocsNav;
}(React.Component);

},{"../components/Nav":55,"../components/Nav/NavGroup":53,"../components/Nav/NavGroupItem":54,"react":"react"}],59:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Guidelines = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _Markdown = require('./Markdown');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var mdContent = require('./MarkdownFiles');

var Guidelines = exports.Guidelines = function (_React$Component) {
    _inherits(Guidelines, _React$Component);

    function Guidelines() {
        _classCallCheck(this, Guidelines);

        return _possibleConstructorReturn(this, (Guidelines.__proto__ || Object.getPrototypeOf(Guidelines)).apply(this, arguments));
    }

    _createClass(Guidelines, [{
        key: 'render',
        value: function render() {
            return React.createElement(_Markdown.Markdown, { source: mdContent.Guidelines });
        }
    }]);

    return Guidelines;
}(React.Component);

},{"./Markdown":60,"./MarkdownFiles":61,"react":"react"}],60:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Markdown = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Remarkable = require('remarkable');

var Markdown = exports.Markdown = function (_React$Component) {
    _inherits(Markdown, _React$Component);

    function Markdown(props) {
        _classCallCheck(this, Markdown);

        return _possibleConstructorReturn(this, (Markdown.__proto__ || Object.getPrototypeOf(Markdown)).call(this, props));
    }

    _createClass(Markdown, [{
        key: 'render',
        value: function render() {
            var Container = this.props.container;
            return React.createElement(
                Container,
                null,
                this.content()
            );
        }
    }, {
        key: 'componentWillUpdate',
        value: function componentWillUpdate(nextProps) {
            if (nextProps.options !== this.props.options) {
                this.md = new Remarkable(nextProps.options);
            }
        }
    }, {
        key: 'content',
        value: function content() {
            var _this2 = this;

            if (this.props.source) {
                return React.createElement('span', { dangerouslySetInnerHTML: { __html: this.renderMarkdown(this.props.source) } });
            } else {
                return React.Children.map(this.props.children, function (child) {
                    if (typeof child === 'string') {
                        return React.createElement('span', { dangerouslySetInnerHTML: { __html: _this2.renderMarkdown(child) } });
                    } else {
                        return child;
                    }
                });
            }
        }
    }, {
        key: 'renderMarkdown',
        value: function renderMarkdown(source) {
            if (!this.md) {
                this.md = new Remarkable(this.props.options);
            }
            var parsed = this.md.render(source);
            return parsed;
        }
    }]);

    return Markdown;
}(React.Component);

Markdown.defaultProps = {
    container: 'div',
    options: {
        breaks: false,
        html: false,
        langPrefix: 'language-',
        linkTarget: '',
        linkify: true,
        // Double + single quotes replacement pairs, when typographer enabled,
        // and smartquotes on. Set doubles to '«»' for Russian, '„“' for German.
        quotes: '“”‘’',
        // Enable some language-neutral replacements + quotes beautification
        typographer: false,
        xhtmlOut: false
    }
};

},{"react":"react","remarkable":"remarkable"}],61:[function(require,module,exports){
'use strict';


var MarkdownFiles = {
    Readme: "# neptune-ui\r\nCheck out the demo page at [http://neptune-ui](http://neptune-ui/)\r\n\r\n![Hello neptune-ui](http://neptune-ui/sample.png)\r\n\r\n# Sample Usage\r\n\r\n```\r\n\timport { Button, ButtonToolbar } from 'mdc-neptune';\r\n\r\n\tclass UsageDemo extends React.Component {\r\n\t\trender() {\r\n\t\t\treturn (\r\n\t\t\t\t <ButtonToolbar>\r\n\t                <Button onClick={this.handleClick}>Click me</Button>\r\n\t                <Button disabled onClick={this.handleClick}>Click me</Button>\r\n\t\t         </ButtonToolbar>\r\n\t         );\r\n\t    }\r\n\t}\r\n```\r\n\r\n# Installation\r\n\r\nPrerequisites\r\n* Install typings and Gulp task manager\r\n`npm install -g gulp`\r\n* Node and npm version requirements (also see package.json)\r\n    \"node\": \">=6.6.0\",\r\n    \"npm\": \">=3.8.7\"\r\n\r\nNavigate to app root directory (ex. cd c:\\depot\\neptune-ui) and in command line type\r\n```\r\nnpm install\r\n```\r\n\r\n# Quick Start\r\nThis lib is setup to work nicely with Visual Studio Code https://code.visualstudio.com/\r\nYou can quickly edit the app by typing \r\n`code .` \r\nwithin app root directory. To start the demo app press F5\r\n\r\nFollowing will be output on success:\r\n    Listening (NODE_ENV=development) at http://localhost:3000\r\n\r\n# Building components\r\nSee guidelines docs at [http://neptune-ui/docs/guidelines](http://neptune-ui/docs/guidelines)\r\n\r\n# Compiling demo app\r\nNote: For development you don't need to build the app manually (see Quick Start or Running demo app section).\r\n\r\nTo compile without starting server \r\n`gulp`\r\n\r\n# Running demo app\r\nTo start the Express development server. Alternative to F5 from VS code (see Quick Start)\r\n`npm start`\r\n\r\nTo run the dev server on port 80\r\n`SET PORT=80 && node server.js` np",
    Guidelines: "# Component Guidelines\r\n\r\n### Table Of Contents\r\n- [Folder Structure](#folder-structure)\r\n- [Components](#components)\r\n- [Styling](#styling)\r\n- [Demo Pages](#demo-pages)\r\n- [Acceptance Criteria](#acceptance-criteria)\r\n- [Versioning](#versioning)\r\n- [Branching](#branching)\r\n\r\n---\r\n\r\n## Folder Structure\r\n1. create a folder for new component in src/components/MyComponent\r\n2. add a file for component and for style\r\n\r\n  ```\r\n  src\r\n  |\r\n  |---MyComponent\r\n    |\tindex.tsx\r\n    |\tstyle.less \t\r\n    \r\n  ```\r\n3. Entry point for the library is `src/index.ts`. Make sure all components are registered here \r\n  ```\r\n  import Button from './components/Button';\r\n  import ButtonToolbar from './components/ButtonToolbar';\r\n  import MyComponent from './components/Tabs';\r\n\r\n  export {\r\n      Button,\r\n      ButtonToolbar,\r\n      MyComponent,\r\n  }\r\n\r\n  ```\r\n## Components\r\n1. Component name should be PascalCase (ex. Button or Toolbar)\r\n2. Components need to be as stateless as possible\r\n3. Need to be agnostic and not depend on any flux/redux framework or packages\r\n4. All components need to have defined propTypes with defined optional/required parameters\r\n   ```\r\n    export default class Tabs extends React.Component<any, any> { \r\n      // define propTypes here so they are available on consumer side\r\n      private static propTypes: React.ValidationMap<any> = {\r\n            children: React.PropTypes.any.isRequired,\r\n            className: React.PropTypes.string,\r\n            onAfterChange: React.PropTypes.func,\r\n            onBeforeChange: React.PropTypes.func,\r\n            onMount: React.PropTypes.func,\r\n            tabActive: React.PropTypes.number,\r\n      };\r\n    }   \r\n   ```\r\n5. Use composition to max - larger components should be composed off of existing smaller ones\r\n6. Do not have your component require external npm packages. This will cause neptune.js to grow large quickly and we may run into issues with dependency resolution on consumer side.\r\nCode quality, readibility and uniformity of coding style will also be affected.\r\n7. See below code snippet for a basic component template\r\n\r\n  ```\r\n  import * as React from 'react';\r\n  const styles: any = require<any>('./style.less');\r\n\r\n  export default class MyComponent extends React.Component<any, any> {\r\n    \r\n    public render(): React.ReactElement<{}> {\r\n      return (\r\n        <div className={styles.container}>\r\n            {children}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  ```\r\n\r\n## Styling\r\n1. Use css-modules by defining a style.less file within your component folder\r\n2. Derive styles from commonly used base styles see src/baseStyles \r\n3. Try not to introduce any new constants into your component styles (this includes color codes, font types, font sizes, common margin/paddings, etc...)\r\n4. Do not use inline styles within components\r\n5. Use mixins to handle browser vendor prefixes webkit, mozilla, ms, html5, etc...\r\n6. Avoid setting width/height and max value styles - component parent container should dictate the size of the component \r\n\r\n## Demo Pages\r\n1. Each component is required to have a demo page with code sample, props usage and prop table\r\n2. To add item to demo pages\r\n      - expose you new component MyComponent to CodeEditor in `demo/components/Content/Patterns/Components/CodeEditor.tsx`. This makes the component visible to the editor so that require() lines are not needed in code samples \r\n   ```\r\n    const Label: any = require<any>('../../../../../src/components/Label').default;\r\n    const Grid: any = require<any>('../../../../../src/components/Grid').default;\r\n    const Row: any = require<any>('../../../../../src/components/Grid/Row').default;\r\n    const Column: any = require<any>('../../../../../src/components/Grid/Column').default;\r\n    const MyComponent: any = require<any>('../../../../../src/components/Grid/Column').default;\r\n   ```\r\n      - add your component and route to navigation page in `demo/components/ComponentsNav.tsx`. Use noop property on Nav component if this is a placeholder (item will not be clickable)\r\n   ```\r\n        import { ButtonPattern } from './Content/Patterns/ButtonPattern';\r\n\r\n        export const ComponentRoutes: any = [\r\n            <Route path='Button' component={ButtonPattern} />,\r\n        ];   \r\n        \r\n        <NavGroup name='Forms'>\r\n            <NavGroupItem name='Button' />\r\n            <NavGroupItem name='ButtonToolbar' noop />\r\n        </NavGroup>\r\n   ``` \r\n      - create your component demo page in `demo/components/Content/Patterns/MyComponentPattern.tsx`. Make sure to provide Description, Pattern and Props table.\r\n   ```\r\n    import * as React from 'react';\r\n    import {PatternGroup} from './components/PatternGroup';\r\n    import {Pattern} from './components/Pattern';\r\n    import {Description} from './components/Description';\r\n    import {CodeEditor} from './components/CodeEditor';\r\n    import {Props} from './components/Props';\r\n    import {Prop} from './components/Prop';\r\n    const CodeSamples: any = require<any>('./components/CodeSamples');\r\n\r\n    export class MyComponentPattern extends React.Component<any, {}> {\r\n      public render(): React.ReactElement<{}> {\r\n          return (\r\n              <PatternGroup name='Button'>\r\n                <Description>Use any of the available button style types to quickly create a styled button</Description>\r\n                <Pattern name='Types'>\r\n                    <Description>Basic button types</Description>\r\n                    <CodeEditor codeText={CodeSamples.DefaultButton} />\r\n                </Pattern>\r\n                <Pattern name='Handling State'>\r\n                    <Description>Handling onClick event and active/disabled state</Description>\r\n                    <CodeEditor codeText={CodeSamples.StateButton} />\r\n                </Pattern>\r\n                <Props name='Button props'>\r\n                  <Prop name='disabled' type='boolean' default='false'>\r\n                    When set to true button will be disabled and will no longer accept onClick events\r\n                  </Prop>\r\n                  <Prop name='onClick' type='function' default='' required>\r\n                    Callback that will be invoked when user clicks on the button\r\n                  </Prop>\r\n                </Props>\r\n              </PatternGroup>\r\n          );\r\n      }\r\n    }\r\n   ``` \r\n      - add code sample for your component in `demo/components/Content/Patterns/CodeSamples/MyComponentCodeSample.tsx`\r\n   ```\r\n    const buttonsInstance = (\r\n      <MyComponent>\r\n          <Button>Default button</Button>\r\n          <Button primary>Primary button</Button>\r\n          <Button large>Large Button</Button>\r\n          <Button primary large>Primary Large Button</Button>\r\n      </MyComponent>\r\n    ); \r\n\r\n    ReactDOM.render(buttonsInstance, mountNode);   \r\n   ```\r\n      - register your code sample in `demo/components/Content/Patterns/Components/CodeSamples.js`\r\n   ```\r\n    var fs = require('fs');\r\n\r\n    var CodeSamples = {\r\n        DefaultButton:          fs.readFileSync(__dirname + '/../CodeSamples/DefaultButton.js', 'utf8'),\r\n        StateButton:            fs.readFileSync(__dirname + '/../CodeSamples/StateButton.js', 'utf8'),\r\n        MyComponentCodeSample:  fs.readFileSync(__dirname + '/../CodeSamples/MyComponentCodeSample.js', 'utf8'),\r\n    };\r\n\r\n    module.exports = CodeSamples;\r\n   ```\r\n\r\n## Acceptance Criteria\r\n1. Components need to match the contract in propTypes table from demo pages\r\n2. Components need to adhere to the spec provided by UX i.e. components need to be pixel perfect\r\n3. Each component should have a demo page for acceptance testing\r\n4. Browser support: IE10+, latest version of Chrome, Firefox and Edge\r\n\r\n## Versioning\r\n1. Major.Minor.Patch - minor and patch version updates need to be fully backward compatible. \r\nWhen client upgrades from 1.2.1 to 1.3.1 there should not be any breaking changes.\r\n2. There should be a source branch for each major/minor branches\r\n\r\n## Branching\r\n1. Use common git branching pattern [http://nvie.com/posts/a-successful-git-branching-model](http://nvie.com/posts/a-successful-git-branching-model)\r\n2. master branch always contains production-ready state\r\n3. Need master, develop and release branches. See [http://nvie.com/files/Git-branching-model.pdf](http://nvie.com/files/Git-branching-model.pdf)\r\n\r\n"
};
module.exports = MarkdownFiles;

},{}],62:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Readme = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _Markdown = require('./Markdown');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var mdContent = require('./MarkdownFiles');

var Readme = exports.Readme = function (_React$Component) {
    _inherits(Readme, _React$Component);

    function Readme() {
        _classCallCheck(this, Readme);

        return _possibleConstructorReturn(this, (Readme.__proto__ || Object.getPrototypeOf(Readme)).apply(this, arguments));
    }

    _createClass(Readme, [{
        key: 'render',
        value: function render() {
            return React.createElement(_Markdown.Markdown, { source: mdContent.Readme });
        }
    }]);

    return Readme;
}(React.Component);

},{"./Markdown":60,"./MarkdownFiles":61,"react":"react"}],63:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var superagent = require("superagent");

var FusionApi = function () {
    function FusionApi() {
        _classCallCheck(this, FusionApi);
    }

    _createClass(FusionApi, null, [{
        key: 'getOrganizationsHighlighted',
        value: function getOrganizationsHighlighted(searchText, pageNumber, pageSize) {
            return new Promise(function (resolve) {
                var url = 'http://ftc-lbeagfus301:8764/api/apollo/query-pipelines/qs_organizations/collections/organization/select?q=(' + searchText + ')&start=' + pageNumber + '&rows=' + pageSize + '&&fl=org_id,issr_nam,ticker&wt=json&omitHeader=true&hl=true';
                var $results = [];
                superagent.get(url).set('Authorization', 'Basic YXBpdXNlcjpFYWcxM15tZGM=').end(function (err, res) {
                    var obj = JSON.parse(res.text).highlighting;
                    var objProperties = Object.getOwnPropertyNames(obj);
                    objProperties.forEach(function (prop) {
                        if (obj[prop].issr_nam && obj[prop].issr_nam.length > 0) {
                            $results.push({ name: obj[prop].issr_nam[0] });
                        }
                    });
                    resolve($results);
                });
            });
        }
    }, {
        key: 'getOrganizations',
        value: function getOrganizations(searchText, pageNumber, pageSize) {
            return new Promise(function (resolve) {
                var url = 'http://ftc-lbeagfus301:8764/api/apollo/query-pipelines/qs_organizations/collections/organization/select?q=(' + searchText + ')&start=' + pageNumber + '&rows=' + pageSize + '&&fl=org_id,issr_nam,ticker&wt=json&omitHeader=true&hl=false';
                superagent.get(url).set('Authorization', 'Basic YXBpdXNlcjpFYWcxM15tZGM=').end(function (err, res) {
                    var documents = JSON.parse(res.text).response.docs || [];
                    var $results = documents.map(function (doc) {
                        return { id: doc.org_id, name: doc.issr_nam };
                    });
                    resolve($results);
                });
            });
        }
    }, {
        key: 'getOrganizationsSvc',
        value: function getOrganizationsSvc(searchText, pageNumber, pageSize) {
            return new Promise(function (resolve) {
                var skip = pageNumber * pageSize;
                var url = 'http://ftc-wbcpsweb201:9000/v1/organizations?searchText=' + searchText + '&showRecords=False&showFacets=False&skip=' + skip + '&take=' + pageSize;
                superagent.get(url).end(function (err, res) {
                    resolve(JSON.parse(res.text).Organizations);
                });
            });
        }
    }]);

    return FusionApi;
}();

exports.default = FusionApi;

},{"superagent":"superagent"}],64:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Header = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _reactRouter = require('react-router');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var style = require('./style.less');
var Links = {
    /*
    'download': {
      link: '/download',
      title: 'Download',
    }, */
    'components': {
        link: '/components',
        title: 'Components'
    },
    'docs': {
        link: '/docs',
        title: 'Docs'
    }
};

var Header = exports.Header = function (_React$Component) {
    _inherits(Header, _React$Component);

    function Header(props) {
        _classCallCheck(this, Header);

        return _possibleConstructorReturn(this, (Header.__proto__ || Object.getPrototypeOf(Header)).call(this, props));
    }

    _createClass(Header, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var links = Object.keys(Links).map(function (linkName) {
                var link = Links[linkName];
                return React.createElement(
                    'div',
                    { key: linkName, className: _this2.props.activePage === link.title ? style.activeLink : style.link },
                    React.createElement(
                        _reactRouter.Link,
                        { to: link.link },
                        link.title
                    )
                );
            });
            return React.createElement(
                'div',
                { className: style.header },
                React.createElement(
                    'div',
                    { key: 'brand', className: style.appName },
                    React.createElement(
                        _reactRouter.IndexLink,
                        { to: '/' },
                        'Neptune framework'
                    )
                ),
                links
            );
        }
    }]);

    return Header;
}(React.Component);

},{"./style.less":65,"react":"react","react-router":"react-router"}],65:[function(require,module,exports){
module.exports = {"header":"neptune_header_132bx","appName":"neptune_appName_132bx","link":"neptune_link_132bx","activeLink":"neptune_activeLink_132bx neptune_link_132bx"}
},{}],66:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _reactDom = require('react-dom');

var ReactDOM = _interopRequireWildcard(_reactDom);

var _reactRouter = require('react-router');

var _redux = require('redux');

var _reactRedux = require('react-redux');

var _App = require('./app/App');

var _Intro = require('./intro/Intro');

var _Docs = require('./docs/Docs');

var _Readme = require('./docs/Readme');

var _Guidelines = require('./docs/Guidelines');

var _Components = require('./components/Components');

var _NotFound = require('./NotFound');

var _reducers = require('./reducers');

var _ComponentsNav = require('./components/ComponentsNav');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var reducers = require('./reducers');

// sample boiler plate for setting up redux
var configureStore = function configureStore() {
    var store = (0, _redux.createStore)(_reducers.demoApp);
    if (module.hot) {
        module.hot.accept('./reducers', function () {
            var nextRootReducer = reducers.demoApp;
            store.replaceReducer(nextRootReducer);
        });
    }
    return store;
};

var store = configureStore();
var subRoutes = _ComponentsNav.ComponentRoutes.map(function (route, indx) {
    return React.cloneElement(route, { key: indx });
});

var Main = function (_React$Component) {
    _inherits(Main, _React$Component);

    function Main() {
        _classCallCheck(this, Main);

        return _possibleConstructorReturn(this, (Main.__proto__ || Object.getPrototypeOf(Main)).apply(this, arguments));
    }

    _createClass(Main, [{
        key: 'render',
        value: function render() {
            return React.createElement(
                _reactRedux.Provider,
                { store: store },
                React.createElement(
                    'div',
                    null,
                    React.createElement(
                        _reactRouter.Router,
                        { history: _reactRouter.browserHistory },
                        React.createElement(
                            _reactRouter.Route,
                            { path: '/', component: _App.App },
                            React.createElement(_reactRouter.IndexRoute, { component: _Intro.Intro }),
                            React.createElement(
                                _reactRouter.Route,
                                { path: 'docs', component: _Docs.Docs },
                                React.createElement(_reactRouter.IndexRoute, { component: _Readme.Readme }),
                                React.createElement(_reactRouter.Route, { path: 'readme', component: _Readme.Readme }),
                                React.createElement(_reactRouter.Route, { path: 'guidelines', component: _Guidelines.Guidelines })
                            ),
                            React.createElement(
                                _reactRouter.Route,
                                { path: 'components', component: _Components.Components },
                                subRoutes
                            )
                        ),
                        React.createElement(_reactRouter.Route, { path: '*', component: _NotFound.NotFound })
                    )
                )
            );
        }
    }]);

    return Main;
}(React.Component);

ReactDOM.render(React.createElement(Main, null), document.getElementById('app'));

},{"./NotFound":1,"./app/App":2,"./components/Components":5,"./components/ComponentsNav":6,"./docs/Docs":57,"./docs/Guidelines":59,"./docs/Readme":62,"./intro/Intro":67,"./reducers":69,"react":"react","react-dom":"react-dom","react-redux":"react-redux","react-router":"react-router","redux":"redux"}],67:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Intro = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _Header = require('./../header/Header');

var _ComponentsNav = require('../components/ComponentsNav');

var _reactRouter = require('react-router');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var baseStyle = require('../baseStyle.less');
var style = require('./style.less');

var Intro = exports.Intro = function (_React$Component) {
  _inherits(Intro, _React$Component);

  function Intro() {
    _classCallCheck(this, Intro);

    return _possibleConstructorReturn(this, (Intro.__proto__ || Object.getPrototypeOf(Intro)).apply(this, arguments));
  }

  _createClass(Intro, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        'div',
        null,
        React.createElement(_Header.Header, { activePage: 'Intro' }),
        React.createElement(_ComponentsNav.ComponentsNav, null),
        React.createElement(
          'div',
          { className: baseStyle.navContent },
          React.createElement(
            'div',
            { className: style.intro },
            React.createElement(
              'div',
              { className: style.heading },
              React.createElement(
                'h1',
                null,
                'Neptune'
              ),
              React.createElement(
                'p',
                null,
                'A user interface framework of reusable front-end components'
              )
            ),
            React.createElement(
              'div',
              { className: style.content },
              React.createElement(
                'p',
                null,
                'Neptune will drive many of the decisions Platform Technology Solutions will make around front-end architecture and day-to-day development.'
              ),
              React.createElement(
                'h2',
                null,
                'About Neptune'
              ),
              React.createElement(
                'ul',
                null,
                React.createElement(
                  'li',
                  null,
                  'Cross-Platform - Written in Javascript'
                ),
                React.createElement(
                  'li',
                  null,
                  'Uses React framework'
                ),
                React.createElement(
                  'li',
                  null,
                  'Reusable components and styles'
                ),
                React.createElement(
                  'li',
                  null,
                  'Compatible across browsers'
                ),
                React.createElement(
                  'li',
                  null,
                  'Information needed to install, configure and create your application '
                )
              ),
              React.createElement(
                'h2',
                null,
                'Benefits'
              ),
              React.createElement(
                'ul',
                null,
                React.createElement(
                  'li',
                  null,
                  'Consistency'
                ),
                React.createElement(
                  'li',
                  null,
                  'Efficient & cost saving'
                ),
                React.createElement(
                  'li',
                  null,
                  'Quick to market / agile'
                ),
                React.createElement(
                  'li',
                  null,
                  'Shared vocabulary'
                ),
                React.createElement(
                  'li',
                  null,
                  'Future friendly'
                ),
                React.createElement(
                  'li',
                  null,
                  'Easier to test'
                )
              ),
              React.createElement(
                'h2',
                null,
                'Resources'
              ),
              React.createElement(
                'ul',
                null,
                React.createElement(
                  'li',
                  null,
                  React.createElement(
                    _reactRouter.Link,
                    { to: '/docs/readme' },
                    'Documentation & Guidelines'
                  )
                )
              ),
              React.createElement(
                'h2',
                null,
                'Install'
              ),
              React.createElement(
                'ul',
                null,
                React.createElement(
                  'li',
                  { className: style.console },
                  React.createElement(
                    'a',
                    { href: 'http://apc-lgmdcdvw202:8081/package/mdc-neptune', target: 'blank' },
                    'npm install mdc-neptune'
                  )
                )
              )
            )
          )
        )
      );
    }
  }]);

  return Intro;
}(React.Component);

},{"../baseStyle.less":4,"../components/ComponentsNav":6,"./../header/Header":64,"./style.less":68,"react":"react","react-router":"react-router"}],68:[function(require,module,exports){
module.exports = {"intro":"neptune_intro_yrt67","heading":"neptune_heading_yrt67","content":"neptune_content_yrt67","console":"neptune_console_yrt67","docs":"neptune_docs_yrt67"}
},{}],69:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.demoApp = undefined;

var _redux = require('redux');

//import { ACTION } from './actions';
var counters = function counters() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [0, 0, 0];
    var action = arguments[1];

    switch (action.type) {
        /*
        case ACTION.IncrementCounter:
            return [
                ...state.slice(0, action.counterId),
                state[action.counterId] + 1,
                ...state.slice(action.counterId + 1),
            ];*/
        default:
            return state;
    }
}; // sample reducers
var demoApp = exports.demoApp = (0, _redux.combineReducers)({ counters: counters });

},{"redux":"redux"}],70:[function(require,module,exports){
/**
 * lodash 3.9.1 (Custom Build) <https://lodash.com/>
 * Build: `lodash modern modularize exports="npm" -o ./`
 * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <https://lodash.com/license>
 */

/** `Object#toString` result references. */
var funcTag = '[object Function]';

/** Used to detect host constructors (Safari > 5). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/**
 * Checks if `value` is object-like.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 */
function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

/** Used for native method references. */
var objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var fnToString = Function.prototype.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
 * of values.
 */
var objToString = objectProto.toString;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  fnToString.call(hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = object == null ? undefined : object[key];
  return isNative(value) ? value : undefined;
}

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in older versions of Chrome and Safari which return 'function' for regexes
  // and Safari 8 equivalents which return 'object' for typed array constructors.
  return isObject(value) && objToString.call(value) == funcTag;
}

/**
 * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.
 * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(1);
 * // => false
 */
function isObject(value) {
  // Avoid a V8 JIT bug in Chrome 19-20.
  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}

/**
 * Checks if `value` is a native function.
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function, else `false`.
 * @example
 *
 * _.isNative(Array.prototype.push);
 * // => true
 *
 * _.isNative(_);
 * // => false
 */
function isNative(value) {
  if (value == null) {
    return false;
  }
  if (isFunction(value)) {
    return reIsNative.test(fnToString.call(value));
  }
  return isObjectLike(value) && reIsHostCtor.test(value);
}

module.exports = getNative;

},{}],71:[function(require,module,exports){
/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
function isArguments(value) {
  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&
    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
}

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

/**
 * This method is like `_.isArrayLike` except that it also checks if `value`
 * is an object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array-like object,
 *  else `false`.
 * @example
 *
 * _.isArrayLikeObject([1, 2, 3]);
 * // => true
 *
 * _.isArrayLikeObject(document.body.children);
 * // => true
 *
 * _.isArrayLikeObject('abc');
 * // => false
 *
 * _.isArrayLikeObject(_.noop);
 * // => false
 */
function isArrayLikeObject(value) {
  return isObjectLike(value) && isArrayLike(value);
}

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 8-9 which returns 'object' for typed array and other constructors.
  var tag = isObject(value) ? objectToString.call(value) : '';
  return tag == funcTag || tag == genTag;
}

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

module.exports = isArguments;

},{}],72:[function(require,module,exports){
/**
 * lodash 3.0.4 (Custom Build) <https://lodash.com/>
 * Build: `lodash modern modularize exports="npm" -o ./`
 * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <https://lodash.com/license>
 */

/** `Object#toString` result references. */
var arrayTag = '[object Array]',
    funcTag = '[object Function]';

/** Used to detect host constructors (Safari > 5). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/**
 * Checks if `value` is object-like.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 */
function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

/** Used for native method references. */
var objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var fnToString = Function.prototype.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
 * of values.
 */
var objToString = objectProto.toString;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  fnToString.call(hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/* Native method references for those with the same name as other `lodash` methods. */
var nativeIsArray = getNative(Array, 'isArray');

/**
 * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)
 * of an array-like value.
 */
var MAX_SAFE_INTEGER = 9007199254740991;

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = object == null ? undefined : object[key];
  return isNative(value) ? value : undefined;
}

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 */
function isLength(value) {
  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(function() { return arguments; }());
 * // => false
 */
var isArray = nativeIsArray || function(value) {
  return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;
};

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in older versions of Chrome and Safari which return 'function' for regexes
  // and Safari 8 equivalents which return 'object' for typed array constructors.
  return isObject(value) && objToString.call(value) == funcTag;
}

/**
 * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.
 * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(1);
 * // => false
 */
function isObject(value) {
  // Avoid a V8 JIT bug in Chrome 19-20.
  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}

/**
 * Checks if `value` is a native function.
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function, else `false`.
 * @example
 *
 * _.isNative(Array.prototype.push);
 * // => true
 *
 * _.isNative(_);
 * // => false
 */
function isNative(value) {
  if (value == null) {
    return false;
  }
  if (isFunction(value)) {
    return reIsNative.test(fnToString.call(value));
  }
  return isObjectLike(value) && reIsHostCtor.test(value);
}

module.exports = isArray;

},{}],73:[function(require,module,exports){
/**
 * lodash 3.1.2 (Custom Build) <https://lodash.com/>
 * Build: `lodash modern modularize exports="npm" -o ./`
 * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <https://lodash.com/license>
 */
var getNative = require('lodash._getnative'),
    isArguments = require('lodash.isarguments'),
    isArray = require('lodash.isarray');

/** Used to detect unsigned integer values. */
var reIsUint = /^\d+$/;

/** Used for native method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/* Native method references for those with the same name as other `lodash` methods. */
var nativeKeys = getNative(Object, 'keys');

/**
 * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)
 * of an array-like value.
 */
var MAX_SAFE_INTEGER = 9007199254740991;

/**
 * The base implementation of `_.property` without support for deep paths.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @returns {Function} Returns the new function.
 */
function baseProperty(key) {
  return function(object) {
    return object == null ? undefined : object[key];
  };
}

/**
 * Gets the "length" property value of `object`.
 *
 * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)
 * that affects Safari on at least iOS 8.1-8.3 ARM64.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {*} Returns the "length" value.
 */
var getLength = baseProperty('length');

/**
 * Checks if `value` is array-like.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 */
function isArrayLike(value) {
  return value != null && isLength(getLength(value));
}

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;
  length = length == null ? MAX_SAFE_INTEGER : length;
  return value > -1 && value % 1 == 0 && value < length;
}

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 */
function isLength(value) {
  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

/**
 * A fallback implementation of `Object.keys` which creates an array of the
 * own enumerable property names of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function shimKeys(object) {
  var props = keysIn(object),
      propsLength = props.length,
      length = propsLength && object.length;

  var allowIndexes = !!length && isLength(length) &&
    (isArray(object) || isArguments(object));

  var index = -1,
      result = [];

  while (++index < propsLength) {
    var key = props[index];
    if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {
      result.push(key);
    }
  }
  return result;
}

/**
 * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.
 * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(1);
 * // => false
 */
function isObject(value) {
  // Avoid a V8 JIT bug in Chrome 19-20.
  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}

/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
var keys = !nativeKeys ? shimKeys : function(object) {
  var Ctor = object == null ? undefined : object.constructor;
  if ((typeof Ctor == 'function' && Ctor.prototype === object) ||
      (typeof object != 'function' && isArrayLike(object))) {
    return shimKeys(object);
  }
  return isObject(object) ? nativeKeys(object) : [];
};

/**
 * Creates an array of the own and inherited enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keysIn(new Foo);
 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
 */
function keysIn(object) {
  if (object == null) {
    return [];
  }
  if (!isObject(object)) {
    object = Object(object);
  }
  var length = object.length;
  length = (length && isLength(length) &&
    (isArray(object) || isArguments(object)) && length) || 0;

  var Ctor = object.constructor,
      index = -1,
      isProto = typeof Ctor == 'function' && Ctor.prototype === object,
      result = Array(length),
      skipIndexes = length > 0;

  while (++index < length) {
    result[index] = (index + '');
  }
  for (var key in object) {
    if (!(skipIndexes && isIndex(key, length)) &&
        !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = keys;

},{"lodash._getnative":70,"lodash.isarguments":71,"lodash.isarray":72}],74:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _mdcClassnames = require('mdc-classnames');

var _Panel = require('../Panel');

var _Panel2 = _interopRequireDefault(_Panel);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var styles = require('./style.less');

var Accordion = function (_React$Component) {
    _inherits(Accordion, _React$Component);

    function Accordion(props) {
        _classCallCheck(this, Accordion);

        var _this = _possibleConstructorReturn(this, (Accordion.__proto__ || Object.getPrototypeOf(Accordion)).call(this, props));

        _this.onExpandCollapseClick = _this.onExpandCollapseClick.bind(_this);
        if (!_this.props.children) {
            throw new Error('Accordion must contain at least one Panel');
        }
        var children = Array.isArray(_this.props.children) ? _this.props.children : [_this.props.children];
        var accordionPanelStates = children.map(function (panel, index) {
            return { Expanded: _this.props.activePanel === index, PanelId: index };
        });
        _this.state = { panelStates: accordionPanelStates };
        return _this;
    }

    _createClass(Accordion, [{
        key: 'render',
        value: function render() {
            var className = (0, _mdcClassnames.setCssModule)('accordion-container', this.props.className);
            return React.createElement(
                'div',
                { className: styles[className] },
                this.getAccordionPanels()
            );
        }
    }, {
        key: 'onExpandCollapseClick',
        value: function onExpandCollapseClick(panel, panelId) {
            var _this2 = this;

            var panelStates = this.state.panelStates.map(function (pState) {
                if (pState.PanelId === panelId) {
                    pState.Expanded = !pState.Expanded;
                } else if (!_this2.props.multiExpand) {
                    pState.Expanded = false;
                }
                return pState;
            });
            this.setState({ panelStates: panelStates });
            if (this.props.onItemExpandCollapse) {
                this.props.onItemExpandCollapse(panel);
            }
        }
    }, {
        key: 'getAccordionPanels',
        value: function getAccordionPanels() {
            var _this3 = this;

            var panelStates = this.state.panelStates;
            var _panels = Array.isArray(this.props.children) ? this.props.children : [this.props.children];
            var $accordionPanels = _panels.map(function (panel, index) {
                var panelState = panelStates.filter(function (pState) {
                    return pState.PanelId === index;
                })[0];
                var expanded = panelState ? panelState.Expanded || false : false;
                return React.createElement(
                    _Panel2.default,
                    { key: index, title: panel.props.title, className: panel.props.className, collapsible: true, expanded: expanded, subTitle: panel.props.subTitle, onExpandCollapseAccordionClick: _this3.onExpandCollapseClick, onExpandCollapseClick: panel.props.onExpandCollapseClick, panelId: index, disabled: panel.props.disabled ? panel.props.disabled : false },
                    panel.props.children
                );
            });
            return $accordionPanels;
        }
    }]);

    return Accordion;
}(React.Component);

exports.default = Accordion;


Accordion.propTypes = {
    activePanel: React.PropTypes.number,
    children: React.PropTypes.oneOfType([React.PropTypes.array, React.PropTypes.object]).isRequired,
    className: React.PropTypes.string,
    multiExpand: React.PropTypes.bool,
    onItemExpandCollapse: React.PropTypes.func
};

},{"../Panel":172,"./style.less":75,"mdc-classnames":"mdc-classnames","react":"react"}],75:[function(require,module,exports){
module.exports = {"Title-Page":"neptune_Title-Page_kglbr","Title-Page-Light":"neptune_Title-Page-Light_kglbr","Title-Section-Primary":"neptune_Title-Section-Primary_kglbr","Title-Section-Primary-Light":"neptune_Title-Section-Primary-Light_kglbr","TITLE-SUBTITLE":"neptune_TITLE-SUBTITLE_kglbr","Title-Section-Secondary":"neptune_Title-Section-Secondary_kglbr","TITLE-MODULE":"neptune_TITLE-MODULE_kglbr","LABEL-STANDARD":"neptune_LABEL-STANDARD_kglbr","LABEL-STANDARD-SEMIBOLD":"neptune_LABEL-STANDARD-SEMIBOLD_kglbr","LABEL-ATTRIBUTION":"neptune_LABEL-ATTRIBUTION_kglbr","LABEL-ATTRIBUTION-MA":"neptune_LABEL-ATTRIBUTION-MA_kglbr","LABEL-ATTRIBUTION-MIS":"neptune_LABEL-ATTRIBUTION-MIS_kglbr","Label-Footnote":"neptune_Label-Footnote_kglbr","Rating":"neptune_Rating_kglbr","Header-Primary":"neptune_Header-Primary_kglbr","Body-Primary":"neptune_Body-Primary_kglbr","Header-Secondary":"neptune_Header-Secondary_kglbr","Header-Secondary-Bold":"neptune_Header-Secondary-Bold_kglbr","Body-Secondary":"neptune_Body-Secondary_kglbr","TABLE-SECTION":"neptune_TABLE-SECTION_kglbr","Header-Tertiary":"neptune_Header-Tertiary_kglbr","Header-Tertiary-Bold":"neptune_Header-Tertiary-Bold_kglbr","Body-Tertiary":"neptune_Body-Tertiary_kglbr","Body-Tertiary-Med":"neptune_Body-Tertiary-Med_kglbr","Body-Text-Prompt":"neptune_Body-Text-Prompt_kglbr","Link-DkBlue":"neptune_Link-DkBlue_kglbr","LINK-GOLD":"neptune_LINK-GOLD_kglbr","LINK-GREY":"neptune_LINK-GREY_kglbr","LABEL-SIDENAV-TITLE":"neptune_LABEL-SIDENAV-TITLE_kglbr","MIS-BLUE":"neptune_MIS-BLUE_kglbr","MA-BLUE":"neptune_MA-BLUE_kglbr","MOODYS-BLUE":"neptune_MOODYS-BLUE_kglbr","HIGHLIGHT-BLUE":"neptune_HIGHLIGHT-BLUE_kglbr","GOLD":"neptune_GOLD_kglbr","GREY-1":"neptune_GREY-1_kglbr","GREY-2":"neptune_GREY-2_kglbr","GREY-3":"neptune_GREY-3_kglbr","GREY-4":"neptune_GREY-4_kglbr","BLACK":"neptune_BLACK_kglbr","RED":"neptune_RED_kglbr","GREEN":"neptune_GREEN_kglbr","icon_down_arrow":"neptune_icon_down_arrow_kglbr","icon_up_arrow":"neptune_icon_up_arrow_kglbr","icon_warning_icon":"neptune_icon_warning_icon_kglbr","icon_select_arrows":"neptune_icon_select_arrows_kglbr","icon_triangle_down":"neptune_icon_triangle_down_kglbr","icon_triangle_up":"neptune_icon_triangle_up_kglbr","icon_x_icon":"neptune_icon_x_icon_kglbr","icon_right_arrow":"neptune_icon_right_arrow_kglbr","MIS-BLUE-FONT":"neptune_MIS-BLUE-FONT_kglbr","MIS-BLUE-BG":"neptune_MIS-BLUE-BG_kglbr","MIS-BLUE-BORDER":"neptune_MIS-BLUE-BORDER_kglbr","MA-BLUE-FONT":"neptune_MA-BLUE-FONT_kglbr","MA-BLUE-BG":"neptune_MA-BLUE-BG_kglbr","MA-BLUE-BORDER":"neptune_MA-BLUE-BORDER_kglbr","MOODYS-BLUE-FONT":"neptune_MOODYS-BLUE-FONT_kglbr","MOODYS-BLUE-BG":"neptune_MOODYS-BLUE-BG_kglbr","MOODYS-BLUE-BORDER":"neptune_MOODYS-BLUE-BORDER_kglbr","HIGHLIGHT-BLUE-FONT":"neptune_HIGHLIGHT-BLUE-FONT_kglbr","HIGHLIGHT-BLUE-BG":"neptune_HIGHLIGHT-BLUE-BG_kglbr","HIGHLIGHT-BLUE-BORDER":"neptune_HIGHLIGHT-BLUE-BORDER_kglbr","GOLD-FONT":"neptune_GOLD-FONT_kglbr","GOLD-BG":"neptune_GOLD-BG_kglbr","GOLD-BORDER":"neptune_GOLD-BORDER_kglbr","GREY-1-FONT":"neptune_GREY-1-FONT_kglbr","GREY-1-BG":"neptune_GREY-1-BG_kglbr","GREY-1-BORDER":"neptune_GREY-1-BORDER_kglbr","GREY-2-FONT":"neptune_GREY-2-FONT_kglbr","GREY-2-BG":"neptune_GREY-2-BG_kglbr","GREY-2-BORDER":"neptune_GREY-2-BORDER_kglbr","GREY-3-FONT":"neptune_GREY-3-FONT_kglbr","GREY-3-BG":"neptune_GREY-3-BG_kglbr","GREY-3-BORDER":"neptune_GREY-3-BORDER_kglbr","GREY-4-FONT":"neptune_GREY-4-FONT_kglbr","GREY-4-BG":"neptune_GREY-4-BG_kglbr","GREY-4-BORDER":"neptune_GREY-4-BORDER_kglbr","BLACK-FONT":"neptune_BLACK-FONT_kglbr","BLACK-BG":"neptune_BLACK-BG_kglbr","BLACK-BORDER":"neptune_BLACK-BORDER_kglbr","RED-FONT":"neptune_RED-FONT_kglbr","RED-BG":"neptune_RED-BG_kglbr","RED-BORDER":"neptune_RED-BORDER_kglbr","GREEN-FONT":"neptune_GREEN-FONT_kglbr","GREEN-BG":"neptune_GREEN-BG_kglbr","GREEN-BORDER":"neptune_GREEN-BORDER_kglbr","accordion-container":"neptune_accordion-container_kglbr"}
},{}],76:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _reactDom = require('react-dom');

var ReactDOM = _interopRequireWildcard(_reactDom);

var _mdcClassnames = require('mdc-classnames');

var _index = require('../Icon/index');

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var styles = require('./style.less');
var cx = _mdcClassnames.setCssModule.bind(styles);

var AlertBanner = function (_React$Component) {
    _inherits(AlertBanner, _React$Component);

    function AlertBanner(props) {
        _classCallCheck(this, AlertBanner);

        var _this = _possibleConstructorReturn(this, (AlertBanner.__proto__ || Object.getPrototypeOf(AlertBanner)).call(this, props));

        _this.handleCloseClick = _this.handleCloseClick.bind(_this);
        _this.setRefNode = _this.setRefNode.bind(_this);
        return _this;
    }

    _createClass(AlertBanner, [{
        key: 'render',
        value: function render() {
            var style = {
                transform: 'translate(0, -50px)',
                transition: 'transform 500ms'
            };
            return React.createElement(
                'div',
                { ref: this.setRefNode, className: cx('AlertBanner', this.props.className), style: style },
                React.createElement(
                    'div',
                    { className: styles.middle },
                    React.createElement(
                        'div',
                        { className: styles.content },
                        this.props.children
                    )
                ),
                React.createElement(
                    'div',
                    { className: styles.close },
                    this.props.closeable ? React.createElement(
                        'div',
                        { onClick: this.handleCloseClick },
                        React.createElement(_index2.default, { icon: 'close' })
                    ) : React.createElement(
                        'div',
                        null,
                        '\xA0'
                    )
                )
            );
        }
    }, {
        key: 'setRefNode',
        value: function setRefNode(node) {
            this.x = node;
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            var alertBanner = ReactDOM.findDOMNode(this.x);
            setTimeout(function () {
                var _position = "fixed";
                var _height = "50px";
                if (_this2.props.inline) {
                    _position = "relative";
                    _height = "30px";
                    alertBanner.style.marginBottom = "10px";
                }
                alertBanner.style.transform = 'translate(0, 0)';
                alertBanner.style.visibility = 'visible';
                alertBanner.style.height = _height;
                alertBanner.style.position = _position;
            }, 100);
            if (this.props.autoclose) {
                this.timerCloseHandler = setTimeout(function () {
                    // Hide the AlertBanner
                    alertBanner.style.visibility = 'hidden';
                    // Call the onClose Handler to notify the Parent
                    var self = _this2;
                    if (self.props.onClose) {
                        self.props.onClose();
                    }
                }, 10000);
            }
        }
    }, {
        key: 'handleCloseClick',
        value: function handleCloseClick() {
            var alertBanner = ReactDOM.findDOMNode(this.x);
            // Hide the AlertBanner
            alertBanner.style.visibility = 'hidden';
            // Call the onClose Handler to notify the Parent
            var self = this;
            clearTimeout(this.timerCloseHandler);
            if (self.props.onClose) {
                self.props.onClose();
            }
        }
    }]);

    return AlertBanner;
}(React.Component);

exports.default = AlertBanner;

AlertBanner.propTypes = {
    children: React.PropTypes.element,
    onClose: React.PropTypes.func,
    autoclose: React.PropTypes.bool,
    closeable: React.PropTypes.bool,
    inline: React.PropTypes.bool
};

AlertBanner.defaultProps = {
    autoclose: true,
    closeable: true,
    inline: false
};

},{"../Icon/index":134,"./style.less":77,"mdc-classnames":"mdc-classnames","react":"react","react-dom":"react-dom"}],77:[function(require,module,exports){
module.exports = {"Title-Page":"neptune_Title-Page_1nxd3","Title-Page-Light":"neptune_Title-Page-Light_1nxd3","Title-Section-Primary":"neptune_Title-Section-Primary_1nxd3","Title-Section-Primary-Light":"neptune_Title-Section-Primary-Light_1nxd3","TITLE-SUBTITLE":"neptune_TITLE-SUBTITLE_1nxd3","Title-Section-Secondary":"neptune_Title-Section-Secondary_1nxd3","TITLE-MODULE":"neptune_TITLE-MODULE_1nxd3","LABEL-STANDARD":"neptune_LABEL-STANDARD_1nxd3","LABEL-STANDARD-SEMIBOLD":"neptune_LABEL-STANDARD-SEMIBOLD_1nxd3","LABEL-ATTRIBUTION":"neptune_LABEL-ATTRIBUTION_1nxd3","LABEL-ATTRIBUTION-MA":"neptune_LABEL-ATTRIBUTION-MA_1nxd3","LABEL-ATTRIBUTION-MIS":"neptune_LABEL-ATTRIBUTION-MIS_1nxd3","Label-Footnote":"neptune_Label-Footnote_1nxd3","Rating":"neptune_Rating_1nxd3","Header-Primary":"neptune_Header-Primary_1nxd3","Body-Primary":"neptune_Body-Primary_1nxd3","Header-Secondary":"neptune_Header-Secondary_1nxd3","Header-Secondary-Bold":"neptune_Header-Secondary-Bold_1nxd3","Body-Secondary":"neptune_Body-Secondary_1nxd3","TABLE-SECTION":"neptune_TABLE-SECTION_1nxd3","Header-Tertiary":"neptune_Header-Tertiary_1nxd3","Header-Tertiary-Bold":"neptune_Header-Tertiary-Bold_1nxd3","Body-Tertiary":"neptune_Body-Tertiary_1nxd3","Body-Tertiary-Med":"neptune_Body-Tertiary-Med_1nxd3","Body-Text-Prompt":"neptune_Body-Text-Prompt_1nxd3","Link-DkBlue":"neptune_Link-DkBlue_1nxd3","LINK-GOLD":"neptune_LINK-GOLD_1nxd3","LINK-GREY":"neptune_LINK-GREY_1nxd3","LABEL-SIDENAV-TITLE":"neptune_LABEL-SIDENAV-TITLE_1nxd3","MIS-BLUE":"neptune_MIS-BLUE_1nxd3","MA-BLUE":"neptune_MA-BLUE_1nxd3","MOODYS-BLUE":"neptune_MOODYS-BLUE_1nxd3","HIGHLIGHT-BLUE":"neptune_HIGHLIGHT-BLUE_1nxd3","GOLD":"neptune_GOLD_1nxd3","GREY-1":"neptune_GREY-1_1nxd3","GREY-2":"neptune_GREY-2_1nxd3","GREY-3":"neptune_GREY-3_1nxd3","GREY-4":"neptune_GREY-4_1nxd3","BLACK":"neptune_BLACK_1nxd3","RED":"neptune_RED_1nxd3","GREEN":"neptune_GREEN_1nxd3","icon_down_arrow":"neptune_icon_down_arrow_1nxd3","icon_up_arrow":"neptune_icon_up_arrow_1nxd3","icon_warning_icon":"neptune_icon_warning_icon_1nxd3","icon_select_arrows":"neptune_icon_select_arrows_1nxd3","icon_triangle_down":"neptune_icon_triangle_down_1nxd3","icon_triangle_up":"neptune_icon_triangle_up_1nxd3","icon_x_icon":"neptune_icon_x_icon_1nxd3","icon_right_arrow":"neptune_icon_right_arrow_1nxd3","MIS-BLUE-FONT":"neptune_MIS-BLUE-FONT_1nxd3","MIS-BLUE-BG":"neptune_MIS-BLUE-BG_1nxd3","MIS-BLUE-BORDER":"neptune_MIS-BLUE-BORDER_1nxd3","MA-BLUE-FONT":"neptune_MA-BLUE-FONT_1nxd3","MA-BLUE-BG":"neptune_MA-BLUE-BG_1nxd3","MA-BLUE-BORDER":"neptune_MA-BLUE-BORDER_1nxd3","MOODYS-BLUE-FONT":"neptune_MOODYS-BLUE-FONT_1nxd3","MOODYS-BLUE-BG":"neptune_MOODYS-BLUE-BG_1nxd3","MOODYS-BLUE-BORDER":"neptune_MOODYS-BLUE-BORDER_1nxd3","HIGHLIGHT-BLUE-FONT":"neptune_HIGHLIGHT-BLUE-FONT_1nxd3","HIGHLIGHT-BLUE-BG":"neptune_HIGHLIGHT-BLUE-BG_1nxd3","HIGHLIGHT-BLUE-BORDER":"neptune_HIGHLIGHT-BLUE-BORDER_1nxd3","GOLD-FONT":"neptune_GOLD-FONT_1nxd3","GOLD-BG":"neptune_GOLD-BG_1nxd3","GOLD-BORDER":"neptune_GOLD-BORDER_1nxd3","GREY-1-FONT":"neptune_GREY-1-FONT_1nxd3","GREY-1-BG":"neptune_GREY-1-BG_1nxd3","GREY-1-BORDER":"neptune_GREY-1-BORDER_1nxd3","GREY-2-FONT":"neptune_GREY-2-FONT_1nxd3","GREY-2-BG":"neptune_GREY-2-BG_1nxd3","GREY-2-BORDER":"neptune_GREY-2-BORDER_1nxd3","GREY-3-FONT":"neptune_GREY-3-FONT_1nxd3","GREY-3-BG":"neptune_GREY-3-BG_1nxd3","GREY-3-BORDER":"neptune_GREY-3-BORDER_1nxd3","GREY-4-FONT":"neptune_GREY-4-FONT_1nxd3","GREY-4-BG":"neptune_GREY-4-BG_1nxd3","GREY-4-BORDER":"neptune_GREY-4-BORDER_1nxd3","BLACK-FONT":"neptune_BLACK-FONT_1nxd3","BLACK-BG":"neptune_BLACK-BG_1nxd3","BLACK-BORDER":"neptune_BLACK-BORDER_1nxd3","RED-FONT":"neptune_RED-FONT_1nxd3","RED-BG":"neptune_RED-BG_1nxd3","RED-BORDER":"neptune_RED-BORDER_1nxd3","GREEN-FONT":"neptune_GREEN-FONT_1nxd3","GREEN-BG":"neptune_GREEN-BG_1nxd3","GREEN-BORDER":"neptune_GREEN-BORDER_1nxd3","AlertBanner":"neptune_AlertBanner_1nxd3","middle":"neptune_middle_1nxd3","content":"neptune_content_1nxd3","close":"neptune_close_1nxd3","fadeOut":"neptune_fadeOut_1nxd3"}
},{}],78:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ButtonGroup = exports.ButtonGroupItem = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _mdcClassnames = require('mdc-classnames');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var React = require("react");
var PropTypes = React.PropTypes;
var Component = React.Component;

var styles = require('./style.less');
var cx = _mdcClassnames.setCssModule.bind(styles);

var ButtonGroupItem = exports.ButtonGroupItem = function (_Component) {
    _inherits(ButtonGroupItem, _Component);

    function ButtonGroupItem(props) {
        _classCallCheck(this, ButtonGroupItem);

        var _this = _possibleConstructorReturn(this, (ButtonGroupItem.__proto__ || Object.getPrototypeOf(ButtonGroupItem)).call(this, props));

        _this.handleClick = _this.handleClick.bind(_this);
        return _this;
    }

    _createClass(ButtonGroupItem, [{
        key: 'handleClick',
        value: function handleClick(e) {
            if (this.props.onClick) {
                var _props;

                (_props = this.props).onClick.apply(_props, [e, this].concat(Array.prototype.slice.call(arguments)));
            }
            this.props.select(this.props.index);
        }
    }, {
        key: 'render',
        value: function render() {
            var myclass = '';
            if (this.props.type === 'big') {
                myclass = 'neptune_button_item_big';
                if (this.props.selected === true) {
                    myclass = cx(myclass, 'selected_big');
                } else if (this.props.selectedIndex === this.props.index - 1) {
                    myclass = cx(myclass, 'selected_big_next');
                }
            } else {
                myclass = 'neptune_button_item_small';
                if (this.props.selected === true) {
                    myclass = cx(myclass, 'selected_small');
                } else if (this.props.selectedIndex === this.props.index - 1) {
                    myclass = cx(myclass, 'selected_small_next');
                }
            }
            return React.createElement(
                'button',
                { className: cx(myclass, this.props.className), selected: this.props.selected || false, onClick: this.handleClick, style: this.props.index === 0 ? { borderLeft: 'none', paddingLeft: this.props.type === 'big' ? '20px' : '10px' } : null },
                this.props.children
            );
        }
    }]);

    return ButtonGroupItem;
}(Component);

var ButtonGroup = exports.ButtonGroup = function (_React$Component) {
    _inherits(ButtonGroup, _React$Component);

    function ButtonGroup(props) {
        _classCallCheck(this, ButtonGroup);

        var _this2 = _possibleConstructorReturn(this, (ButtonGroup.__proto__ || Object.getPrototypeOf(ButtonGroup)).call(this, props));

        _this2.state = {
            selectedIndex: 0
        };
        _this2.onChange = _this2.onChange.bind(_this2);
        return _this2;
    }

    _createClass(ButtonGroup, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            if (this.props.defaultIndex) {
                this.setState({
                    selectedIndex: this.props.defaultIndex
                });
            }
        }
    }, {
        key: 'onChange',
        value: function onChange(nextIndex) {
            if (this.props.onChange) {
                var _props2;

                (_props2 = this.props).onChange.apply(_props2, [this.state.selectedIndex, nextIndex].concat(Array.prototype.slice.call(arguments)));
            }
            this.setState({
                selectedIndex: nextIndex
            });
        }
    }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            if (nextProps.selectedIndex !== this.state.selectedIndex) {
                this.setState({
                    selectedIndex: nextProps.selectedIndex
                });
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            var children = this.props.children.map(function (child, index) {
                return React.cloneElement(child, {
                    index: index,
                    key: index,
                    select: _this3.onChange,
                    selected: _this3.state.selectedIndex === index ? true : false,
                    selectedIndex: _this3.state.selectedIndex,
                    type: _this3.props.type || 'small'
                });
            });
            return React.createElement(
                'div',
                { style: this.props.style, className: this.props.style === 'big' ? cx('neptune_button_group_big', this.props.className) : cx('neptune_button_group_small', this.props.className) },
                children
            );
        }
    }]);

    return ButtonGroup;
}(React.Component);

ButtonGroup.propTypes = {
    type: PropTypes.oneOf(['small', 'big'])
};

},{"./style.less":79,"mdc-classnames":"mdc-classnames","react":"react"}],79:[function(require,module,exports){
module.exports = {"neptune_button_group_small":"neptune_neptune_button_group_small_12plo","neptune_button_item_small":"neptune_neptune_button_item_small_12plo","selected_small":"neptune_selected_small_12plo","selected_small_next":"neptune_selected_small_next_12plo","neptune_button_item_big":"neptune_neptune_button_item_big_12plo","selected_big":"neptune_selected_big_12plo","selected_big_next":"neptune_selected_big_next_12plo"}
},{}],80:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var styles = require('./style.less');

var ButtonToolbar = function (_React$Component) {
    _inherits(ButtonToolbar, _React$Component);

    function ButtonToolbar() {
        _classCallCheck(this, ButtonToolbar);

        return _possibleConstructorReturn(this, (ButtonToolbar.__proto__ || Object.getPrototypeOf(ButtonToolbar)).apply(this, arguments));
    }

    _createClass(ButtonToolbar, [{
        key: 'render',
        value: function render() {
            var children = React.Children.map(this.props.children, function (el, indx) {
                return React.cloneElement(el, { className: styles.buttonToolbarItem, key: 'item-' + indx }, el.props.children);
            });
            return React.createElement(
                'div',
                { className: styles.buttonToolbar, role: 'toolbar' },
                children
            );
        }
    }]);

    return ButtonToolbar;
}(React.Component);

exports.default = ButtonToolbar;

},{"./style.less":81,"react":"react"}],81:[function(require,module,exports){
module.exports = {"buttonToolbarItem":"neptune_buttonToolbarItem_9pvfk"}
},{}],82:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _mdcClassnames = require('mdc-classnames');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var React = require("react");
var PropTypes = React.PropTypes;
var Component = React.Component;

var styles = require('./style.less');

var cx = _mdcClassnames.setCssModule.bind(styles);

var Button = function (_Component) {
    _inherits(Button, _Component);

    function Button(props) {
        _classCallCheck(this, Button);

        var _this = _possibleConstructorReturn(this, (Button.__proto__ || Object.getPrototypeOf(Button)).call(this, props));

        _this.handleClick = _this.handleClick.bind(_this);
        for (var key in _this.props) {
            if (key === 'secondary') {
                console.warn("Please note 'secondary' class has been deprecated. Use default instead.");
            }
        }
        return _this;
    }

    _createClass(Button, [{
        key: 'render',
        value: function render() {
            var elemProps = {};
            if (this.props.disabled) {
                elemProps.disabled = true;
            }
            var classes = cx(this.props.className, {
                button: true,
                disabled: this.props.disabled,
                large: this.props.size && this.props.size === 'large',
                primary: this.props.primary,
                secondary: this.props.secondary,
                small: this.props.size && this.props.size === 'small'
            });

            return React.createElement(
                'button',
                _extends({ className: classes }, elemProps, { type: 'button', onClick: this.handleClick }),
                this.props.children
            );
        }
    }, {
        key: 'handleClick',
        value: function handleClick(event) {
            if (this.props.onClick) {
                this.props.onClick(event, this);
            }
        }
    }]);

    return Button;
}(Component);

exports.default = Button;


Button.propTypes = {
    className: PropTypes.string,
    disabled: PropTypes.bool,
    onClick: PropTypes.func,
    primary: PropTypes.bool,
    secondary: PropTypes.bool,
    size: PropTypes.oneOf(['small', 'medium', 'large'])
};

},{"./style.less":83,"mdc-classnames":"mdc-classnames","react":"react"}],83:[function(require,module,exports){
module.exports = {"Title-Page":"neptune_Title-Page_61w10","Title-Page-Light":"neptune_Title-Page-Light_61w10","Title-Section-Primary":"neptune_Title-Section-Primary_61w10","Title-Section-Primary-Light":"neptune_Title-Section-Primary-Light_61w10","TITLE-SUBTITLE":"neptune_TITLE-SUBTITLE_61w10","Title-Section-Secondary":"neptune_Title-Section-Secondary_61w10","TITLE-MODULE":"neptune_TITLE-MODULE_61w10","LABEL-STANDARD":"neptune_LABEL-STANDARD_61w10","LABEL-STANDARD-SEMIBOLD":"neptune_LABEL-STANDARD-SEMIBOLD_61w10","LABEL-ATTRIBUTION":"neptune_LABEL-ATTRIBUTION_61w10","LABEL-ATTRIBUTION-MA":"neptune_LABEL-ATTRIBUTION-MA_61w10","LABEL-ATTRIBUTION-MIS":"neptune_LABEL-ATTRIBUTION-MIS_61w10","Label-Footnote":"neptune_Label-Footnote_61w10","Rating":"neptune_Rating_61w10","Header-Primary":"neptune_Header-Primary_61w10","Body-Primary":"neptune_Body-Primary_61w10","Header-Secondary":"neptune_Header-Secondary_61w10","Header-Secondary-Bold":"neptune_Header-Secondary-Bold_61w10","Body-Secondary":"neptune_Body-Secondary_61w10","TABLE-SECTION":"neptune_TABLE-SECTION_61w10","Header-Tertiary":"neptune_Header-Tertiary_61w10","Header-Tertiary-Bold":"neptune_Header-Tertiary-Bold_61w10","Body-Tertiary":"neptune_Body-Tertiary_61w10","Body-Tertiary-Med":"neptune_Body-Tertiary-Med_61w10","Body-Text-Prompt":"neptune_Body-Text-Prompt_61w10","Link-DkBlue":"neptune_Link-DkBlue_61w10","LINK-GOLD":"neptune_LINK-GOLD_61w10","LINK-GREY":"neptune_LINK-GREY_61w10","LABEL-SIDENAV-TITLE":"neptune_LABEL-SIDENAV-TITLE_61w10","MIS-BLUE":"neptune_MIS-BLUE_61w10","MA-BLUE":"neptune_MA-BLUE_61w10","MOODYS-BLUE":"neptune_MOODYS-BLUE_61w10","HIGHLIGHT-BLUE":"neptune_HIGHLIGHT-BLUE_61w10","GOLD":"neptune_GOLD_61w10","GREY-1":"neptune_GREY-1_61w10","GREY-2":"neptune_GREY-2_61w10","GREY-3":"neptune_GREY-3_61w10","GREY-4":"neptune_GREY-4_61w10","BLACK":"neptune_BLACK_61w10","RED":"neptune_RED_61w10","GREEN":"neptune_GREEN_61w10","icon_down_arrow":"neptune_icon_down_arrow_61w10","icon_up_arrow":"neptune_icon_up_arrow_61w10","icon_warning_icon":"neptune_icon_warning_icon_61w10","icon_select_arrows":"neptune_icon_select_arrows_61w10","icon_triangle_down":"neptune_icon_triangle_down_61w10","icon_triangle_up":"neptune_icon_triangle_up_61w10","icon_x_icon":"neptune_icon_x_icon_61w10","icon_right_arrow":"neptune_icon_right_arrow_61w10","MIS-BLUE-FONT":"neptune_MIS-BLUE-FONT_61w10","MIS-BLUE-BG":"neptune_MIS-BLUE-BG_61w10","MIS-BLUE-BORDER":"neptune_MIS-BLUE-BORDER_61w10","MA-BLUE-FONT":"neptune_MA-BLUE-FONT_61w10","MA-BLUE-BG":"neptune_MA-BLUE-BG_61w10","MA-BLUE-BORDER":"neptune_MA-BLUE-BORDER_61w10","MOODYS-BLUE-FONT":"neptune_MOODYS-BLUE-FONT_61w10","MOODYS-BLUE-BG":"neptune_MOODYS-BLUE-BG_61w10","MOODYS-BLUE-BORDER":"neptune_MOODYS-BLUE-BORDER_61w10","HIGHLIGHT-BLUE-FONT":"neptune_HIGHLIGHT-BLUE-FONT_61w10","HIGHLIGHT-BLUE-BG":"neptune_HIGHLIGHT-BLUE-BG_61w10","HIGHLIGHT-BLUE-BORDER":"neptune_HIGHLIGHT-BLUE-BORDER_61w10","GOLD-FONT":"neptune_GOLD-FONT_61w10","GOLD-BG":"neptune_GOLD-BG_61w10","GOLD-BORDER":"neptune_GOLD-BORDER_61w10","GREY-1-FONT":"neptune_GREY-1-FONT_61w10","GREY-1-BG":"neptune_GREY-1-BG_61w10","GREY-1-BORDER":"neptune_GREY-1-BORDER_61w10","GREY-2-FONT":"neptune_GREY-2-FONT_61w10","GREY-2-BG":"neptune_GREY-2-BG_61w10","GREY-2-BORDER":"neptune_GREY-2-BORDER_61w10","GREY-3-FONT":"neptune_GREY-3-FONT_61w10","GREY-3-BG":"neptune_GREY-3-BG_61w10","GREY-3-BORDER":"neptune_GREY-3-BORDER_61w10","GREY-4-FONT":"neptune_GREY-4-FONT_61w10","GREY-4-BG":"neptune_GREY-4-BG_61w10","GREY-4-BORDER":"neptune_GREY-4-BORDER_61w10","BLACK-FONT":"neptune_BLACK-FONT_61w10","BLACK-BG":"neptune_BLACK-BG_61w10","BLACK-BORDER":"neptune_BLACK-BORDER_61w10","RED-FONT":"neptune_RED-FONT_61w10","RED-BG":"neptune_RED-BG_61w10","RED-BORDER":"neptune_RED-BORDER_61w10","GREEN-FONT":"neptune_GREEN-FONT_61w10","GREEN-BG":"neptune_GREEN-BG_61w10","GREEN-BORDER":"neptune_GREEN-BORDER_61w10","button":"neptune_button_61w10","primary":"neptune_primary_61w10","secondary":"neptune_secondary_61w10","disabled":"neptune_disabled_61w10","large":"neptune_large_61w10","small":"neptune_small_61w10"}
},{}],84:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _mdcClassnames = require('mdc-classnames');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var React = require("react");
var PropTypes = React.PropTypes;
var Component = React.Component;

var styles = require('./style.less');
var cx = _mdcClassnames.setCssModule.bind(styles);

var CheckBox = function (_Component) {
    _inherits(CheckBox, _Component);

    function CheckBox(props) {
        _classCallCheck(this, CheckBox);

        var _this = _possibleConstructorReturn(this, (CheckBox.__proto__ || Object.getPrototypeOf(CheckBox)).call(this, props));

        _this.handleChange = _this.handleChange.bind(_this);
        _this.handleNoop = _this.handleNoop.bind(_this);
        _this.state = {
            checked: props.checked
        };
        if (_this.props.onclick) {
            console.warn("CheckBox 'onclick' event has been deprecated. Please use onChange event instead.");
        }
        return _this;
    }

    _createClass(CheckBox, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            // only update if component manages its own state
            if (!this.props.readonly) {
                if (nextProps.checked !== this.props.checked || nextProps.disabled !== this.props.disabled) {
                    this.setState({ checked: nextProps.checked });
                }
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _props = this.props;
            var name = _props.name;
            var text = _props.text;
            var value = _props.value;
            var disabled = _props.disabled;

            var checked = this.props.readonly ? this.props.checked : this.state.checked;

            var extraProps = {};
            if (checked === true) {
                extraProps.checked = true;
            } else {
                extraProps.checked = false;
            }
            if (disabled === true) {
                extraProps.disabled = true;
            }
            var classes = cx(this.props.className, {
                checkbox: true,
                disabled: disabled
            });

            return React.createElement(
                'div',
                { className: classes },
                React.createElement(
                    'label',
                    { htmlFor: name, className: styles.label },
                    React.createElement('input', _extends({ type: 'checkbox', id: name, onClick: this.handleChange, onChange: this.handleNoop, value: value, name: name }, extraProps)),
                    React.createElement(
                        'span',
                        null,
                        text
                    )
                )
            );
        }
    }, {
        key: 'handleNoop',
        value: function handleNoop() {}
    }, {
        key: 'handleChange',
        value: function handleChange(e) {
            var checked = this.props.checked;
            if (!this.props.readonly) {
                checked = !this.state.checked;
                this.setState({ checked: checked });
            }

            if (this.props.onChange) {
                this.props.onChange(e, checked, this.props.value);
            } else if (this.props.onclick) {
                this.props.onclick(e, checked, this.props.value);
            }
        }
    }]);

    return CheckBox;
}(Component);

exports.default = CheckBox;


CheckBox.propTypes = {
    className: PropTypes.string,
    checked: PropTypes.bool,
    disabled: PropTypes.bool,
    name: PropTypes.string,
    onChange: PropTypes.func,
    text: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    value: PropTypes.string,
    readonly: PropTypes.bool
};

CheckBox.defaultProps = {
    disabled: false,
    checked: false
};

},{"./style.less":85,"mdc-classnames":"mdc-classnames","react":"react"}],85:[function(require,module,exports){
module.exports = {"Title-Page":"neptune_Title-Page_1okqa","Title-Page-Light":"neptune_Title-Page-Light_1okqa","Title-Section-Primary":"neptune_Title-Section-Primary_1okqa","Title-Section-Primary-Light":"neptune_Title-Section-Primary-Light_1okqa","TITLE-SUBTITLE":"neptune_TITLE-SUBTITLE_1okqa","Title-Section-Secondary":"neptune_Title-Section-Secondary_1okqa","TITLE-MODULE":"neptune_TITLE-MODULE_1okqa","LABEL-STANDARD":"neptune_LABEL-STANDARD_1okqa","LABEL-STANDARD-SEMIBOLD":"neptune_LABEL-STANDARD-SEMIBOLD_1okqa","LABEL-ATTRIBUTION":"neptune_LABEL-ATTRIBUTION_1okqa","LABEL-ATTRIBUTION-MA":"neptune_LABEL-ATTRIBUTION-MA_1okqa","LABEL-ATTRIBUTION-MIS":"neptune_LABEL-ATTRIBUTION-MIS_1okqa","Label-Footnote":"neptune_Label-Footnote_1okqa","Rating":"neptune_Rating_1okqa","Header-Primary":"neptune_Header-Primary_1okqa","Body-Primary":"neptune_Body-Primary_1okqa","Header-Secondary":"neptune_Header-Secondary_1okqa","Header-Secondary-Bold":"neptune_Header-Secondary-Bold_1okqa","Body-Secondary":"neptune_Body-Secondary_1okqa","TABLE-SECTION":"neptune_TABLE-SECTION_1okqa","Header-Tertiary":"neptune_Header-Tertiary_1okqa","Header-Tertiary-Bold":"neptune_Header-Tertiary-Bold_1okqa","Body-Tertiary":"neptune_Body-Tertiary_1okqa","Body-Tertiary-Med":"neptune_Body-Tertiary-Med_1okqa","Body-Text-Prompt":"neptune_Body-Text-Prompt_1okqa","Link-DkBlue":"neptune_Link-DkBlue_1okqa","LINK-GOLD":"neptune_LINK-GOLD_1okqa","LINK-GREY":"neptune_LINK-GREY_1okqa","LABEL-SIDENAV-TITLE":"neptune_LABEL-SIDENAV-TITLE_1okqa","MIS-BLUE":"neptune_MIS-BLUE_1okqa","MA-BLUE":"neptune_MA-BLUE_1okqa","MOODYS-BLUE":"neptune_MOODYS-BLUE_1okqa","HIGHLIGHT-BLUE":"neptune_HIGHLIGHT-BLUE_1okqa","GOLD":"neptune_GOLD_1okqa","GREY-1":"neptune_GREY-1_1okqa","GREY-2":"neptune_GREY-2_1okqa","GREY-3":"neptune_GREY-3_1okqa","GREY-4":"neptune_GREY-4_1okqa","BLACK":"neptune_BLACK_1okqa","RED":"neptune_RED_1okqa","GREEN":"neptune_GREEN_1okqa","icon_down_arrow":"neptune_icon_down_arrow_1okqa","icon_up_arrow":"neptune_icon_up_arrow_1okqa","icon_warning_icon":"neptune_icon_warning_icon_1okqa","icon_select_arrows":"neptune_icon_select_arrows_1okqa","icon_triangle_down":"neptune_icon_triangle_down_1okqa","icon_triangle_up":"neptune_icon_triangle_up_1okqa","icon_x_icon":"neptune_icon_x_icon_1okqa","icon_right_arrow":"neptune_icon_right_arrow_1okqa","MIS-BLUE-FONT":"neptune_MIS-BLUE-FONT_1okqa","MIS-BLUE-BG":"neptune_MIS-BLUE-BG_1okqa","MIS-BLUE-BORDER":"neptune_MIS-BLUE-BORDER_1okqa","MA-BLUE-FONT":"neptune_MA-BLUE-FONT_1okqa","MA-BLUE-BG":"neptune_MA-BLUE-BG_1okqa","MA-BLUE-BORDER":"neptune_MA-BLUE-BORDER_1okqa","MOODYS-BLUE-FONT":"neptune_MOODYS-BLUE-FONT_1okqa","MOODYS-BLUE-BG":"neptune_MOODYS-BLUE-BG_1okqa","MOODYS-BLUE-BORDER":"neptune_MOODYS-BLUE-BORDER_1okqa","HIGHLIGHT-BLUE-FONT":"neptune_HIGHLIGHT-BLUE-FONT_1okqa","HIGHLIGHT-BLUE-BG":"neptune_HIGHLIGHT-BLUE-BG_1okqa","HIGHLIGHT-BLUE-BORDER":"neptune_HIGHLIGHT-BLUE-BORDER_1okqa","GOLD-FONT":"neptune_GOLD-FONT_1okqa","GOLD-BG":"neptune_GOLD-BG_1okqa","GOLD-BORDER":"neptune_GOLD-BORDER_1okqa","GREY-1-FONT":"neptune_GREY-1-FONT_1okqa","GREY-1-BG":"neptune_GREY-1-BG_1okqa","GREY-1-BORDER":"neptune_GREY-1-BORDER_1okqa","GREY-2-FONT":"neptune_GREY-2-FONT_1okqa","GREY-2-BG":"neptune_GREY-2-BG_1okqa","GREY-2-BORDER":"neptune_GREY-2-BORDER_1okqa","GREY-3-FONT":"neptune_GREY-3-FONT_1okqa","GREY-3-BG":"neptune_GREY-3-BG_1okqa","GREY-3-BORDER":"neptune_GREY-3-BORDER_1okqa","GREY-4-FONT":"neptune_GREY-4-FONT_1okqa","GREY-4-BG":"neptune_GREY-4-BG_1okqa","GREY-4-BORDER":"neptune_GREY-4-BORDER_1okqa","BLACK-FONT":"neptune_BLACK-FONT_1okqa","BLACK-BG":"neptune_BLACK-BG_1okqa","BLACK-BORDER":"neptune_BLACK-BORDER_1okqa","RED-FONT":"neptune_RED-FONT_1okqa","RED-BG":"neptune_RED-BG_1okqa","RED-BORDER":"neptune_RED-BORDER_1okqa","GREEN-FONT":"neptune_GREEN-FONT_1okqa","GREEN-BG":"neptune_GREEN-BG_1okqa","GREEN-BORDER":"neptune_GREEN-BORDER_1okqa","checkbox":"neptune_checkbox_1okqa","label":"neptune_label_1okqa","disabled":"neptune_disabled_1okqa"}
},{}],86:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    "MA_BLUE": "#029AE1",
    "MIS_BLUE": "#0028A0",
    "MOODYS_BLUE": "#003468",
    "GOLD": "#CD9C54",
    "BLACK": "#191919",
    "GREY_4": "#7F7F7F",
    "GREY_3_4": "#ABABAB",
    "GREY_3_3": "#B3B3B3",
    "GREY_3_2": "#BFBFBF",
    "GREY_3_1": "#CCCCCC",
    "GREY_3": "#D8D8D8",
    "GREY_2_1": "#E2E2E2",
    "GREY_2": "#F1F1F1",
    "GREY_1": "#FAFAFB",
    "HIGHLIGHT_BLUE_1": "#DFE6EC",
    "HIGHLIGHT_BLUE_2": "#EFF2F5",
    "RED": "#D40000",
    "GREEN": "#029A09"
};

},{}],87:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _mdcClassnames = require('mdc-classnames');

var _TextBox = require('../TextBox');

var _TextBox2 = _interopRequireDefault(_TextBox);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var styles = require('./style.less');

var ComboBox = function (_React$Component) {
    _inherits(ComboBox, _React$Component);

    function ComboBox(props, defaultProps) {
        _classCallCheck(this, ComboBox);

        var _this = _possibleConstructorReturn(this, (ComboBox.__proto__ || Object.getPrototypeOf(ComboBox)).call(this, props, defaultProps));

        _this.handleMouseLeave = _this.handleMouseLeave.bind(_this);
        _this.handleIconClick = _this.handleIconClick.bind(_this);
        _this.handleTextChange = _this.handleTextChange.bind(_this);
        _this.state = { update: false };
        return _this;
    }

    _createClass(ComboBox, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps() {
            this.setState({ update: !this.state.update });
        }
    }, {
        key: 'render',
        value: function render() {
            var classes = (0, _mdcClassnames.setCssModule)('filter-dropdown', this.props.className);
            return React.createElement(
                'div',
                { className: styles[classes], onMouseLeave: this.handleMouseLeave },
                React.createElement(
                    'div',
                    { className: styles['search-container'] },
                    React.createElement(
                        'div',
                        { className: styles['search-box-container'] },
                        React.createElement(_TextBox2.default, { placeholder: this.props.placeholder, value: this.props.searchText, onChange: this.handleTextChange, disabled: this.props.disableSearch })
                    ),
                    React.createElement('div', { className: styles['icon-container'], onClick: this.handleIconClick })
                ),
                React.createElement(
                    'div',
                    { className: styles[this.props.showContent ? 'content-visible' : 'content-hidden'] },
                    this.props.children
                )
            );
        }
    }, {
        key: 'handleMouseLeave',
        value: function handleMouseLeave(e) {
            if (this.props.onMouseLeave) {
                this.props.onMouseLeave(e);
            }
        }
    }, {
        key: 'handleIconClick',
        value: function handleIconClick(e) {
            if (this.props.onCollapseExpandClick) {
                this.props.onCollapseExpandClick(e);
            }
        }
    }, {
        key: 'handleTextChange',
        value: function handleTextChange(e) {
            if (this.props.onSearchTextChange) {
                this.props.onSearchTextChange(e);
            }
        }
    }]);

    return ComboBox;
}(React.Component);

exports.default = ComboBox;


ComboBox.propTypes = {
    className: React.PropTypes.string,
    disableSearch: React.PropTypes.bool,
    onCollapseExpandClick: React.PropTypes.func,
    onMouseLeave: React.PropTypes.func,
    onSearchTextChange: React.PropTypes.func,
    placeholder: React.PropTypes.string,
    searchText: React.PropTypes.string,
    showContent: React.PropTypes.bool
};

ComboBox.defaultProps = {
    disableSearch: false,
    placeholder: '',
    searchText: '',
    showContent: false
};

},{"../TextBox":215,"./style.less":88,"mdc-classnames":"mdc-classnames","react":"react"}],88:[function(require,module,exports){
module.exports = {"Title-Page":"neptune_Title-Page_1fuh2","Title-Page-Light":"neptune_Title-Page-Light_1fuh2","Title-Section-Primary":"neptune_Title-Section-Primary_1fuh2","Title-Section-Primary-Light":"neptune_Title-Section-Primary-Light_1fuh2","TITLE-SUBTITLE":"neptune_TITLE-SUBTITLE_1fuh2","Title-Section-Secondary":"neptune_Title-Section-Secondary_1fuh2","TITLE-MODULE":"neptune_TITLE-MODULE_1fuh2","LABEL-STANDARD":"neptune_LABEL-STANDARD_1fuh2","LABEL-STANDARD-SEMIBOLD":"neptune_LABEL-STANDARD-SEMIBOLD_1fuh2","LABEL-ATTRIBUTION":"neptune_LABEL-ATTRIBUTION_1fuh2","LABEL-ATTRIBUTION-MA":"neptune_LABEL-ATTRIBUTION-MA_1fuh2","LABEL-ATTRIBUTION-MIS":"neptune_LABEL-ATTRIBUTION-MIS_1fuh2","Label-Footnote":"neptune_Label-Footnote_1fuh2","Rating":"neptune_Rating_1fuh2","Header-Primary":"neptune_Header-Primary_1fuh2","Body-Primary":"neptune_Body-Primary_1fuh2","Header-Secondary":"neptune_Header-Secondary_1fuh2","Header-Secondary-Bold":"neptune_Header-Secondary-Bold_1fuh2","Body-Secondary":"neptune_Body-Secondary_1fuh2","TABLE-SECTION":"neptune_TABLE-SECTION_1fuh2","Header-Tertiary":"neptune_Header-Tertiary_1fuh2","Header-Tertiary-Bold":"neptune_Header-Tertiary-Bold_1fuh2","Body-Tertiary":"neptune_Body-Tertiary_1fuh2","Body-Tertiary-Med":"neptune_Body-Tertiary-Med_1fuh2","Body-Text-Prompt":"neptune_Body-Text-Prompt_1fuh2","Link-DkBlue":"neptune_Link-DkBlue_1fuh2","LINK-GOLD":"neptune_LINK-GOLD_1fuh2","LINK-GREY":"neptune_LINK-GREY_1fuh2","LABEL-SIDENAV-TITLE":"neptune_LABEL-SIDENAV-TITLE_1fuh2","MIS-BLUE":"neptune_MIS-BLUE_1fuh2","MA-BLUE":"neptune_MA-BLUE_1fuh2","MOODYS-BLUE":"neptune_MOODYS-BLUE_1fuh2","HIGHLIGHT-BLUE":"neptune_HIGHLIGHT-BLUE_1fuh2","GOLD":"neptune_GOLD_1fuh2","GREY-1":"neptune_GREY-1_1fuh2","GREY-2":"neptune_GREY-2_1fuh2","GREY-3":"neptune_GREY-3_1fuh2","GREY-4":"neptune_GREY-4_1fuh2","BLACK":"neptune_BLACK_1fuh2","RED":"neptune_RED_1fuh2","GREEN":"neptune_GREEN_1fuh2","icon_down_arrow":"neptune_icon_down_arrow_1fuh2","icon_up_arrow":"neptune_icon_up_arrow_1fuh2","icon_warning_icon":"neptune_icon_warning_icon_1fuh2","icon_select_arrows":"neptune_icon_select_arrows_1fuh2","icon_triangle_down":"neptune_icon_triangle_down_1fuh2","icon_triangle_up":"neptune_icon_triangle_up_1fuh2","icon_x_icon":"neptune_icon_x_icon_1fuh2","icon_right_arrow":"neptune_icon_right_arrow_1fuh2","MIS-BLUE-FONT":"neptune_MIS-BLUE-FONT_1fuh2","MIS-BLUE-BG":"neptune_MIS-BLUE-BG_1fuh2","MIS-BLUE-BORDER":"neptune_MIS-BLUE-BORDER_1fuh2","MA-BLUE-FONT":"neptune_MA-BLUE-FONT_1fuh2","MA-BLUE-BG":"neptune_MA-BLUE-BG_1fuh2","MA-BLUE-BORDER":"neptune_MA-BLUE-BORDER_1fuh2","MOODYS-BLUE-FONT":"neptune_MOODYS-BLUE-FONT_1fuh2","MOODYS-BLUE-BG":"neptune_MOODYS-BLUE-BG_1fuh2","MOODYS-BLUE-BORDER":"neptune_MOODYS-BLUE-BORDER_1fuh2","HIGHLIGHT-BLUE-FONT":"neptune_HIGHLIGHT-BLUE-FONT_1fuh2","HIGHLIGHT-BLUE-BG":"neptune_HIGHLIGHT-BLUE-BG_1fuh2","HIGHLIGHT-BLUE-BORDER":"neptune_HIGHLIGHT-BLUE-BORDER_1fuh2","GOLD-FONT":"neptune_GOLD-FONT_1fuh2","GOLD-BG":"neptune_GOLD-BG_1fuh2","GOLD-BORDER":"neptune_GOLD-BORDER_1fuh2","GREY-1-FONT":"neptune_GREY-1-FONT_1fuh2","GREY-1-BG":"neptune_GREY-1-BG_1fuh2","GREY-1-BORDER":"neptune_GREY-1-BORDER_1fuh2","GREY-2-FONT":"neptune_GREY-2-FONT_1fuh2","GREY-2-BG":"neptune_GREY-2-BG_1fuh2","GREY-2-BORDER":"neptune_GREY-2-BORDER_1fuh2","GREY-3-FONT":"neptune_GREY-3-FONT_1fuh2","GREY-3-BG":"neptune_GREY-3-BG_1fuh2","GREY-3-BORDER":"neptune_GREY-3-BORDER_1fuh2","GREY-4-FONT":"neptune_GREY-4-FONT_1fuh2","GREY-4-BG":"neptune_GREY-4-BG_1fuh2","GREY-4-BORDER":"neptune_GREY-4-BORDER_1fuh2","BLACK-FONT":"neptune_BLACK-FONT_1fuh2","BLACK-BG":"neptune_BLACK-BG_1fuh2","BLACK-BORDER":"neptune_BLACK-BORDER_1fuh2","RED-FONT":"neptune_RED-FONT_1fuh2","RED-BG":"neptune_RED-BG_1fuh2","RED-BORDER":"neptune_RED-BORDER_1fuh2","GREEN-FONT":"neptune_GREEN-FONT_1fuh2","GREEN-BG":"neptune_GREEN-BG_1fuh2","GREEN-BORDER":"neptune_GREEN-BORDER_1fuh2","filter-dropdown":"neptune_filter-dropdown_1fuh2","search-container":"neptune_search-container_1fuh2","icon-container":"neptune_icon-container_1fuh2","search-box-container":"neptune_search-box-container_1fuh2","content-visible":"neptune_content-visible_1fuh2","content-hidden":"neptune_content-hidden_1fuh2"}
},{}],89:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

require('moment-range');
var styles = require('./style.less'); //eslint-disable-line

var Cell = function (_React$Component) {
    _inherits(Cell, _React$Component);

    function Cell(props) {
        _classCallCheck(this, Cell);

        return _possibleConstructorReturn(this, (Cell.__proto__ || Object.getPrototypeOf(Cell)).call(this, props));
        // this.state = { classes: this.props.classes, value: this.props.value };
    }

    _createClass(Cell, [{
        key: 'render',
        value: function render() {
            var _classes = this.props.classes + ' cell';
            return React.createElement(
                'div',
                { className: _classes },
                this.props.value
            );
        }
    }]);

    return Cell;
}(React.Component);

exports.default = Cell;

Cell.propTypes = {
    classes: React.PropTypes.string,
    value: React.PropTypes.any
};

},{"./style.less":93,"moment-range":"moment-range","react":"react"}],90:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _mdcClassnames = require('mdc-classnames');

var _util = require('./util');

var _util2 = _interopRequireDefault(_util);

var _cell = require('./cell');

var _cell2 = _interopRequireDefault(_cell);

var _viewHeader = require('./view-header');

var _viewHeader2 = _interopRequireDefault(_viewHeader);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable react/jsx-no-bind */

var moment = require('moment');
require('moment-range');

var styles = require('./style.less');
var cx = _mdcClassnames.setCssModule.bind(styles);

var DayView = function (_React$Component) {
    _inherits(DayView, _React$Component);

    function DayView(props) {
        _classCallCheck(this, DayView);

        var _this = _possibleConstructorReturn(this, (DayView.__proto__ || Object.getPrototypeOf(DayView)).call(this, props));

        var date = props.date ? moment(_util2.default.toDate(props.date)) : null;
        var minDate = props.minDate ? moment(_util2.default.toDate(props.minDate)) : null;
        var maxDate = props.maxDate ? moment(_util2.default.toDate(props.maxDate)) : null;
        _this.state = {
            date: date,
            minDate: minDate,
            maxDate: maxDate
        };
        return _this;
    }

    _createClass(DayView, [{
        key: 'render',
        value: function render() {
            var titles = this.getDaysTitles().map(function (item, i) {
                var _class = cx({
                    cell: true,
                    day: true
                });
                return React.createElement(_cell2.default, { classes: _class, key: i, value: item.label });
            });
            var days = this.getDays().map(function (item, i) {
                var _class = cx({
                    cell: true,
                    current: item.curr,
                    day: true,
                    disabled: item.disabled,
                    next: item.next,
                    prev: item.prev,
                    today: item.today
                });
                return React.createElement(_cell2.default, { classes: _class, key: i, value: item.label });
            });
            var currentDate = this.props.date ? this.props.date.format('MMMM YYYY') : moment().format('MMMM');
            return React.createElement(
                'div',
                { className: styles['days-view'] },
                React.createElement(_viewHeader2.default, { data: currentDate, next: this.next.bind(this), prev: this.prev.bind(this), titleAction: this.props.nextView }),
                React.createElement(
                    'div',
                    { className: 'days-title' },
                    titles
                ),
                React.createElement(
                    'div',
                    { className: 'days', onClick: this.cellClick.bind(this) },
                    days
                )
            );
        }
    }, {
        key: 'cellClick',
        value: function cellClick(e) {
            var cell = e.target;
            var date = parseInt(cell.innerHTML, 10);
            var newDate = this.props.date ? this.props.date.clone() : moment();
            if (isNaN(date)) {
                return;
            }
            if (cell.className.indexOf('prev') > -1) {
                newDate.subtract(1, 'months');
            } else if (cell.className.indexOf('next') > -1) {
                newDate.add(1, 'months');
            }
            newDate.date(date);
            this.props.setDate(newDate, true);
        }
    }, {
        key: 'getDays',
        value: function getDays() {
            var now = this.props.date ? this.props.date : moment();
            var currDay = now.date();
            var days = [];
            var end = now.clone().endOf('month').weekday(6);
            var maxDate = this.props.maxDate;
            var minDate = this.props.minDate;
            var month = now.month();
            var start = now.clone().startOf('month').weekday(0);
            var today = moment();
            var year = now.year();
            moment.range(start, end).by('days', function (day) {
                days.push({
                    curr: day.date() === currDay && day.month() === month,
                    disabled: day.isBefore(minDate, 'day') || day.isAfter(maxDate, 'day'),
                    label: day.format('D'),
                    next: day.month() > month || day.year() > year,
                    prev: day.month() < month && !(day.year() > year) || day.year() < year,
                    today: day.date() === today.date() && day.month() === today.month() && day.year() === today.year()
                });
            });
            return days;
        }
    }, {
        key: 'getDaysTitles',
        value: function getDaysTitles() {
            var now = moment();
            return [0, 1, 2, 3, 4, 5, 6].map(function (i) {
                var weekday = now.weekday(i).format('dd');
                return { label: weekday, val: weekday };
            });
        }
    }, {
        key: 'next',
        value: function next() {
            var nextDate = this.props.date.clone().add(1, 'months');
            if (this.props.maxDate && nextDate.isAfter(this.props.maxDate, 'day')) {
                nextDate = this.props.maxDate;
            }
            this.props.prevView(nextDate, 'next');
        }
    }, {
        key: 'prev',
        value: function prev() {
            var prevDate = this.props.date.clone().subtract(1, 'months');
            if (this.props.minDate && prevDate.isBefore(this.props.minDate, 'day')) {
                prevDate = this.props.minDate;
            }
            this.props.prevView(prevDate, 'prv');
        }
    }]);

    return DayView;
}(React.Component);

exports.default = DayView;

DayView.propTypes = {
    date: React.PropTypes.object.isRequired,
    maxDate: React.PropTypes.any,
    minDate: React.PropTypes.any,
    nextView: React.PropTypes.func,
    setDate: React.PropTypes.func
};

},{"./cell":89,"./style.less":93,"./util":94,"./view-header":95,"mdc-classnames":"mdc-classnames","moment":"moment","moment-range":"moment-range","react":"react"}],91:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _mdcClassnames = require('mdc-classnames');

var _dayView = require('./day-view');

var _dayView2 = _interopRequireDefault(_dayView);

var _monthView = require('./month-view');

var _monthView2 = _interopRequireDefault(_monthView);

var _yearView = require('./year-view');

var _yearView2 = _interopRequireDefault(_yearView);

var _util = require('./util');

var _util2 = _interopRequireDefault(_util);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

require('moment-range');

var moment = require('moment');

var styles = require('./style.less');

var DateInput = function (_React$Component) {
    _inherits(DateInput, _React$Component);

    function DateInput(props, context) {
        _classCallCheck(this, DateInput);

        var _this = _possibleConstructorReturn(this, (DateInput.__proto__ || Object.getPrototypeOf(DateInput)).call(this, props, context)); // eslint-disable-line max-statements


        var date = props.date ? moment(_util2.default.toDate(props.date)) : null;
        var minDate = props.minDate ? moment(_util2.default.toDate(props.minDate)) : null;
        var maxDate = props.maxDate ? moment(_util2.default.toDate(props.maxDate)) : null;
        var format = props.format || 'MM-DD-YYYY';
        var minView = parseInt(props.minView, 10) || 0;
        var computableFormat = props.computableFormat || 'MM-DD-YYYY';
        var strictDateParsing = props.strictDateParsing || false;
        var parsingFormat = props.parsingFormat || format;
        _this.state = {
            computableFormat: computableFormat, currentView: minView || 0,
            date: date,
            format: format,
            inputValue: date ? date.format(format) : undefined,
            isVisible: false,
            maxDate: maxDate,
            minDate: minDate,
            minView: minView,
            navigationDate: date,
            strictDateParsing: strictDateParsing,
            parsingFormat: parsingFormat,
            views: ['days', 'months', 'years']
        };
        _this.calendarClick = _this.calendarClick.bind(_this);
        _this.nextView = _this.nextView.bind(_this);
        _this.prevView = _this.prevView.bind(_this);
        _this.setDate = _this.setDate.bind(_this);
        _this.toggleClick = _this.toggleClick.bind(_this);
        _this.inputBlur = _this.inputBlur.bind(_this);
        _this.changeDate = _this.changeDate.bind(_this);
        _this.inputFocus = _this.inputFocus.bind(_this);
        return _this;
    }

    _createClass(DateInput, [{
        key: 'render',
        value: function render() {
            // eslint-disable-line complexity, max-statements
            // its ok for this.state.date to be null, but we should never
            // pass null for the date into the calendar pop up, as we want
            // it to just start on todays date if there is no date set
            var calendarDate = this.state.date || moment();
            var view = void 0;
            switch (this.state.currentView) {
                case 0:
                    view = React.createElement(_dayView2.default, { date: calendarDate, nextView: this.nextView, maxDate: this.state.maxDate, minDate: this.state.minDate, prevView: this.prevView, setDate: this.setDate });
                    break;
                case 1:
                    view = React.createElement(_monthView2.default, { date: calendarDate, nextView: this.nextView, maxDate: this.state.maxDate, minDate: this.state.minDate, prevView: this.prevView, setDate: this.setDate });
                    break;
                case 2:
                    view = React.createElement(_yearView2.default, { date: calendarDate, maxDate: this.state.maxDate, minDate: this.state.minDate, prevView: this.prevView, setDate: this.setDate });
                    break;
                default:
                    view = React.createElement(_dayView2.default, { date: calendarDate, nextView: this.nextView, maxDate: this.state.maxDate, minDate: this.state.minDate, setDate: this.setDate });
            }
            //const todayText = this.props.todayText || (moment.locale() === 'de' ? 'Heute' : 'Today');
            var calendarClass = (0, _mdcClassnames.classSet)({
                'input-calendar-wrapper': true,
                'icon-hidden': this.props.hideIcon
            });
            var calendar = !this.state.isVisible || this.props.disabled ? '' : React.createElement(
                'div',
                { className: styles[calendarClass], onClick: this.calendarClick },
                view,
                React.createElement('span', { className: styles['today-btn' + (this.checkIfDateDisabled(moment().startOf('day')) ? ' disabled' : ' ')], onClick: this.todayClick })
            );
            var readOnly = false;
            if (this.props.hideTouchKeyboard) {
                // do not break server side rendering:
                try {
                    if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {
                        readOnly = true;
                    }
                } catch (e) {
                    console.warn(e); // eslint-disable-line
                }
            }
            var calendarIcon = void 0;
            if (this.props.customIcon === undefined) {
                // Do not show calendar icon if hideIcon is true
                calendarIcon = this.props.hideIcon || this.props.disabled ? '' : React.createElement(
                    'span',
                    { className: styles['icon-wrapper calendar-icon'], onClick: this.toggleClick },
                    React.createElement(
                        'svg',
                        { width: '16', height: '16', viewBox: '0 0 16 16' },
                        React.createElement('path', { d: 'M5 6h2v2h-2zM8 6h2v2h-2zM11 6h2v2h-2zM2 12h2v2h-2zM5 12h2v2h-2zM8 12h2v2h-2zM5 9h2v2h-2zM8 9h2v2h-2zM11 9h2v2h-2zM2 9h2v2h-2zM13 0v1h-2v-1h-7v1h-2v-1h-2v16h15v-16h-2zM14 15h-13v-11h13v11z' })
                    )
                );
            } else {
                calendarIcon = React.createElement('span', { className: styles[(0, _mdcClassnames.classSet)('icon-wrapper', 'calendar-icon', this.props.customIcon)], onClick: this.toggleClick });
            }
            var inputClass = this.props.inputFieldClass || 'input-calendar-field';
            return React.createElement(
                'div',
                { className: styles['input-calendar'] },
                React.createElement('input', { name: this.props.inputName, className: styles[inputClass], id: this.props.inputFieldId,
                    onBlur: this.inputBlur, onChange: this.changeDate,
                    onFocus: this.inputFocus, placeholder: this.props.placeholder,
                    readOnly: readOnly, disabled: this.props.disabled, type: 'text', value: this.state.inputValue
                }),
                calendarIcon,
                calendar
            );
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            document.addEventListener('click', this.documentClick.bind(this));
        }
    }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            this.setState({
                date: nextProps.date ? moment(_util2.default.toDate(nextProps.date)) : this.state.date,
                inputValue: nextProps.date ? moment(_util2.default.toDate(nextProps.date)).format(this.state.format) : null,
                isVisible: nextProps.disabled === true,
                maxDate: nextProps.maxDate ? moment(_util2.default.toDate(nextProps.maxDate)) : this.state.maxDate,
                minDate: nextProps.minDate ? moment(_util2.default.toDate(nextProps.minDate)) : this.state.minDate
            });
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            document.removeEventListener('click', this.documentClick.bind(this));
        }
    }, {
        key: 'changeDate',
        value: function changeDate(e) {
            this.setState({ inputValue: e.target.value });
        }
    }, {
        key: 'checkIfDateDisabled',
        value: function checkIfDateDisabled(date) {
            return date && this.state.minDate && date.isBefore(this.state.minDate, 'day') || date && this.state.maxDate && date.isAfter(this.state.maxDate, 'day');
        }
    }, {
        key: 'documentClick',
        value: function documentClick() {
            // e.preventDefault();
            if (!this.state.isCalendar) {
                this.setVisibility(false);
            }
            this.setState({ isCalendar: false });
        }
    }, {
        key: 'inputBlur',
        value: function inputBlur(e) {
            // eslint-disable-line max-statements
            var newDate = null;
            var computableDate = null;
            var date = this.state.inputValue;
            var format = this.state.format;
            var parsingFormat = this.state.parsingFormat;
            if (date) {
                // format, with strict parsing true, so we catch bad dates
                newDate = moment(date, parsingFormat, true);
                // if the new date didn't match our format, see if the native
                // js date can parse it
                if (!newDate.isValid() && !this.props.strictDateParsing) {
                    var d = new Date(date);
                    // if native js cannot parse, just make a new date
                    if (!d.getTime()) {
                        d = new Date();
                    }
                    newDate = moment(d);
                }
                computableDate = newDate.format(this.state.computableFormat);
            }
            this.setState({
                date: newDate,
                inputValue: newDate ? newDate.format(format) : null
            });
            if (this.props.onChange) {
                this.props.onChange(computableDate);
            }
            if (this.props.onBlur) {
                this.props.onBlur(e, computableDate);
            }
        }
    }, {
        key: 'inputFocus',
        value: function inputFocus(e) {
            if (this.props.openOnInputFocus) {
                this.toggleClick();
            }
            if (this.props.onFocus) {
                this.props.onFocus(e);
            }
        }
    }, {
        key: 'keyDown',
        value: function keyDown(e) {
            _util2.default.keyDownActions.call(this, e.keyCode);
        }
    }, {
        key: 'nextView',
        value: function nextView() {
            if (this.checkIfDateDisabled(this.state.date)) {
                return;
            }
            this.setState({ currentView: ++this.state.currentView });
        }
    }, {
        key: 'prevView',
        value: function prevView(date) {
            var btnSource = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';
            // eslint-disable-line max-statements, complexity
            var newDate = date;
            if (this.state.minDate && date.isBefore(this.state.minDate, 'day')) {
                newDate = this.state.minDate.clone();
            }
            if (this.state.maxDate && date.isAfter(this.state.maxDate, 'day')) {
                newDate = this.state.maxDate.clone();
            }
            if (this.state.currentView === this.state.minView) {
                if (btnSource === 'prv' || btnSource === 'next') {
                    this.setState({
                        date: newDate
                    });
                } else {
                    this.setState({
                        date: date,
                        currentView: --this.state.currentView
                    });
                }
                if (this.props.onChange) {
                    this.props.onChange(date.format(this.state.computableFormat));
                }
            } else if (this.state.currentView === 1) {
                if (btnSource === 'prv' || btnSource === 'next') {
                    this.setState({
                        date: newDate
                    });
                } else {
                    this.setState({
                        date: date,
                        currentView: --this.state.currentView
                    });
                }
            } else if (btnSource === 'prv' || btnSource === 'next') {
                this.setState({
                    date: newDate
                });
            } else {
                this.setState({
                    date: date,
                    currentView: --this.state.currentView
                });
            }
        }
    }, {
        key: 'setDate',
        value: function setDate(date) {
            var isDayView = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

            if (this.checkIfDateDisabled(date)) {
                return;
            }
            this.setState({
                date: date,
                inputValue: date.format(this.state.format),
                isVisible: this.props.closeOnSelect && isDayView ? !this.state.isVisible : this.state.isVisible
            });
            if (this.props.onChange) {
                this.props.onChange(date.format(this.state.computableFormat));
            }
        }
    }, {
        key: 'setVisibility',
        value: function setVisibility(val) {
            var value = val !== undefined ? val : !this.state.isVisible;
            var eventMethod = value ? 'addEventListener' : 'removeEventListener';
            document[eventMethod]('keydown', this.keyDown);
            if (this.state.isVisible !== value && !this.props.disabled) {
                this.setState({ isVisible: value });
            }
        }
    }, {
        key: 'calendarClick',
        value: function calendarClick() {
            this.setState({ isCalendar: true });
        }
    }, {
        key: 'todayClick',
        value: function todayClick() {
            var today = moment().startOf('day');
            if (this.checkIfDateDisabled(today)) {
                return;
            }
            this.setState({
                currentView: this.state.minView,
                date: today,
                inputValue: today.format(this.state.format)
            });
            if (this.props.onChange) {
                this.props.onChange(today.format(this.state.computableFormat));
            }
        }
    }, {
        key: 'toggleClick',
        value: function toggleClick() {
            this.setState({ isCalendar: true });
            this.setVisibility();
        }
    }]);

    return DateInput;
}(React.Component);

exports.default = DateInput;

DateInput.propTypes = {
    closeOnSelect: React.PropTypes.bool,
    computableFormat: React.PropTypes.string,
    customIcon: React.PropTypes.string,
    date: React.PropTypes.any,
    disabled: React.PropTypes.bool,
    format: React.PropTypes.string,
    hideIcon: React.PropTypes.bool,
    hideTouchKeyboard: React.PropTypes.bool,
    inputFieldClass: React.PropTypes.string,
    inputFieldId: React.PropTypes.string,
    inputName: React.PropTypes.string,
    maxDate: React.PropTypes.any,
    minDate: React.PropTypes.any,
    minView: React.PropTypes.number,
    navigationDate: React.PropTypes.any,
    onBlur: React.PropTypes.func,
    onChange: React.PropTypes.func,
    onFocus: React.PropTypes.func,
    openOnInputFocus: React.PropTypes.bool,
    parsingFormat: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.arrayOf(React.PropTypes.string)]),
    placeholder: React.PropTypes.string,
    strictDateParsing: React.PropTypes.bool,
    todayText: React.PropTypes.string
};

},{"./day-view":90,"./month-view":92,"./style.less":93,"./util":94,"./year-view":96,"mdc-classnames":"mdc-classnames","moment":"moment","moment-range":"moment-range","react":"react"}],92:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _util = require('./util');

var _util2 = _interopRequireDefault(_util);

var _cell = require('./cell');

var _cell2 = _interopRequireDefault(_cell);

var _viewHeader = require('./view-header');

var _viewHeader2 = _interopRequireDefault(_viewHeader);

var _mdcClassnames = require('mdc-classnames');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable react/jsx-no-bind */

var moment = require('moment');
require('moment-range');

var styles = require('./style.less');
var cx = _mdcClassnames.setCssModule.bind(styles);

var MonthView = function (_React$Component) {
    _inherits(MonthView, _React$Component);

    function MonthView(props) {
        _classCallCheck(this, MonthView);

        var _this = _possibleConstructorReturn(this, (MonthView.__proto__ || Object.getPrototypeOf(MonthView)).call(this, props));

        var date = props.date ? moment(_util2.default.toDate(props.date)) : null;
        var maxDate = props.maxDate ? moment(_util2.default.toDate(props.maxDate)) : null;
        var minDate = props.minDate ? moment(_util2.default.toDate(props.minDate)) : null;
        _this.state = {
            date: date,
            maxDate: maxDate,
            minDate: minDate
        };
        return _this;
    }

    _createClass(MonthView, [{
        key: 'render',
        value: function render() {
            var currentDate = this.props.date.format('YYYY');
            var months = this.getMonth().map(function (item, i) {
                var _class = cx({
                    cell: true,
                    current: item.curr,
                    disabled: item.disabled,
                    month: true
                });
                return React.createElement(_cell2.default, { classes: _class, key: i, value: item.label });
            });
            return React.createElement(
                'div',
                { className: styles['months-view'] },
                React.createElement(_viewHeader2.default, { data: currentDate, next: this.next.bind(this), prev: this.prev.bind(this), titleAction: this.props.nextView }),
                React.createElement(
                    'div',
                    { onClick: this.cellClick.bind(this) },
                    months
                )
            );
        }
    }, {
        key: 'cellClick',
        value: function cellClick(e) {
            var month = e.target.innerHTML;
            if (this.checkIfMonthDisabled(month)) {
                return;
            }
            var date = this.props.date.clone().month(month);
            this.props.prevView(date);
        }
    }, {
        key: 'checkIfMonthDisabled',
        value: function checkIfMonthDisabled(month) {
            var now = this.props.date;
            return now.clone().month(month).endOf('month').isBefore(this.props.minDate, 'day') || now.clone().month(month).startOf('month').isAfter(this.props.maxDate, 'day');
        }
    }, {
        key: 'getMonth',
        value: function getMonth() {
            var _this2 = this;

            var month = this.props.date.month();
            return moment.monthsShort().map(function (item, i) {
                return {
                    curr: i === month,
                    disabled: _this2.checkIfMonthDisabled(i),
                    label: item
                };
            });
        }
    }, {
        key: 'next',
        value: function next() {
            var nextDate = this.props.date.clone().add(1, 'years');
            if (this.props.maxDate && nextDate.isAfter(this.props.maxDate, 'day')) {
                nextDate = this.props.maxDate;
            }
            this.props.prevView(nextDate, 'next');
            // this.props.setDate(nextDate);
        }
    }, {
        key: 'prev',
        value: function prev() {
            var prevDate = this.props.date.clone().subtract(1, 'years');
            if (this.props.minDate && prevDate.isBefore(this.props.minDate, 'day')) {
                prevDate = this.props.minDate;
            }
            this.props.prevView(prevDate, 'prv');
            // this.props.setDate(prevDate);
        }
    }]);

    return MonthView;
}(React.Component);

exports.default = MonthView;

MonthView.propTypes = {
    date: React.PropTypes.object.isRequired,
    maxDate: React.PropTypes.any,
    minDate: React.PropTypes.any,
    nextView: React.PropTypes.func
};

},{"./cell":89,"./style.less":93,"./util":94,"./view-header":95,"mdc-classnames":"mdc-classnames","moment":"moment","moment-range":"moment-range","react":"react"}],93:[function(require,module,exports){
module.exports = {"input-calendar":"neptune_input-calendar_1czd5","input-calendar-wrapper":"neptune_input-calendar-wrapper_1czd5","input-calendar-field":"neptune_input-calendar-field_1czd5","calendar-icon":"neptune_calendar-icon_1czd5","days-view":"neptune_days-view_1czd5","months-view":"neptune_months-view_1czd5","years-view":"neptune_years-view_1czd5","cell":"neptune_cell_1czd5","current":"neptune_current_1czd5","day":"neptune_day_1czd5","prev":"neptune_prev_1czd5","next":"neptune_next_1czd5","month":"neptune_month_1czd5","year":"neptune_year_1czd5","days-title":"neptune_days-title_1czd5","navigation-title":"neptune_navigation-title_1czd5","navigation-title-wrapper":"neptune_navigation-title-wrapper_1czd5","icon-wrapper":"neptune_icon-wrapper_1czd5","icon":"neptune_icon_1czd5","today-btn":"neptune_today-btn_1czd5","icon-style":"neptune_icon-style_1czd5","today":"neptune_today_1czd5"}
},{}],94:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
var _keyDownViewHelper = [{
    exit: true,
    next: true,
    prev: false,
    unit: 'day',
    upDown: 7
}, {
    next: true,
    prev: true,
    unit: 'months',
    upDown: 3
}, {
    next: false,
    prev: true,
    unit: 'years',
    upDown: 3
}];
var KEYS = {
    backspace: 8,
    down: 40,
    enter: 13,
    esc: 27,
    left: 37,
    right: 39,
    up: 38
};
exports.default = {
    toDate: function toDate(date) {
        return date instanceof Date ? date : new Date(date);
    },
    keyDownActions: function keyDownActions(code) {
        var _viewHelper = _keyDownViewHelper[this.state.currentView];
        var unit = _viewHelper.unit;
        switch (code) {
            case KEYS.left:
                this.setDate(this.state.date.subtract(1, unit));
                break;
            case KEYS.right:
                this.setDate(this.state.date.add(1, unit));
                break;
            case KEYS.up:
                this.setDate(this.state.date.subtract(_viewHelper.upDown, unit));
                break;
            case KEYS.down:
                this.setDate(this.state.date.add(_viewHelper.upDown, unit));
                break;
            case KEYS.enter:
                if (_viewHelper.prev) {
                    this.prevView(this.state.date);
                }
                if (_viewHelper.exit) {
                    this.setState({ isVisible: false });
                }
                break;
            case KEYS.esc:
                this.setState({ isVisible: false });
                break;
            default:
                break;
        }
    }
};

},{}],95:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var styles = require('./style.less');

var ViewHeader = function (_React$Component) {
    _inherits(ViewHeader, _React$Component);

    function ViewHeader(props, context) {
        _classCallCheck(this, ViewHeader);

        var _this = _possibleConstructorReturn(this, (ViewHeader.__proto__ || Object.getPrototypeOf(ViewHeader)).call(this, props, context));

        var prev = props.prev;
        var next = props.next;
        var titleAction = props.titleAction;
        var data = props.data;
        _this.state = {
            prev: prev,
            next: next,
            titleAction: titleAction,
            data: data
        };
        return _this;
    }

    _createClass(ViewHeader, [{
        key: 'render',
        value: function render() {
            return React.createElement(
                'div',
                { className: styles['navigation-title-wrapper'] },
                React.createElement(
                    'span',
                    { className: styles['icon-style'], onClick: this.props.prev },
                    '<'
                ),
                React.createElement(
                    'span',
                    { className: styles['navigation-title'], onClick: this.props.titleAction },
                    this.props.data
                ),
                React.createElement(
                    'span',
                    { className: styles['icon-style'], onClick: this.props.next },
                    '>'
                )
            );
        }
    }]);

    return ViewHeader;
}(React.Component);

exports.default = ViewHeader;

ViewHeader.propTypes = {
    data: React.PropTypes.any,
    next: React.PropTypes.func,
    prev: React.PropTypes.func,
    titleAction: React.PropTypes.func
};

},{"./style.less":93,"react":"react"}],96:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _cell = require('./cell');

var _cell2 = _interopRequireDefault(_cell);

var _viewHeader = require('./view-header');

var _viewHeader2 = _interopRequireDefault(_viewHeader);

var _mdcClassnames = require('mdc-classnames');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable react/jsx-no-bind */

var moment = require('moment');
require('moment-range');

var styles = require('./style.less');
var cx = _mdcClassnames.setCssModule.bind(styles);

var YearsView = function (_React$Component) {
    _inherits(YearsView, _React$Component);

    function YearsView(props) {
        _classCallCheck(this, YearsView);

        var _this = _possibleConstructorReturn(this, (YearsView.__proto__ || Object.getPrototypeOf(YearsView)).call(this, props));

        _this.state = { years: [] };
        return _this;
    }

    _createClass(YearsView, [{
        key: 'render',
        value: function render() {
            var years = this.state.years;
            var currYear = this.props.date.year();
            var _class = void 0;
            var yearsCells = years.map(function (item, i) {
                _class = cx({
                    cell: true,
                    current: item.label === currYear,
                    disabled: item.disabled,
                    year: true
                });
                return React.createElement(_cell2.default, { value: item.label, classes: _class, key: i });
            });
            var currentDate = [years[0].label, years[years.length - 1].label].join('-');
            return React.createElement(
                'div',
                { className: styles['years-view'] },
                React.createElement(_viewHeader2.default, { data: currentDate, next: this.next.bind(this), prev: this.prev.bind(this) }),
                React.createElement(
                    'div',
                    { onClick: this.cellClick.bind(this) },
                    yearsCells
                )
            );
        }
    }, {
        key: 'componentWillMount',
        value: function componentWillMount() {
            this.getYears();
        }
    }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps() {
            this.getYears();
        }
    }, {
        key: 'cellClick',
        value: function cellClick(e) {
            var year = parseInt(e.target.innerHTML, 10);
            var date = this.props.date.clone().year(year);
            if (this.checkIfYearDisabled(date)) {
                return;
            }
            this.props.prevView(date);
        }
    }, {
        key: 'checkIfYearDisabled',
        value: function checkIfYearDisabled(year) {
            return year.clone().endOf('year').isBefore(this.props.minDate, 'day') || year.clone().startOf('year').isAfter(this.props.maxDate, 'day');
        }
    }, {
        key: 'getYears',
        value: function getYears() {
            var _this2 = this;

            var now = this.props.date;
            var start = now.clone().subtract(5, 'year');
            var end = now.clone().add(6, 'year');
            var currYear = now.year();
            var items = [];
            var inRange = this.rangeCheck(currYear);
            var years = this.state.years;

            if (years.length > 0 && inRange) {
                return years;
            }
            moment.range(start, end).by('years', function (year) {
                items.push({
                    curr: currYear === year.year(),
                    disabled: _this2.checkIfYearDisabled(year),
                    label: year.format('YYYY')
                });
            });
            this.setState({ years: items });
            return items;
        }
    }, {
        key: 'next',
        value: function next() {
            var nextDate = this.props.date.clone().add(10, 'years');
            if (this.props.maxDate && nextDate.isAfter(this.props.maxDate, 'day')) {
                nextDate = this.props.maxDate;
            }
            this.props.prevView(nextDate, 'next');
        }
    }, {
        key: 'prev',
        value: function prev() {
            var prevDate = this.props.date.clone().subtract(10, 'years');
            if (this.props.minDate && prevDate.isBefore(this.props.minDate, 'day')) {
                prevDate = this.props.minDate;
            }
            this.props.prevView(prevDate, 'prv');
        }
    }, {
        key: 'rangeCheck',
        value: function rangeCheck(currYear) {
            var years = this.state.years;

            if (years.length === 0) {
                return false;
            }
            return years[0].label <= currYear && years[years.length - 1].label >= currYear;
        }
    }]);

    return YearsView;
}(React.Component);

exports.default = YearsView;

YearsView.propTypes = {
    changeView: React.PropTypes.func,
    date: React.PropTypes.object,
    maxDate: React.PropTypes.any,
    minDate: React.PropTypes.any
};

},{"./cell":89,"./style.less":93,"./view-header":95,"mdc-classnames":"mdc-classnames","moment":"moment","moment-range":"moment-range","react":"react"}],97:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _reactDom = require('react-dom');

var ReactDOM = _interopRequireWildcard(_reactDom);

var _mdcClassnames = require('mdc-classnames');

var _index = require('../Icon/index');

var _index2 = _interopRequireDefault(_index);

var _EventListener = require('../Popover/EventListener');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var styles = require('./style.less');
var cx = _mdcClassnames.setCssModule.bind(styles);

var Drawer = function (_React$Component) {
    _inherits(Drawer, _React$Component);

    function Drawer(props) {
        _classCallCheck(this, Drawer);

        var _this = _possibleConstructorReturn(this, (Drawer.__proto__ || Object.getPrototypeOf(Drawer)).call(this, props));

        _this.handleCloseClick = _this.handleCloseClick.bind(_this);
        _this.handleRootClose = _this.handleRootClose.bind(_this);
        _this.setRefNode = _this.setRefNode.bind(_this);
        return _this;
    }

    _createClass(Drawer, [{
        key: 'render',
        value: function render() {
            var paddingWidth = 60;
            var style = _defineProperty({
                transform: 'translate(' + (this.props.width + paddingWidth) + 'px, 0)',
                transition: 'transform 500ms',
                width: this.props.width + paddingWidth
            }, 'transitionTimingFunction', 'cubic-bezier (0.67,0.16,0.56,0.85)');
            return React.createElement(
                'div',
                { ref: this.setRefNode, className: cx('Drawer', this.props.className), style: style },
                React.createElement(_EventListener.EventListener, { eventName: 'click', onEvent: this.handleRootClose }),
                React.createElement(
                    'div',
                    { className: cx('top'), onClick: this.handleCloseClick },
                    React.createElement(
                        'div',
                        { className: styles.close },
                        React.createElement(_index2.default, { icon: 'close' })
                    )
                ),
                React.createElement(
                    'div',
                    { className: styles.content },
                    React.createElement(
                        'div',
                        { className: cx('titleBlock') },
                        React.createElement(
                            'span',
                            { className: cx('title', styles['Title-Section-Secondary']) },
                            this.props.title
                        )
                    ),
                    this.props.children
                )
            );
        }
    }, {
        key: 'setRefNode',
        value: function setRefNode(node) {
            this.x = node;
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            var drawer = ReactDOM.findDOMNode(this.x);
            setTimeout(function () {
                drawer.style.transform = 'translate(0, 0)';
            }, 100);
        }
    }, {
        key: 'handleCloseClick',
        value: function handleCloseClick() {
            var _this2 = this;

            var paddingWidth = 60;
            var drawer = ReactDOM.findDOMNode(this.x);
            setTimeout(function () {
                drawer.style.transition = 'transform 250ms';
                drawer.style['transition-timing-function'] = 'cubic-bezier (0.67,0.16,0.56,0.85)';
                drawer.style.transform = 'translate(' + (_this2.props.width + paddingWidth) + 'px, 0)';
            }, paddingWidth);

            var self = this;
            if (self.props.onRequestClose) {
                setTimeout(function () {
                    self.props.onRequestClose();
                }, 300);
            }
        }
    }, {
        key: 'handleRootClose',
        value: function handleRootClose(e) {
            var drawer = ReactDOM.findDOMNode(this.x);
            if (!drawer.contains(e.target)) {
                this.handleCloseClick();
            }
        }
    }]);

    return Drawer;
}(React.Component);

exports.default = Drawer;

Drawer.propTypes = {
    children: React.PropTypes.element,
    className: React.PropTypes.node,
    onRequestClose: React.PropTypes.func,
    title: React.PropTypes.string,
    width: React.PropTypes.number
};

Drawer.defaultProps = {
    width: 300
};

},{"../Icon/index":134,"../Popover/EventListener":175,"./style.less":98,"mdc-classnames":"mdc-classnames","react":"react","react-dom":"react-dom"}],98:[function(require,module,exports){
module.exports = {"Title-Page":"neptune_Title-Page_1ep49","Title-Page-Light":"neptune_Title-Page-Light_1ep49","Title-Section-Primary":"neptune_Title-Section-Primary_1ep49","Title-Section-Primary-Light":"neptune_Title-Section-Primary-Light_1ep49","TITLE-SUBTITLE":"neptune_TITLE-SUBTITLE_1ep49","Title-Section-Secondary":"neptune_Title-Section-Secondary_1ep49","TITLE-MODULE":"neptune_TITLE-MODULE_1ep49","LABEL-STANDARD":"neptune_LABEL-STANDARD_1ep49","LABEL-STANDARD-SEMIBOLD":"neptune_LABEL-STANDARD-SEMIBOLD_1ep49","LABEL-ATTRIBUTION":"neptune_LABEL-ATTRIBUTION_1ep49","LABEL-ATTRIBUTION-MA":"neptune_LABEL-ATTRIBUTION-MA_1ep49","LABEL-ATTRIBUTION-MIS":"neptune_LABEL-ATTRIBUTION-MIS_1ep49","Label-Footnote":"neptune_Label-Footnote_1ep49","Rating":"neptune_Rating_1ep49","Header-Primary":"neptune_Header-Primary_1ep49","Body-Primary":"neptune_Body-Primary_1ep49","Header-Secondary":"neptune_Header-Secondary_1ep49","Header-Secondary-Bold":"neptune_Header-Secondary-Bold_1ep49","Body-Secondary":"neptune_Body-Secondary_1ep49","TABLE-SECTION":"neptune_TABLE-SECTION_1ep49","Header-Tertiary":"neptune_Header-Tertiary_1ep49","Header-Tertiary-Bold":"neptune_Header-Tertiary-Bold_1ep49","Body-Tertiary":"neptune_Body-Tertiary_1ep49","Body-Tertiary-Med":"neptune_Body-Tertiary-Med_1ep49","Body-Text-Prompt":"neptune_Body-Text-Prompt_1ep49","Link-DkBlue":"neptune_Link-DkBlue_1ep49","LINK-GOLD":"neptune_LINK-GOLD_1ep49","LINK-GREY":"neptune_LINK-GREY_1ep49","LABEL-SIDENAV-TITLE":"neptune_LABEL-SIDENAV-TITLE_1ep49","MIS-BLUE":"neptune_MIS-BLUE_1ep49","MA-BLUE":"neptune_MA-BLUE_1ep49","MOODYS-BLUE":"neptune_MOODYS-BLUE_1ep49","HIGHLIGHT-BLUE":"neptune_HIGHLIGHT-BLUE_1ep49","GOLD":"neptune_GOLD_1ep49","GREY-1":"neptune_GREY-1_1ep49","GREY-2":"neptune_GREY-2_1ep49","GREY-3":"neptune_GREY-3_1ep49","GREY-4":"neptune_GREY-4_1ep49","BLACK":"neptune_BLACK_1ep49","RED":"neptune_RED_1ep49","GREEN":"neptune_GREEN_1ep49","icon_down_arrow":"neptune_icon_down_arrow_1ep49","icon_up_arrow":"neptune_icon_up_arrow_1ep49","icon_warning_icon":"neptune_icon_warning_icon_1ep49","icon_select_arrows":"neptune_icon_select_arrows_1ep49","icon_triangle_down":"neptune_icon_triangle_down_1ep49","icon_triangle_up":"neptune_icon_triangle_up_1ep49","icon_x_icon":"neptune_icon_x_icon_1ep49","icon_right_arrow":"neptune_icon_right_arrow_1ep49","MIS-BLUE-FONT":"neptune_MIS-BLUE-FONT_1ep49","MIS-BLUE-BG":"neptune_MIS-BLUE-BG_1ep49","MIS-BLUE-BORDER":"neptune_MIS-BLUE-BORDER_1ep49","MA-BLUE-FONT":"neptune_MA-BLUE-FONT_1ep49","MA-BLUE-BG":"neptune_MA-BLUE-BG_1ep49","MA-BLUE-BORDER":"neptune_MA-BLUE-BORDER_1ep49","MOODYS-BLUE-FONT":"neptune_MOODYS-BLUE-FONT_1ep49","MOODYS-BLUE-BG":"neptune_MOODYS-BLUE-BG_1ep49","MOODYS-BLUE-BORDER":"neptune_MOODYS-BLUE-BORDER_1ep49","HIGHLIGHT-BLUE-FONT":"neptune_HIGHLIGHT-BLUE-FONT_1ep49","HIGHLIGHT-BLUE-BG":"neptune_HIGHLIGHT-BLUE-BG_1ep49","HIGHLIGHT-BLUE-BORDER":"neptune_HIGHLIGHT-BLUE-BORDER_1ep49","GOLD-FONT":"neptune_GOLD-FONT_1ep49","GOLD-BG":"neptune_GOLD-BG_1ep49","GOLD-BORDER":"neptune_GOLD-BORDER_1ep49","GREY-1-FONT":"neptune_GREY-1-FONT_1ep49","GREY-1-BG":"neptune_GREY-1-BG_1ep49","GREY-1-BORDER":"neptune_GREY-1-BORDER_1ep49","GREY-2-FONT":"neptune_GREY-2-FONT_1ep49","GREY-2-BG":"neptune_GREY-2-BG_1ep49","GREY-2-BORDER":"neptune_GREY-2-BORDER_1ep49","GREY-3-FONT":"neptune_GREY-3-FONT_1ep49","GREY-3-BG":"neptune_GREY-3-BG_1ep49","GREY-3-BORDER":"neptune_GREY-3-BORDER_1ep49","GREY-4-FONT":"neptune_GREY-4-FONT_1ep49","GREY-4-BG":"neptune_GREY-4-BG_1ep49","GREY-4-BORDER":"neptune_GREY-4-BORDER_1ep49","BLACK-FONT":"neptune_BLACK-FONT_1ep49","BLACK-BG":"neptune_BLACK-BG_1ep49","BLACK-BORDER":"neptune_BLACK-BORDER_1ep49","RED-FONT":"neptune_RED-FONT_1ep49","RED-BG":"neptune_RED-BG_1ep49","RED-BORDER":"neptune_RED-BORDER_1ep49","GREEN-FONT":"neptune_GREEN-FONT_1ep49","GREEN-BG":"neptune_GREEN-BG_1ep49","GREEN-BORDER":"neptune_GREEN-BORDER_1ep49","Drawer":"neptune_Drawer_1ep49","top":"neptune_top_1ep49","titleBlock":"neptune_titleBlock_1ep49","title":"neptune_title_1ep49","close":"neptune_close_1ep49","close2":"neptune_close2_1ep49","content":"neptune_content_1ep49","footer":"neptune_footer_1ep49","seperator":"neptune_seperator_1ep49","button":"neptune_button_1ep49"}
},{}],99:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _lib = require('./lib');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var styles = {
    row: {
        display: 'flex',
        minHeight: '35px',
        flexDirection: 'row',
        borderTop: '2px solid rgba(216, 216, 216, 0.75)',
        borderBottom: '1px solid rgba(216, 216, 216, 0.75)'
    },
    left: {
        display: 'flex',
        flex: 2,
        flexDirection: 'row',
        alignItems: 'center',
        justifyContent: 'center',
        fontSize: '14px'
    },
    right: {
        display: 'flex',
        flex: 1,
        flexDirection: 'row',
        borderLeft: '1px solid rgba(216, 216, 216, 0.75)'
    },
    calculateAction: {
        display: 'flex',
        flex: 6,
        alignItems: 'center',
        justifyContent: 'center'
    },
    value: {
        display: 'flex',
        flex: 13,
        justifyContent: 'flex-end',
        alignItems: 'center',
        borderLeft: '1px solid rgba(216, 216, 216, 0.75)',
        borderRight: '1px solid rgba(216, 216, 216, 0.75)'
    },
    filing: {
        display: 'flex',
        alignItems: 'center',
        flex: 5
    }
};

var DrillDownFooter = function (_Component) {
    _inherits(DrillDownFooter, _Component);

    function DrillDownFooter() {
        _classCallCheck(this, DrillDownFooter);

        return _possibleConstructorReturn(this, (DrillDownFooter.__proto__ || Object.getPrototypeOf(DrillDownFooter)).apply(this, arguments));
    }

    _createClass(DrillDownFooter, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'div',
                { style: styles.row },
                _react2.default.createElement(
                    'div',
                    { style: styles.left },
                    this.props.name
                ),
                _react2.default.createElement(
                    'div',
                    { style: styles.right },
                    _react2.default.createElement(
                        'div',
                        { style: styles.calculateAction },
                        (0, _lib.mapCalculateToIcon)(this.props.calculateAction)
                    ),
                    _react2.default.createElement(
                        'div',
                        { style: styles.value },
                        _react2.default.createElement(
                            'p',
                            { style: { margin: '0 10px 0 10px', fontSize: '13px' } },
                            this.props.value
                        )
                    ),
                    _react2.default.createElement('div', { style: styles.filing })
                )
            );
        }
    }]);

    return DrillDownFooter;
}(_react.Component);

DrillDownFooter.defaultProps = {
    name: null,
    calculateAction: 'equal',
    value: null
};

exports.default = DrillDownFooter;

},{"./lib":104,"react":"react"}],100:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var styles = {
    row: {
        display: 'flex',
        minHeight: '28px',
        flexDirection: 'row',
        borderTop: '1px solid rgba(216, 216, 216, 0.75)'
    },
    left: {
        display: 'flex',
        flex: 2,
        flexDirection: 'row',
        alignItems: 'center',
        textTransform: 'uppercase'
    },
    right: {
        display: 'flex',
        flex: 1,
        borderLeft: '1px solid rgba(216, 216, 216, 0.75)',
        flexDirection: 'row'
    },
    currency: {
        display: 'flex',
        flex: '19 1 1px',
        alignItems: 'center',
        justifyContent: 'center',
        textTransform: 'uppercase',
        borderRight: '1px solid rgba(216, 216, 216, 0.75)',
        fontSize: '10px',
        letterSpacing: '1px'
    },
    filing: {
        display: 'flex',
        flex: 5,
        textTransform: 'uppercase',
        alignItems: 'center'
    },
    collapse: {
        color: 'rgb(205,156,84)',
        paddingLeft: '20px',
        paddingRight: '20px',
        fontSize: '10px',
        letterSpacing: '1px',
        cursor: 'pointer'
    }
};

var DrillDownHeader = function (_Component) {
    _inherits(DrillDownHeader, _Component);

    function DrillDownHeader(props) {
        _classCallCheck(this, DrillDownHeader);

        var _this = _possibleConstructorReturn(this, (DrillDownHeader.__proto__ || Object.getPrototypeOf(DrillDownHeader)).call(this, props));

        _this.onClick = _this.onClick.bind(_this);
        return _this;
    }

    _createClass(DrillDownHeader, [{
        key: 'onClick',
        value: function onClick() {
            this.props.onCollapse();
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'div',
                { style: styles.row },
                _react2.default.createElement(
                    'div',
                    { style: styles.left },
                    _react2.default.createElement(
                        'div',
                        { style: styles.collapse, onClick: this.onClick },
                        this.props.collapsed ? 'uncollapse all' : 'collapse all'
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { style: styles.right },
                    _react2.default.createElement(
                        'div',
                        { style: styles.currency },
                        this.props.currency
                    ),
                    _react2.default.createElement(
                        'div',
                        { style: styles.filing },
                        _react2.default.createElement(
                            'div',
                            { style: { paddingLeft: '10px', fontSize: '10px', letterSpacing: '1px' } },
                            'filing'
                        )
                    )
                )
            );
        }
    }]);

    return DrillDownHeader;
}(_react.Component);

DrillDownHeader.defaultProps = {
    currency: 'USD/BILLIONS',
    onCollapse: function onCollapse() {},
    collapsed: false
};

exports.default = DrillDownHeader;

},{"react":"react"}],101:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _lib = require('./lib');

var _Spinner = require('../Spinner');

var _Spinner2 = _interopRequireDefault(_Spinner);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var styles = {
    drillable: {
        display: 'flex',
        flexDirection: 'row',
        minHeight: '35px',
        borderBottom: '1px solid rgba(216, 216, 216, 0.75)'
    },
    name: {
        marginLeft: '10px',
        color: '#191919',
        fontSize: '14px'
    },
    left: {
        display: 'flex',
        flex: 2,
        flexDirection: 'row',
        alignItems: 'center'
    },
    right: {
        display: 'flex',
        flex: 1,
        flexDirection: 'row',
        borderLeft: '1px solid rgba(216, 216, 216, 0.75)'
    },
    calculateAction: {
        display: 'flex',
        flex: 6,
        alignItems: 'center',
        justifyContent: 'center'
    },
    value: {
        display: 'flex',
        flex: 13,
        justifyContent: 'flex-end',
        alignItems: 'center',
        borderLeft: '1px solid rgba(216, 216, 216, 0.75)',
        borderRight: '1px solid rgba(216, 216, 216, 0.75)'
    },
    filing: {
        display: 'flex',
        alignItems: 'center',
        flex: 5
    },
    children: {
        display: 'flex',
        flexDirection: 'column'
    }
};

var DefaultLoadingView = function (_Component) {
    _inherits(DefaultLoadingView, _Component);

    function DefaultLoadingView() {
        _classCallCheck(this, DefaultLoadingView);

        return _possibleConstructorReturn(this, (DefaultLoadingView.__proto__ || Object.getPrototypeOf(DefaultLoadingView)).apply(this, arguments));
    }

    _createClass(DefaultLoadingView, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'div',
                { style: { display: 'flex', flex: 1, padding: '20px', alignItems: 'center', justifyContent: 'center' } },
                _react2.default.createElement(_Spinner2.default, { size: 50, speed: 1.6 })
            );
        }
    }]);

    return DefaultLoadingView;
}(_react.Component);

var Drillable = function (_Component2) {
    _inherits(Drillable, _Component2);

    function Drillable(props) {
        _classCallCheck(this, Drillable);

        var _this2 = _possibleConstructorReturn(this, (Drillable.__proto__ || Object.getPrototypeOf(Drillable)).call(this, props));

        _this2.state = {
            isDrilled: false,
            child: null,
            loading: false
        };
        _this2.onDrill = _this2.onDrill.bind(_this2);
        return _this2;
    }

    _createClass(Drillable, [{
        key: 'onDrill',
        value: function onDrill() {
            var _this3 = this;

            if (!this.state.child) {
                this.setState({
                    loading: true
                });
                console.log(_typeof(this.props.onDrill()));
                this.props.onDrill().then(function (data) {
                    _this3.setState({
                        child: data,
                        loading: false
                    });
                }).catch(function (err) {
                    console.error(err);
                });
            }
            this.setState({
                isDrilled: !this.state.isDrilled
            });
        }
    }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            if (nextProps.collapse !== this.props.collapse) {
                this.setState({
                    isDrilled: false
                });
            }
        }
        /* eslint-disable */

    }, {
        key: 'render',
        value: function render() {
            var _props = this.props;
            var childType = _props.childType;
            var level = _props.level;
            var value = _props.value;
            var calculateAction = _props.calculateAction;

            var bgColor = void 0;
            if (level === 1) {
                bgColor = '#F0F4FA';
            } else if (level === 2) {
                bgColor = '#FEFDFB';
            } else {
                bgColor = '#fff';
            }
            if (this.props.backgroundColor) {
                bgColor = this.props.backgroundColor;
            }
            return _react2.default.createElement(
                'div',
                { style: styles.container, className: 'Neptune-DrillDown' },
                _react2.default.createElement(
                    'div',
                    { style: Object.assign({}, styles.drillable, { backgroundColor: bgColor }) },
                    _react2.default.createElement(
                        'div',
                        { style: styles.left },
                        _react2.default.createElement(
                            'div',
                            { style: {
                                    marginLeft: level * 20 + 'px',
                                    opacity: childType === "LookBack" ? 0 : 1,
                                    cursor: childType === "LookBack" ? 'default' : 'pointer'
                                }, onClick: childType === "LookBack" ? null : this.onDrill
                            },
                            this.state.isDrilled ? (0, _lib.mapCalculateToIcon)('downArrow') : (0, _lib.mapCalculateToIcon)('rightArrow')
                        ),
                        _react2.default.createElement(
                            'div',
                            { style: styles.name },
                            this.props.name
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { style: styles.right },
                        _react2.default.createElement(
                            'div',
                            { style: styles.calculateAction },
                            calculateAction ? calculateAction : null
                        ),
                        _react2.default.createElement(
                            'div',
                            { style: styles.value },
                            _react2.default.createElement(
                                'p',
                                { style: { margin: '0 10px 0 10px', fontSize: '13px' } },
                                value
                            )
                        ),
                        _react2.default.createElement('div', { style: styles.filing })
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { style: Object.assign({}, styles.children, { display: this.state.isDrilled ? 'flex' : 'none' }) },
                    this.state.child
                ),
                this.state.loading ? this.props.loadingView || null : null
            );
        }
    }]);

    return Drillable;
}(_react.Component);

exports.default = Drillable;

Drillable.defaultProps = {
    //what level is the drillable
    level: 1,
    childType: null,
    onDrill: function onDrill() {},
    name: null,
    value: null,
    // plus, minus, equal, null...
    calculateAction: null,
    // if a drillable need the sum row when drill
    needSum: false,
    filing: null,
    collapse: false,
    loadingView: _react2.default.createElement(DefaultLoadingView, null),
    backgroundColor: null
};

},{"../Spinner":203,"./lib":104,"react":"react"}],102:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

//import { mapCalculateToIcon } from './lib';

var styles = {
    drillableDetailRow: {
        display: 'flex',
        flexDirection: 'row',
        minHeight: '35px',
        borderBottom: '1px solid rgba(216, 216, 216, 0.75)'
    },
    left: {
        display: 'flex',
        flex: 2,
        flexDirection: 'row'
    },
    right: {
        display: 'flex',
        flex: 1,
        flexDirection: 'row'
    },
    rightContainer: {
        display: 'flex',
        flex: 1,
        flexDirection: 'row',
        borderLeft: '1px solid rgba(216, 216, 216, 0.75)'
    },
    calculateAction: {
        display: 'flex',
        flex: 6,
        alignItems: 'center',
        justifyContent: 'center'
    },
    value: {
        display: 'flex',
        flex: 13,
        justifyContent: 'flex-end',
        alignItems: 'center',
        borderLeft: '1px solid rgba(216, 216, 216, 0.75)',
        borderRight: '1px solid rgba(216, 216, 216, 0.75)'
    },
    filing: {
        display: 'flex',
        alignItems: 'center',
        flex: 5
    },
    names: {
        display: 'flex',
        flexDirection: 'column',
        flex: 1
    },
    name: {
        display: 'flex',
        justifyContent: 'center',
        alignItems: 'center',
        textAlign: 'center',
        minHeight: '35px',
        flex: 1.5,
        color: '#444',
        fontSize: '14px',
        padding: '5px'
    },
    description: {
        display: 'flex',
        justifyContent: 'center',
        alignItems: 'center',
        textAlign: 'center',
        flex: 1,
        fontWeight: 'bold',
        fontSize: '14px',
        color: '#191919'
    }
};

var DrillableDetailRow = function (_Component) {
    _inherits(DrillableDetailRow, _Component);

    function DrillableDetailRow() {
        _classCallCheck(this, DrillableDetailRow);

        return _possibleConstructorReturn(this, (DrillableDetailRow.__proto__ || Object.getPrototypeOf(DrillableDetailRow)).apply(this, arguments));
    }

    _createClass(DrillableDetailRow, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var nameSet = this.props.data.map(function (item, index) {
                return _react2.default.createElement(
                    'div',
                    { style: styles.name, key: index },
                    item.name
                );
            });
            var valueSet = this.props.data.map(function (item, index) {
                return _react2.default.createElement(
                    'div',
                    { style: Object.assign({}, styles.right, {
                            borderTop: index !== 0 ? '1px solid rgba(216, 216, 216, 0.75)' : '0px'
                        }), key: index
                    },
                    _this2.props.AVGstyle ? null : _react2.default.createElement(
                        'div',
                        { style: styles.calculateAction },
                        item.calculateAction ? item.calculateAction : null
                    ),
                    _react2.default.createElement(
                        'div',
                        { style: styles.value },
                        _react2.default.createElement(
                            'p',
                            { style: { margin: '0 10px 0 10px', fontSize: '13px' } },
                            item.value
                        )
                    ),
                    _react2.default.createElement(
                        'div',
                        { style: styles.filing },
                        item.filing
                    )
                );
            });
            return _react2.default.createElement(
                'div',
                { style: styles.drillableDetailRow },
                _react2.default.createElement(
                    'div',
                    { style: styles.left },
                    _react2.default.createElement(
                        'div',
                        { style: Object.assign({}, styles.description, {
                                alignItems: this.props.AVGstyle ? 'flex-start' : 'center',
                                marginTop: this.props.AVGstyle ? '12px' : '0',
                                marginLeft: this.props.AVGstyle ? '40px' : '0',
                                justifyContent: this.props.AVGstyle ? 'flex-start' : 'center',
                                textAlign: this.props.AVGstyle ? 'left' : 'center'
                            }) },
                        this.props.description
                    ),
                    _react2.default.createElement(
                        'div',
                        { style: styles.names },
                        nameSet
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { style: styles.rightContainer },
                    this.props.AVGstyle ? _react2.default.createElement(
                        'div',
                        {
                            className: 'DrillDown-AVG-Cal',
                            style: { flex: 6, display: 'flex', justifyContent: 'center', paddingTop: '12px', fontSize: '12px' }
                        },
                        this.props.data[0].calculateAction ? this.props.data[0].calculateAction : null
                    ) : null,
                    _react2.default.createElement(
                        'div',
                        { style: { display: 'flex', flexDirection: 'column', flex: this.props.AVGstyle ? '18 1 2px' : 1 } },
                        valueSet
                    )
                )
            );
        }
    }]);

    return DrillableDetailRow;
}(_react.Component);

DrillableDetailRow.defaultProps = {
    valueCount: 1,
    description: null,
    data: [{
        name: null,
        value: null,
        // plus, minus, equal, null...
        calculateAction: null,
        filing: null
    }],
    AVGstyle: false
};

exports.default = DrillableDetailRow;

},{"react":"react"}],103:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _drillable = require('./drillable');

var _drillable2 = _interopRequireDefault(_drillable);

var _drillableDetailRow = require('./drillableDetailRow');

var _drillableDetailRow2 = _interopRequireDefault(_drillableDetailRow);

var _drillDownHeader = require('./drillDownHeader');

var _drillDownHeader2 = _interopRequireDefault(_drillDownHeader);

var _drillDownFooter = require('./drillDownFooter');

var _drillDownFooter2 = _interopRequireDefault(_drillDownFooter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DrillDown = {
    Drillable: _drillable2.default,
    DrillableDetailRow: _drillableDetailRow2.default,
    DrillDownFooter: _drillDownFooter2.default,
    DrillDownHeader: _drillDownHeader2.default
};

exports.default = DrillDown;

},{"./drillDownFooter":99,"./drillDownHeader":100,"./drillable":101,"./drillableDetailRow":102}],104:[function(require,module,exports){
'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable */
var mapMonetaryToNum = function mapMonetaryToNum(Monetary) {
    //"175892000.00000000"
    var arr = Monetary.split('.');
    var int = arr[0];
    var float = arr[1];
    float = float.substr(0, 2);
    return int + '.' + float;
};

var styles = {
    icon: {
        fontSize: '16px',
        color: '#444',
        textAlign: 'center'
    }
};

var mapCalculateToIcon = function mapCalculateToIcon(type) {
    switch (type) {
        case 'plus':
            return _react2.default.createElement(
                'div',
                { style: Object.assign({}, styles.icon, { fontFamily: 'Whitney Ssm Light' }) },
                '+'
            );
        case 'minus':
            return _react2.default.createElement(
                'div',
                { style: styles.icon },
                '-'
            );
        case 'equal':
            return _react2.default.createElement(
                'div',
                { style: styles.icon },
                '='
            );
        case '/':
            return _react2.default.createElement(
                'div',
                { style: styles.icon },
                '/'
            );
        case '*':
            return _react2.default.createElement(
                'div',
                { style: styles.icon },
                '\xD7'
            );
        case 'rightArrow':
            return _react2.default.createElement(
                'div',
                { style: styles.icon },
                '>'
            );
        case 'downArrow':
            return _react2.default.createElement(
                'div',
                { style: Object.assign({}, styles.icon, { transform: 'rotate(90deg)' }) },
                '>'
            );
        default:
            return null;
    }
};

module.exports = { mapCalculateToIcon: mapCalculateToIcon, mapMonetaryToNum: mapMonetaryToNum };

},{"react":"react"}],105:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reactDom = require('react-dom');

var _mdcClassnames = require('mdc-classnames');

var _index = require('../Label/index');

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var React = require("react");
var PropTypes = React.PropTypes;
var Component = React.Component;

var styles = require('./style.less');
var _ = require('lodash');
var cx = _mdcClassnames.setCssModule.bind(styles);

var DropdownList = function (_Component) {
    _inherits(DropdownList, _Component);

    function DropdownList(props) {
        _classCallCheck(this, DropdownList);

        var _this = _possibleConstructorReturn(this, (DropdownList.__proto__ || Object.getPrototypeOf(DropdownList)).call(this, props));

        _this.selectItem = function (e, item) {
            _this.setState({ selectedItem: item });
            _this.setState({ active: false });
            _this.props.onChange(item.value, _this.props.optionItems);
        };
        _this.selectItem = _this.selectItem.bind(_this);
        _this._onWindowClick = _this._onWindowClick.bind(_this);
        _this._onToggleClick = _this._onToggleClick.bind(_this);
        _this.state = {
            active: false,
            selectedItem: _this.props.optionItems.filter(function (item) {
                return item.selected;
            }) && _this.props.optionItems.filter(function (item) {
                return item.selected;
            })[0] || _this.props.optionItems[0],
            showWidth: '100%'
        };
        return _this;
    }

    _createClass(DropdownList, [{
        key: 'toEllipse',
        value: function toEllipse() {
            var refs = this.refs;
            var list = refs.itemList.children[0].children;
            _.each(list, function (item) {
                var divH = item.offsetHeight;
                var $span = item.children[0];
                var text = $span.innerHTML;
                var words = _.words(text);
                var lastIndex = words.length - 1;
                if (divH < 0) {
                    return;
                }
                while ($span.offsetHeight > divH) {
                    var index = text.lastIndexOf(words[lastIndex]);
                    text = text.substring(0, index);
                    $span.innerHTML = text + '...';
                    lastIndex--;
                }
            });
        }
    }, {
        key: '_adjustHeight',
        value: function _adjustHeight(list) {
            var height = 0;
            for (var i = 0; i < 5 && i < list.length; i++) {
                height += list[i].offsetHeight;
            }
            return height + 2;
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            window.addEventListener('click', this._onWindowClick);
            this.toEllipse();
            // const doc = document;
            var refs = this.refs;
            refs.itemList.style.maxHeight = this._adjustHeight(refs.itemList.children[0].children) + 'px';
            var showWidth = refs.showInput.offsetWidth;
            this.setState({ showWidth: 100 - 15 * 100 / showWidth + '%' });
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate() {
            var refs = this.refs;
            refs.itemList.style.maxHeight = this._adjustHeight(refs.itemList.children[0].children) + 'px';
        }
    }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            if (nextProps.optionItems && this.props.optionItems !== nextProps.optionItems) {
                this.state = {
                    selectedItem: nextProps.optionItems.filter(function (item) {
                        return item.selected;
                    }) && nextProps.optionItems.filter(function (item) {
                        return item.selected;
                    })[0] || nextProps.optionItems[0]
                };
            }
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            window.removeEventListener('click', this._onWindowClick);
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var style = {
                visibility: this.state.active ? 'visible' : 'hidden'
            };
            var customWidth = {};
            var width = this.props.width;
            if (width) {
                style.minWidth = width;
                customWidth.minWidth = width;
                customWidth.width = width;
                if (width >= 285) {
                    style.maxWidth = width;
                } else {
                    style.maxWidth = 285;
                }
            } else {
                style.maxWidth = 285;
            }
            return React.createElement(
                'div',
                { className: cx(styles.container), onClick: this._onToggleClick },
                React.createElement(
                    'ul',
                    { className: styles.dropdown },
                    React.createElement(
                        'li',
                        { className: cx(styles.defaultItem), style: customWidth },
                        React.createElement(
                            'ul',
                            null,
                            React.createElement(
                                'li',
                                { className: styles.pull_left, title: this.state.selectedItem.text, style: { width: this.state.showWidth }, ref: 'showInput' },
                                React.createElement(
                                    _index2.default,
                                    { className: 'Body-Secondary' },
                                    this.state.selectedItem.text
                                )
                            ),
                            React.createElement(
                                'li',
                                { className: styles.pull_right },
                                React.createElement('span', { className: this.state.active ? styles.icon_up_arrow : styles.icon_down_arrow })
                            )
                        )
                    ),
                    React.createElement(
                        'li',
                        { className: styles.itemList, style: style, ref: 'itemList' },
                        React.createElement(
                            'ul',
                            null,
                            this.props.optionItems.map(function (item) {
                                return React.createElement(
                                    'li',
                                    { className: styles.item, onClick: function onClick(e) {
                                            return _this2.selectItem(e, item);
                                        }, key: item.value, title: item.text },
                                    React.createElement(
                                        _index2.default,
                                        { className: 'Body-Secondary' },
                                        item.text
                                    )
                                );
                            })
                        )
                    )
                )
            );
        }
    }, {
        key: 'isActive',
        value: function isActive() {
            return typeof this.props.active === 'boolean' ? this.props.active : this.state.active;
        }
    }, {
        key: 'hide',
        value: function hide() {
            this.setState({
                active: false
            });
            /*
            if (this.props.onHide ){
                this.props.onHide();
            }*/
        }
    }, {
        key: 'show',
        value: function show() {
            this.setState({
                active: true
            });
            /*
            if(this.props.onShow){
                this.props.onShow();
            }
            */
        }
    }, {
        key: '_onWindowClick',
        value: function _onWindowClick(event) {
            var dropdownElement = (0, _reactDom.findDOMNode)(this);

            if (event.target !== dropdownElement && !dropdownElement.contains(event.target) && this.isActive()) {
                this.hide();
            }
        }
    }, {
        key: '_onToggleClick',
        value: function _onToggleClick(event) {
            event.preventDefault();
            // event.stopPropagation();
            if (this.isActive()) {
                this.hide();
            } else {
                this.show();
            }
        }
    }]);

    return DropdownList;
}(Component);

exports.default = DropdownList;

DropdownList.propTypes = {
    active: PropTypes.bool,
    onChange: PropTypes.func,
    optionItems: PropTypes.array,
    width: PropTypes.oneOfType([PropTypes.string, PropTypes.number])
};

},{"../Label/index":136,"./style.less":106,"lodash":"lodash","mdc-classnames":"mdc-classnames","react":"react","react-dom":"react-dom"}],106:[function(require,module,exports){
module.exports = {"Title-Page":"neptune_Title-Page_14vge","Title-Page-Light":"neptune_Title-Page-Light_14vge","Title-Section-Primary":"neptune_Title-Section-Primary_14vge","Title-Section-Primary-Light":"neptune_Title-Section-Primary-Light_14vge","TITLE-SUBTITLE":"neptune_TITLE-SUBTITLE_14vge","Title-Section-Secondary":"neptune_Title-Section-Secondary_14vge","TITLE-MODULE":"neptune_TITLE-MODULE_14vge","LABEL-STANDARD":"neptune_LABEL-STANDARD_14vge","LABEL-STANDARD-SEMIBOLD":"neptune_LABEL-STANDARD-SEMIBOLD_14vge","LABEL-ATTRIBUTION":"neptune_LABEL-ATTRIBUTION_14vge","LABEL-ATTRIBUTION-MA":"neptune_LABEL-ATTRIBUTION-MA_14vge","LABEL-ATTRIBUTION-MIS":"neptune_LABEL-ATTRIBUTION-MIS_14vge","Label-Footnote":"neptune_Label-Footnote_14vge","Rating":"neptune_Rating_14vge","Header-Primary":"neptune_Header-Primary_14vge","Body-Primary":"neptune_Body-Primary_14vge","Header-Secondary":"neptune_Header-Secondary_14vge","Header-Secondary-Bold":"neptune_Header-Secondary-Bold_14vge","Body-Secondary":"neptune_Body-Secondary_14vge","TABLE-SECTION":"neptune_TABLE-SECTION_14vge","Header-Tertiary":"neptune_Header-Tertiary_14vge","Header-Tertiary-Bold":"neptune_Header-Tertiary-Bold_14vge","Body-Tertiary":"neptune_Body-Tertiary_14vge","Body-Tertiary-Med":"neptune_Body-Tertiary-Med_14vge","Body-Text-Prompt":"neptune_Body-Text-Prompt_14vge","Link-DkBlue":"neptune_Link-DkBlue_14vge","LINK-GOLD":"neptune_LINK-GOLD_14vge","LINK-GREY":"neptune_LINK-GREY_14vge","LABEL-SIDENAV-TITLE":"neptune_LABEL-SIDENAV-TITLE_14vge","MIS-BLUE":"neptune_MIS-BLUE_14vge","MA-BLUE":"neptune_MA-BLUE_14vge","MOODYS-BLUE":"neptune_MOODYS-BLUE_14vge","HIGHLIGHT-BLUE":"neptune_HIGHLIGHT-BLUE_14vge","GOLD":"neptune_GOLD_14vge","GREY-1":"neptune_GREY-1_14vge","GREY-2":"neptune_GREY-2_14vge","GREY-3":"neptune_GREY-3_14vge","GREY-4":"neptune_GREY-4_14vge","BLACK":"neptune_BLACK_14vge","RED":"neptune_RED_14vge","GREEN":"neptune_GREEN_14vge","icon_down_arrow":"neptune_icon_down_arrow_14vge","icon_up_arrow":"neptune_icon_up_arrow_14vge","icon_warning_icon":"neptune_icon_warning_icon_14vge","icon_select_arrows":"neptune_icon_select_arrows_14vge","icon_triangle_down":"neptune_icon_triangle_down_14vge","icon_triangle_up":"neptune_icon_triangle_up_14vge","icon_x_icon":"neptune_icon_x_icon_14vge","icon_right_arrow":"neptune_icon_right_arrow_14vge","MIS-BLUE-FONT":"neptune_MIS-BLUE-FONT_14vge","MIS-BLUE-BG":"neptune_MIS-BLUE-BG_14vge","MIS-BLUE-BORDER":"neptune_MIS-BLUE-BORDER_14vge","MA-BLUE-FONT":"neptune_MA-BLUE-FONT_14vge","MA-BLUE-BG":"neptune_MA-BLUE-BG_14vge","MA-BLUE-BORDER":"neptune_MA-BLUE-BORDER_14vge","MOODYS-BLUE-FONT":"neptune_MOODYS-BLUE-FONT_14vge","MOODYS-BLUE-BG":"neptune_MOODYS-BLUE-BG_14vge","MOODYS-BLUE-BORDER":"neptune_MOODYS-BLUE-BORDER_14vge","HIGHLIGHT-BLUE-FONT":"neptune_HIGHLIGHT-BLUE-FONT_14vge","HIGHLIGHT-BLUE-BG":"neptune_HIGHLIGHT-BLUE-BG_14vge","HIGHLIGHT-BLUE-BORDER":"neptune_HIGHLIGHT-BLUE-BORDER_14vge","GOLD-FONT":"neptune_GOLD-FONT_14vge","GOLD-BG":"neptune_GOLD-BG_14vge","GOLD-BORDER":"neptune_GOLD-BORDER_14vge","GREY-1-FONT":"neptune_GREY-1-FONT_14vge","GREY-1-BG":"neptune_GREY-1-BG_14vge","GREY-1-BORDER":"neptune_GREY-1-BORDER_14vge","GREY-2-FONT":"neptune_GREY-2-FONT_14vge","GREY-2-BG":"neptune_GREY-2-BG_14vge","GREY-2-BORDER":"neptune_GREY-2-BORDER_14vge","GREY-3-FONT":"neptune_GREY-3-FONT_14vge","GREY-3-BG":"neptune_GREY-3-BG_14vge","GREY-3-BORDER":"neptune_GREY-3-BORDER_14vge","GREY-4-FONT":"neptune_GREY-4-FONT_14vge","GREY-4-BG":"neptune_GREY-4-BG_14vge","GREY-4-BORDER":"neptune_GREY-4-BORDER_14vge","BLACK-FONT":"neptune_BLACK-FONT_14vge","BLACK-BG":"neptune_BLACK-BG_14vge","BLACK-BORDER":"neptune_BLACK-BORDER_14vge","RED-FONT":"neptune_RED-FONT_14vge","RED-BG":"neptune_RED-BG_14vge","RED-BORDER":"neptune_RED-BORDER_14vge","GREEN-FONT":"neptune_GREEN-FONT_14vge","GREEN-BG":"neptune_GREEN-BG_14vge","GREEN-BORDER":"neptune_GREEN-BORDER_14vge","container":"neptune_container_14vge","dropdown":"neptune_dropdown_14vge","defaultItem":"neptune_defaultItem_14vge","itemList":"neptune_itemList_14vge","item":"neptune_item_14vge","pull_left":"neptune_pull_left_14vge","pull_right":"neptune_pull_right_14vge"}
},{}],107:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Button = require("./../Button");

var _Button2 = _interopRequireDefault(_Button);

var _ButtonToolbar = require("./../ButtonToolbar");

var _ButtonToolbar2 = _interopRequireDefault(_ButtonToolbar);

var _CheckBox = require("./../CheckBox");

var _CheckBox2 = _interopRequireDefault(_CheckBox);

var _Icon = require("./../Icon");

var _Icon2 = _interopRequireDefault(_Icon);

var _reactDom = require("react-dom");

var _mdcClassnames = require("mdc-classnames");

var _index = require("../Label/index");

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var React = require("react");
var ReactDOM = require("react-dom");
var PropTypes = React.PropTypes;
var Component = React.Component;

var styles = require('./style.less');
var _ = require('lodash');
var cx = _mdcClassnames.setCssModule.bind(styles);

var Dropdown = function (_Component) {
    _inherits(Dropdown, _Component);

    function Dropdown(props) {
        _classCallCheck(this, Dropdown);

        var _this = _possibleConstructorReturn(this, (Dropdown.__proto__ || Object.getPrototypeOf(Dropdown)).call(this, props));

        _this.state = {
            active: false,
            selectAll: false,
            showWidth: '100%'
        };

        if (_this.props.multiselect) {
            _this.state.checkItems = _.cloneDeep(_this.props.optionItems); // eslint-disable-line react/no-direct-mutation-state
        } else {
            var selectedItems = _this.props.optionItems.filter(function (item) {
                return item.selected;
            });
            _this.state.activeItem = selectedItems[0] || _this.props.optionItems[0]; // eslint-disable-line react/no-direct-mutation-state
        }

        _this.checkItem = _this.checkItem.bind(_this);
        _this.selectAll = _this.selectAll.bind(_this);
        _this.selectItem = _this.selectItem.bind(_this);
        _this.onWindowClick = _this.onWindowClick.bind(_this);
        _this.onToggleClick = _this.onToggleClick.bind(_this);
        _this.handleOkClick = _this.handleOkClick.bind(_this);
        _this.handleCancelClick = _this.handleCancelClick.bind(_this);
        return _this;
    }

    _createClass(Dropdown, [{
        key: "toEllipse",
        value: function toEllipse() {
            var refs = this.refs;
            var list = refs.itemList.children;
            _.each(list, function (item) {
                var divH = item.offsetHeight;
                var $span = item.children[0];
                var text = $span.innerHTML;
                var words = _.words(text);
                var lastIndex = words.length - 1;
                if (divH < 0) {
                    return;
                }
                while ($span.offsetHeight > divH) {
                    var index = text.lastIndexOf(words[lastIndex]);
                    text = text.substring(0, index);
                    $span.innerHTML = text + "...";
                    lastIndex--;
                }
            });
        }
    }, {
        key: "adjustStylesPostRender",
        value: function adjustStylesPostRender() {
            this.refs.itemList.style.maxHeight = this.adjustHeight(this.refs.itemList.children) + "px";
            var dropContainerBounds = ReactDOM.findDOMNode(this.refs.itemsContainer).getBoundingClientRect();
            if (dropContainerBounds.bottom > window.innerHeight && dropContainerBounds.bottom - dropContainerBounds.top < window.innerHeight) {
                this.refs.itemsContainer.style.bottom = '100%';
            } else {
                this.refs.itemsContainer.style.bottom = '';
            }
        }
    }, {
        key: "componentDidMount",
        value: function componentDidMount() {
            window.addEventListener('click', this.onWindowClick);
            this.toEllipse();
            this.adjustStylesPostRender();
            var showWidth = this.refs.showInput.offsetWidth;
            this.setState({ showWidth: 100 - 15 * 100 / showWidth + "%" });
        }
    }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate() {
            this.adjustStylesPostRender();
            if (!this.state.preserveScroll) {
                this.refs.itemList.scrollTop = 0;
            }
        }
    }, {
        key: "componentWillReceiveProps",
        value: function componentWillReceiveProps(nextProps) {
            if (this.props.controlled) {
                return;
            }
            if (nextProps.optionItems && this.props.optionItems !== nextProps.optionItems) {
                if (this.props.multiselect) {
                    this.setState({ checkItems: _.cloneDeep(this.props.optionItems) }); // eslint-disable-line react/no-direct-mutation-state
                } else {
                    var selectedItems = this.props.optionItems.filter(function (item) {
                        return item.selected;
                    });
                    this.setState({ activeItem: selectedItems[0] || this.props.optionItems[0] }); // eslint-disable-line react/no-direct-mutation-state
                }
            }
        }
    }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
            window.removeEventListener('click', this.onWindowClick);
        }
    }, {
        key: "render",
        value: function render() {
            var customWidth = {};
            var width = this.props.width === undefined ? '100%' : this.props.width;
            if (width) {
                customWidth.minWidth = width;
                customWidth.width = width;
            }

            var items = this.props.multiselect ? this.renderCheckboxItems() : this.renderSelectItems();
            var displaySelection = this.props.multiselect ? this.state.checkItems.filter(function (item) {
                return item.selected;
            }).length + " Selected" : this.state.activeItem.text;

            var classes = cx(this.props.className) + " " + styles.container;

            return React.createElement(
                "div",
                { className: classes, onClick: this.onToggleClick },
                React.createElement(
                    "div",
                    { className: styles.dropdown },
                    React.createElement(
                        "div",
                        { className: cx(styles.title), style: customWidth },
                        React.createElement(
                            "span",
                            { className: styles.pull_left, style: { width: this.state.showWidth }, ref: "showInput" },
                            React.createElement(
                                _index2.default,
                                { className: "Body-Secondary" },
                                displaySelection
                            )
                        ),
                        React.createElement(
                            "span",
                            { className: styles.pull_right },
                            React.createElement(_Icon2.default, { name: "arrow-down" })
                        )
                    ),
                    items
                )
            );
        }
    }, {
        key: "renderCheckboxItems",
        value: function renderCheckboxItems() {
            var _this2 = this;

            var style = {
                display: this.state.active ? 'inline' : 'none'
            };

            style.maxWidth = 285;

            var width = this.props.width === undefined ? '100%' : this.props.width;
            if (width) {
                style.minWidth = width;
                if (style.maxWidth < width) {
                    style.maxWidth = width;
                }
            }

            var buttons = this.props.controlled ? React.createElement(
                "div",
                { className: styles.buttonsContainer },
                React.createElement(
                    "div",
                    { className: styles.buttons },
                    React.createElement(
                        _ButtonToolbar2.default,
                        null,
                        React.createElement(
                            _Button2.default,
                            { onClick: this.handleCancelClick },
                            "CANCEL"
                        ),
                        React.createElement(
                            _Button2.default,
                            { primary: true, onClick: this.handleOkClick },
                            "OK"
                        )
                    )
                )
            ) : '';

            return React.createElement(
                "div",
                { className: styles.itemsContainer, ref: "itemsContainer", style: style },
                React.createElement(
                    "div",
                    { className: styles.itemList, ref: "itemList" },
                    React.createElement(
                        "div",
                        { className: styles.allItem, onClick: this.selectAll },
                        React.createElement(_CheckBox2.default, { text: "All", readonly: true, className: styles.allItemStrong, checked: this.state.selectAll })
                    ),
                    this.state.checkItems.map(function (item) {
                        return React.createElement(
                            "div",
                            { className: styles.item,
                                onClick: function onClick(e) {
                                    // eslint-disable-line react/jsx-no-bind
                                    _this2.checkItem(e, item.selected, item.key);
                                },
                                key: item.key, title: item.text
                            },
                            React.createElement(_CheckBox2.default, { text: item.text, value: item.key, readonly: true, checked: item.selected })
                        );
                    })
                ),
                buttons
            );
        }
    }, {
        key: "renderSelectItems",
        value: function renderSelectItems() {
            var _this3 = this;

            var style = {
                display: this.state.active ? 'inline' : 'none'
            };

            style.maxWidth = 285;

            var width = this.props.width === undefined ? '100%' : this.props.width;
            if (width) {
                style.minWidth = width;
                if (style.maxWidth < width) {
                    style.maxWidth = width;
                }
            }

            return React.createElement(
                "div",
                { className: styles.itemsContainer, ref: "itemsContainer", style: style },
                React.createElement(
                    "div",
                    { className: styles.itemList, ref: "itemList" },
                    this.props.optionItems.map(function (item) {
                        return React.createElement(
                            "div",
                            { className: styles.item,
                                onClick: function onClick(e) {
                                    // eslint-disable-line react/jsx-no-bind
                                    _this3.selectItem(e, item);
                                },
                                key: item.key, title: item.text
                            },
                            React.createElement(
                                _index2.default,
                                { className: "Body-Secondary" },
                                item.text
                            )
                        );
                    })
                )
            );
        }
    }, {
        key: "isActive",
        value: function isActive() {
            return typeof this.props.active === 'boolean' ? this.props.active : this.state.active;
        }
    }, {
        key: "hide",
        value: function hide() {
            this.setState({
                active: false,
                preserveScroll: false
            });
        }
    }, {
        key: "show",
        value: function show() {
            this.setState({
                active: true
            });
        }
    }, {
        key: "adjustHeight",
        value: function adjustHeight(list) {
            var height = 0;
            for (var i = 0; i < 5 && i < list.length; i++) {
                height += list[i].offsetHeight;
            }
            return height + 2;
        }
    }, {
        key: "selectItem",
        value: function selectItem(e, item) {
            this.setState({ activeItem: item, active: false, preserveScroll: true });
            if (this.props.onChange) {
                this.props.onChange(item.key, this.props.optionItems);
            }
        }
    }, {
        key: "checkItem",
        value: function checkItem(e, checked, key) {
            if (e.target.nodeName !== "DIV" && e.target.nodeName !== "INPUT") {
                // div element containing checkbox and input of checkbox
                e.preventDefault();
            }
            var currentStateItems = this.state.checkItems;
            var selectAll = true;

            var newItems = currentStateItems.map(function (item) {
                if (item.key === key) {
                    item.selected = !checked;
                }

                if (selectAll && !item.selected) {
                    selectAll = false;
                }

                return item;
            });

            this.setState({ checkItems: newItems, selectAll: selectAll, preserveScroll: true });
        }
    }, {
        key: "selectAll",
        value: function selectAll(e) {
            var _this4 = this;

            if (e.target.nodeName !== "DIV" && e.target.nodeName !== "INPUT") {
                // div element containing checkbox and input of checkbox
                e.preventDefault();
            }

            var newItems = this.state.checkItems.map(function (item) {
                item.selected = !_this4.state.selectAll;
                return item;
            });

            this.setState({ checkItems: newItems, selectAll: !this.state.selectAll, preserveScroll: true });
        }
    }, {
        key: "onWindowClick",
        value: function onWindowClick(event) {
            if (this.props.multiselect && this.props.controlled) {
                return;
            }

            var dropdownElement = (0, _reactDom.findDOMNode)(this);

            if (event.target !== dropdownElement && !dropdownElement.contains(event.target) && this.isActive()) {
                this.hide();

                if (this.props.multiselect && this.props.onChange) {
                    this.props.onChange(this.state.checkItems);
                }
            }
        }
    }, {
        key: "onToggleClick",
        value: function onToggleClick() {
            if (this.isActive()) {
                if (!this.props.multiselect) {
                    this.hide();
                }

                return;
            }

            if (this.props.multiselect && this.props.controlled) {
                this.setState({
                    active: true,
                    checkItemsSnapshot: _.cloneDeep(this.state.checkItems)
                });
            } else {
                this.show();
            }
        }
    }, {
        key: "handleOkClick",
        value: function handleOkClick() {
            this.hide();
            if (this.props.onChange) {
                this.props.onChange(this.state.checkItems);
            }
        }
    }, {
        key: "handleCancelClick",
        value: function handleCancelClick() {
            this.setState({
                active: false,
                preserveScroll: false,
                checkItems: _.cloneDeep(this.state.checkItemsSnapshot)
            });

            if (this.props.onChange) {
                this.props.onChange(this.state.checkItemsSnapshot);
            }
        }
    }]);

    return Dropdown;
}(Component);

exports.default = Dropdown;


Dropdown.propTypes = {
    className: PropTypes.string,
    active: PropTypes.bool,
    onChange: PropTypes.func,
    optionItems: PropTypes.arrayOf(PropTypes.shape({
        key: PropTypes.string.isRequired,
        text: PropTypes.string.isRequired,
        value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
        selected: PropTypes.bool
    })).isRequired,
    width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    search: PropTypes.bool,
    controlled: PropTypes.bool,
    multiselect: PropTypes.bool
};

},{"../Label/index":136,"./../Button":82,"./../ButtonToolbar":80,"./../CheckBox":84,"./../Icon":134,"./style.less":108,"lodash":"lodash","mdc-classnames":"mdc-classnames","react":"react","react-dom":"react-dom"}],108:[function(require,module,exports){
module.exports = {"Title-Page":"neptune_Title-Page_1nxf3","Title-Page-Light":"neptune_Title-Page-Light_1nxf3","Title-Section-Primary":"neptune_Title-Section-Primary_1nxf3","Title-Section-Primary-Light":"neptune_Title-Section-Primary-Light_1nxf3","TITLE-SUBTITLE":"neptune_TITLE-SUBTITLE_1nxf3","Title-Section-Secondary":"neptune_Title-Section-Secondary_1nxf3","TITLE-MODULE":"neptune_TITLE-MODULE_1nxf3","LABEL-STANDARD":"neptune_LABEL-STANDARD_1nxf3","LABEL-STANDARD-SEMIBOLD":"neptune_LABEL-STANDARD-SEMIBOLD_1nxf3","LABEL-ATTRIBUTION":"neptune_LABEL-ATTRIBUTION_1nxf3","LABEL-ATTRIBUTION-MA":"neptune_LABEL-ATTRIBUTION-MA_1nxf3","LABEL-ATTRIBUTION-MIS":"neptune_LABEL-ATTRIBUTION-MIS_1nxf3","Label-Footnote":"neptune_Label-Footnote_1nxf3","Rating":"neptune_Rating_1nxf3","Header-Primary":"neptune_Header-Primary_1nxf3","Body-Primary":"neptune_Body-Primary_1nxf3","Header-Secondary":"neptune_Header-Secondary_1nxf3","Header-Secondary-Bold":"neptune_Header-Secondary-Bold_1nxf3","Body-Secondary":"neptune_Body-Secondary_1nxf3","TABLE-SECTION":"neptune_TABLE-SECTION_1nxf3","Header-Tertiary":"neptune_Header-Tertiary_1nxf3","Header-Tertiary-Bold":"neptune_Header-Tertiary-Bold_1nxf3","Body-Tertiary":"neptune_Body-Tertiary_1nxf3","Body-Tertiary-Med":"neptune_Body-Tertiary-Med_1nxf3","Body-Text-Prompt":"neptune_Body-Text-Prompt_1nxf3","Link-DkBlue":"neptune_Link-DkBlue_1nxf3","LINK-GOLD":"neptune_LINK-GOLD_1nxf3","LINK-GREY":"neptune_LINK-GREY_1nxf3","LABEL-SIDENAV-TITLE":"neptune_LABEL-SIDENAV-TITLE_1nxf3","MIS-BLUE":"neptune_MIS-BLUE_1nxf3","MA-BLUE":"neptune_MA-BLUE_1nxf3","MOODYS-BLUE":"neptune_MOODYS-BLUE_1nxf3","HIGHLIGHT-BLUE":"neptune_HIGHLIGHT-BLUE_1nxf3","GOLD":"neptune_GOLD_1nxf3","GREY-1":"neptune_GREY-1_1nxf3","GREY-2":"neptune_GREY-2_1nxf3","GREY-3":"neptune_GREY-3_1nxf3","GREY-4":"neptune_GREY-4_1nxf3","BLACK":"neptune_BLACK_1nxf3","RED":"neptune_RED_1nxf3","GREEN":"neptune_GREEN_1nxf3","icon_down_arrow":"neptune_icon_down_arrow_1nxf3","icon_up_arrow":"neptune_icon_up_arrow_1nxf3","icon_warning_icon":"neptune_icon_warning_icon_1nxf3","icon_select_arrows":"neptune_icon_select_arrows_1nxf3","icon_triangle_down":"neptune_icon_triangle_down_1nxf3","icon_triangle_up":"neptune_icon_triangle_up_1nxf3","icon_x_icon":"neptune_icon_x_icon_1nxf3","icon_right_arrow":"neptune_icon_right_arrow_1nxf3","MIS-BLUE-FONT":"neptune_MIS-BLUE-FONT_1nxf3","MIS-BLUE-BG":"neptune_MIS-BLUE-BG_1nxf3","MIS-BLUE-BORDER":"neptune_MIS-BLUE-BORDER_1nxf3","MA-BLUE-FONT":"neptune_MA-BLUE-FONT_1nxf3","MA-BLUE-BG":"neptune_MA-BLUE-BG_1nxf3","MA-BLUE-BORDER":"neptune_MA-BLUE-BORDER_1nxf3","MOODYS-BLUE-FONT":"neptune_MOODYS-BLUE-FONT_1nxf3","MOODYS-BLUE-BG":"neptune_MOODYS-BLUE-BG_1nxf3","MOODYS-BLUE-BORDER":"neptune_MOODYS-BLUE-BORDER_1nxf3","HIGHLIGHT-BLUE-FONT":"neptune_HIGHLIGHT-BLUE-FONT_1nxf3","HIGHLIGHT-BLUE-BG":"neptune_HIGHLIGHT-BLUE-BG_1nxf3","HIGHLIGHT-BLUE-BORDER":"neptune_HIGHLIGHT-BLUE-BORDER_1nxf3","GOLD-FONT":"neptune_GOLD-FONT_1nxf3","GOLD-BG":"neptune_GOLD-BG_1nxf3","GOLD-BORDER":"neptune_GOLD-BORDER_1nxf3","GREY-1-FONT":"neptune_GREY-1-FONT_1nxf3","GREY-1-BG":"neptune_GREY-1-BG_1nxf3","GREY-1-BORDER":"neptune_GREY-1-BORDER_1nxf3","GREY-2-FONT":"neptune_GREY-2-FONT_1nxf3","GREY-2-BG":"neptune_GREY-2-BG_1nxf3","GREY-2-BORDER":"neptune_GREY-2-BORDER_1nxf3","GREY-3-FONT":"neptune_GREY-3-FONT_1nxf3","GREY-3-BG":"neptune_GREY-3-BG_1nxf3","GREY-3-BORDER":"neptune_GREY-3-BORDER_1nxf3","GREY-4-FONT":"neptune_GREY-4-FONT_1nxf3","GREY-4-BG":"neptune_GREY-4-BG_1nxf3","GREY-4-BORDER":"neptune_GREY-4-BORDER_1nxf3","BLACK-FONT":"neptune_BLACK-FONT_1nxf3","BLACK-BG":"neptune_BLACK-BG_1nxf3","BLACK-BORDER":"neptune_BLACK-BORDER_1nxf3","RED-FONT":"neptune_RED-FONT_1nxf3","RED-BG":"neptune_RED-BG_1nxf3","RED-BORDER":"neptune_RED-BORDER_1nxf3","GREEN-FONT":"neptune_GREEN-FONT_1nxf3","GREEN-BG":"neptune_GREEN-BG_1nxf3","GREEN-BORDER":"neptune_GREEN-BORDER_1nxf3","allItemStrong":"neptune_allItemStrong_1nxf3","container":"neptune_container_1nxf3","dropdown":"neptune_dropdown_1nxf3","title":"neptune_title_1nxf3","itemsContainer":"neptune_itemsContainer_1nxf3","itemList":"neptune_itemList_1nxf3","item":"neptune_item_1nxf3","allItem":"neptune_allItem_1nxf3","buttonsContainer":"neptune_buttonsContainer_1nxf3","buttons":"neptune_buttons_1nxf3","pull_left":"neptune_pull_left_1nxf3","pull_right":"neptune_pull_right_1nxf3"}
},{}],109:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _validators = require('./util/validators');

var _constants = require('./util/constants');

var _context = require('./util/context');

var _context2 = _interopRequireDefault(_context);

var _mdcClassnames = require('mdc-classnames');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/*
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
*/

var React = require("react");
var PropTypes = React.PropTypes;
var Component = React.Component;

var cellblock = require('cellblock');
// import { forceContext } from './util/handleStaleContext';

var decimalToPercent = function decimalToPercent(v) {
    return parseFloat((v * 100).toFixed(4)) + '%';
};
var fractionToPercent = function fractionToPercent(v) {
    var f = v.split('/');
    return decimalToPercent(parseInt(f[0], 10) / parseInt(f[1], 10));
};

var Column = function (_Component) {
    _inherits(Column, _Component);

    function Column(props) {
        _classCallCheck(this, Column);

        return _possibleConstructorReturn(this, (Column.__proto__ || Object.getPrototypeOf(Column)).call(this, props));
    }

    _createClass(Column, [{
        key: 'render',
        value: function render() {
            if (this.props.isRoot) {
                return React.createElement(
                    'div',
                    { className: (0, _mdcClassnames.classSet)(_constants.Constants.GRID, this.props.className) },
                    this.props.children
                );
            }
            var className = (0, _mdcClassnames.classSet)(_constants.Constants.COL, this.props.className);
            var width = this.grid.getFraction();
            var offset = this.props.offset;

            var style = {};
            if (offset) {
                style.marginLeft = fractionToPercent(offset);
            }
            style.width = decimalToPercent(width[0] / width[1]);
            return React.createElement(
                'div',
                { className: className, style: style },
                this.props.children
            );
        }
    }, {
        key: 'getChildContext',
        value: function getChildContext() {
            return {
                cellblockBreak: this.props.breakCount || this.context.cellblockBreak,
                cellblockColumn: this.grid
            };
        }
    }, {
        key: 'componentWillMount',
        value: function componentWillMount() {
            var cellblockColumn = this.context.cellblockColumn;

            if (cellblockColumn) {
                this.grid = cellblock(cellblockColumn, this.props.width);
            } else {
                this.grid = cellblock();
            }
        }
    }, {
        key: 'componentWillUpdate',
        value: function componentWillUpdate(_ref) {
            var width = _ref.width;

            this.grid.setWidth(width);
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            this.grid.detach();
        }
    }]);

    return Column;
}(Component);

Column.contextTypes = _context2.default;
Column.childContextTypes = _context2.default;
Column.propTypes = {
    breakCount: PropTypes.number,
    children: PropTypes.any,
    className: PropTypes.string,
    isRoot: PropTypes.bool,
    offset: _validators.gridFraction,
    viewport: PropTypes.array,
    width: _validators.gridFraction
};
/*
Column = __decorate([
    forceContext
], Column);
*/
exports.default = Column;

},{"./util/constants":113,"./util/context":114,"./util/validators":117,"cellblock":"cellblock","mdc-classnames":"mdc-classnames","react":"react"}],110:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _context2 = require('./util/context');

var _context3 = _interopRequireDefault(_context2);

var _mdcClassnames = require('mdc-classnames');

var _constants = require('./util/constants');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/*
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
*/
var React = require("react");
var PropTypes = React.PropTypes;
var Component = React.Component;

// import { forceContext } from './util/handleStaleContext';

var Row = function (_Component) {
    _inherits(Row, _Component);

    function Row() {
        _classCallCheck(this, Row);

        return _possibleConstructorReturn(this, (Row.__proto__ || Object.getPrototypeOf(Row)).apply(this, arguments));
    }

    _createClass(Row, [{
        key: 'render',
        value: function render() {
            var _context = this.context;
            var cellblock = _context.cellblock;
            var cellblockGet = _context.cellblockGet;

            var v = cellblockGet('viewport')[1];
            var c = cellblockGet('columnWidth');
            var g = cellblockGet('gutterWidth');
            var style = cellblock ? null : {
                maxWidth: v * c + v * g
            };
            return React.createElement(
                'div',
                { className: (0, _mdcClassnames.classSet)(_constants.Constants.ROW, this.props.className), style: style },
                this.props.children
            );
        }
    }, {
        key: 'getChildContext',
        value: function getChildContext() {
            return {
                cellblock: true
            };
        }
    }]);

    return Row;
}(Component);

Row.propTypes = {
    children: PropTypes.any,
    className: PropTypes.string
};
Row.contextTypes = _context3.default;
Row.childContextTypes = _context3.default;
/*
Row = __decorate([
    forceContext
], Row);
*/
exports.default = Row;

},{"./util/constants":113,"./util/context":114,"mdc-classnames":"mdc-classnames","react":"react"}],111:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Column = require('./Column');

var _Column2 = _interopRequireDefault(_Column);

var _Style = require('./util/Style');

var _Style2 = _interopRequireDefault(_Style);

var _eventlistener = require('eventlistener');

var eventListener = _interopRequireWildcard(_eventlistener);

var _context = require('./util/context');

var _context2 = _interopRequireDefault(_context);

var _getThreshold = require('./util/getThreshold');

var _getThreshold2 = _interopRequireDefault(_getThreshold);

var _validators = require('./util/validators');

var _handleStaleContext = require('./util/handleStaleContext');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var React = require("react");
var PropTypes = React.PropTypes;
var Component = React.Component;

/*
 * A patch:
 * shouldComponentUpdate() can block context updates
 * so we need to add a fallback method for
 * updating interested components.
 * When React offers a better way, this should be removed
 */
var breakCount = 0; // everytime grid changes, increment so we can check for staleness

var Grid = function (_Component) {
    _inherits(Grid, _Component);

    function Grid(props) {
        _classCallCheck(this, Grid);

        var _this = _possibleConstructorReturn(this, (Grid.__proto__ || Object.getPrototypeOf(Grid)).call(this, props));

        _this.syncGrid = _this.syncGrid.bind(_this);
        _this.updateGrid = _this.updateGrid.bind(_this);
        // set initial state
        _this.state = { breakpoint: _this.props.initialBreakpoint };
        return _this;
    }

    _createClass(Grid, [{
        key: 'getChildContext',
        value: function getChildContext() {
            var props = this.props;

            var getViewport = function () {
                return [this.state.breakpoint, this.getMaxBreakPoint(this.state.breakpoint)];
            }.bind(this);
            return {
                cellblockGet: function cellblockGet(key) {
                    switch (key) {
                        case 'gutterWidth':
                            return props.gutterWidth;
                        case 'columnWidth':
                            return props.columnWidth;
                        case 'viewport':
                            return getViewport();
                        default:
                            throw new Error('invalid key ' + key);
                    }
                }
            };
        }
    }, {
        key: 'componentWillMount',
        value: function componentWillMount() {
            var _props = this.props;
            var breakpoints = _props.breakpoints;
            var columnWidth = _props.columnWidth;
            var gutterWidth = _props.gutterWidth;

            var thresholds = breakpoints.map(function (p) {
                return p * columnWidth + p * gutterWidth;
            });
            var breakpoint = this.state.breakpoint || this.props.breakpoints[(0, _getThreshold2.default)(thresholds)];
            this.setState({
                breakCount: 0,
                breakpoint: breakpoint,
                thresholds: thresholds
            });
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.syncGrid(true);
            eventListener.add(window, 'resize', this.syncGrid);
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            eventListener.remove(window, 'resize', this.syncGrid);
        }
    }, {
        key: 'getMaxBreakPoint',
        value: function getMaxBreakPoint(minBreakpoint) {
            var _props2 = this.props;
            var breakpoints = _props2.breakpoints;
            var flexible = _props2.flexible;

            if (!flexible || Array.isArray(flexible) && flexible.indexOf(minBreakpoint) === -1) {
                return minBreakpoint;
            } else {
                var nextPoint = breakpoints[breakpoints.indexOf(minBreakpoint) + 1];
                return nextPoint || breakpoints[breakpoints.length - 1];
            }
        }
    }, {
        key: 'syncGrid',
        value: function syncGrid(triggerChange) {
            var b = this.props.breakpoints[(0, _getThreshold2.default)(this.state.thresholds)];
            var isChange = b !== this.state.breakpoint;
            if (isChange) {
                this.updateGrid(b);
            }
            if (isChange || triggerChange === true) {
                this.props.onChange(b);
            }
        }
    }, {
        key: 'updateGrid',
        value: function updateGrid(b) {
            breakCount = breakCount += 1; // This is for the patch
            this.setState({
                breakCount: breakCount,
                breakpoint: b
            });
            (0, _handleStaleContext.updateObservers)(breakCount); // This is for the patch
        }
    }, {
        key: 'render',
        value: function render() {
            var breakpoint = this.state.breakpoint;
            var breakCount2 = this.state.breakCount;
            var _props3 = this.props;
            var className = _props3.className;
            var gutterWidth = _props3.gutterWidth;
            var children = _props3.children;

            var breakPointRange = [breakpoint, this.getMaxBreakPoint(breakpoint)];
            return React.createElement(
                _Column2.default,
                { isRoot: true, viewport: breakPointRange, breakCount: breakCount2, className: className },
                React.createElement(_Style2.default, { gutter: gutterWidth }),
                children
            );
        }
    }]);

    return Grid;
}(Component);

exports.default = Grid;

Grid.propTypes = {
    breakpoints: _validators.validBreakpoints,
    children: PropTypes.any,
    className: PropTypes.string,
    columnWidth: PropTypes.number,
    flexible: PropTypes.oneOfType([PropTypes.bool, PropTypes.array]),
    gutterWidth: PropTypes.number,
    initialBreakpoint: _validators.validBreakpoint,
    onChange: PropTypes.func
};
Grid.childContextTypes = _context2.default;
Grid.defaultProps = {
    breakpoints: [4, 8, 12, 16],
    columnWidth: 41,
    flexible: true,
    gutterWidth: 30,
    onChange: function onChange() {}
};

},{"./Column":109,"./util/Style":112,"./util/context":114,"./util/getThreshold":115,"./util/handleStaleContext":116,"./util/validators":117,"eventlistener":"eventlistener","react":"react"}],112:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _constants = require("./constants");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// import * as React from 'react';
var React = require("react");
var Component = React.Component;

var Style = function (_Component) {
    _inherits(Style, _Component);

    function Style(props) {
        _classCallCheck(this, Style);

        return _possibleConstructorReturn(this, (Style.__proto__ || Object.getPrototypeOf(Style)).call(this, props));
    }

    _createClass(Style, [{
        key: "render",
        value: function render() {
            var gutter = this.props.gutter / 2;
            var style = "\n      ." + _constants.Constants.ROW + ":after, ." + _constants.Constants.COL + ":after{content:'';display:block;height:0;visibility:hidden;clear:both;}\n      ." + _constants.Constants.ROW + "{margin-left:auto;margin-right:auto;width:100%;}\n      ." + _constants.Constants.COL + "{box-sizing:border-box;-ms-box-sizing:border-box;-moz-box-sizing:border-box;width:100%;max-width:100%;float:left;min-height:1px;}\n      ." + _constants.Constants.COL + "{padding-left:" + gutter + "px;padding-right:" + gutter + "px;}\n      ." + _constants.Constants.COL + " ." + _constants.Constants.ROW + "{margin-left:-" + gutter + "px;margin-right:-" + gutter + "px;width:auto;}\n    ";
            return React.createElement("style", { dangerouslySetInnerHTML: { __html: style } });
        }
    }]);

    return Style;
}(Component);

exports.default = Style;

},{"./constants":113,"react":"react"}],113:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
var Constants = exports.Constants = {
    COL: 'cb-col',
    GRID: 'cb-grid',
    ROW: 'cb-row'
};

},{}],114:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var React = require("react");
var PropTypes = React.PropTypes;
var number = PropTypes.number;
var bool = PropTypes.bool;
var func = PropTypes.func;
var object = PropTypes.object;
exports.default = {
    cellblock: bool,
    cellblockBreak: number,
    cellblockColumn: object,
    cellblockGet: func
};

},{"react":"react"}],115:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = getThreshold;
// using documentElement because
// clientWidth doesnt subtract the scroll bar
var getWindowWidth = function getWindowWidth() {
    if (typeof window === 'undefined') {
        return Infinity;
    }
    return document.documentElement.clientWidth || document.getElementsByTagName('body')[0].clientWidth;
};

function getThreshold(thresholds) {
    /* eslint-disable no-empty */
    var width = getWindowWidth();
    var b = thresholds.length;
    while (--b && width < thresholds[b]) {}
    return b;
}

},{}],116:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
/*
 * This is a temporary fix for when shouldComponentUpdate()
 * makes the context stale.
 * For reference check out react issue https://github.com/facebook/react/issues/2517
 */
var observerId = 0;
var observers = {};
var forceContext = exports.forceContext = function forceContext(Component) {
    var componentWillUnmount = Component.prototype.componentWillUnmount;
    Component.prototype.componentDidMount = function () {
        var _this = this;

        // if (componentDidMount) componentDidMount.apply(this, arguments); // nothing uses this at the moment
        if (this.props.isRoot) {
            return;
        }
        this.observerId = observerId++;
        observers[this.observerId] = function (newBreak) {
            /*
             * If the context appears stale
             * force an update
             */
            if (_this.context.cellblockBreak !== newBreak) {
                _this.forceUpdate();
            }
        };
    };
    Component.prototype.componentWillUnmount = function () {
        if (componentWillUnmount) {
            componentWillUnmount.apply(this, arguments);
        }
        delete observers[this.observerId];
    };
    return Component;
};

// https://jslinterrors.com/the-body-of-a-for-in-should-be-wrapped-in-an-if-statement
var updateObservers = exports.updateObservers = function updateObservers(newBreakpoint) {
    for (var o in observers) {
        if (observers.hasOwnProperty(o)) {
            observers[o](newBreakpoint);
        }
    }
};

},{}],117:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
var _arguments = arguments;
var React = require("react");
var PropTypes = React.PropTypes;

var FRACTION_RE = /^\d+\/\d+$/;

var isString = function isString(val) {
    return typeof val === 'string';
};

var isNumber = function isNumber(val) {
    return typeof val === 'number';
};

var isFraction = function isFraction(val) {
    return isString(val) && FRACTION_RE.test(val);
};

var isInteger = function isInteger(val) {
    return isNumber(val) && val % 1 === 0;
};

var isSorted = function isSorted(arr) {
    var length = arr.length;
    for (var i = 0; i < length - 1; i++) {
        if (arr[i] > arr[i + 1]) {
            return false;
        }
    }
    return true;
};
var isAllIntegers = function isAllIntegers(arr) {
    var length = arr.length;
    for (var i = 0; i < length; i++) {
        if (!isInteger(arr[i])) {
            return false;
        }
    }
    return true;
};
var createError = function createError(props, propName, componentName, message) {
    var str = 'Invalid prop ' + propName + ' of value ' + props[propName] + ' supplied to ' + componentName;
    return new Error(str + ', ' + message);
};

var gridFraction = function gridFraction(props, propName, componentName) {
    var value = props[propName];
    if (props[propName] && !isFraction(value)) {
        return createError(props, propName, componentName, 'expected a fraction string `a/b` (ie: 2/3)');
    }
    return null;
};
var validBreakpoint = function validBreakpoint(props, propName) {
    if (typeof window === 'undefined' && !props[propName]) {
        return new Error('Isomorphic grids require an initialBreakpoint');
    }
    return PropTypes.oneOf(props.breakpoints).apply(null, _arguments);
};
var validBreakpoints = function validBreakpoints(props, propName, componentName) {
    switch (true) {
        case !Array.isArray(props[propName]) || !isAllIntegers(props[propName]):
            return createError(props, propName, componentName, 'expected an array of integers');
        case !isSorted(props[propName]):
            return createError(props, propName, componentName, 'expected ascending order');
        default:
            return null;
    }
};

exports.default = {
    gridFraction: gridFraction,
    validBreakpoint: validBreakpoint,
    validBreakpoints: validBreakpoints
};

},{"react":"react"}],118:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _arrowDown = require('./icons/arrow-down');

var _arrowLeft = require('./icons/arrow-left');

var _arrowRight = require('./icons/arrow-right');

var _arrowSort = require('./icons/arrow-sort');

var _arrowUp = require('./icons/arrow-up');

var _bell = require('./icons/bell');

var _calendar = require('./icons/calendar');

var _checkmark = require('./icons/checkmark');

var _close = require('./icons/close');

var _document = require('./icons/document');

var _globe = require('./icons/globe');

var _information = require('./icons/information');

var _search = require('./icons/search');

var _slider = require('./icons/slider');

var _speechBubble = require('./icons/speech-bubble');

exports.default = {
    'arrow-down': _arrowDown.arrowDown,
    'arrow-left': _arrowLeft.arrowLeft,
    'arrow-right': _arrowRight.arrowRight,
    'arrow-sort': _arrowSort.arrowSort,
    'arrow-up': _arrowUp.arrowUp,
    bell: _bell.bell,
    calendar: _calendar.calendar,
    checkmark: _checkmark.checkmark,
    close: _close.close,
    document: _document.document,
    globe: _globe.globe,
    information: _information.information,
    search: _search.search,
    slider: _slider.slider,
    'speech-bubble': _speechBubble.speechBubble
};

},{"./icons/arrow-down":119,"./icons/arrow-left":120,"./icons/arrow-right":121,"./icons/arrow-sort":122,"./icons/arrow-up":123,"./icons/bell":124,"./icons/calendar":125,"./icons/checkmark":126,"./icons/close":127,"./icons/document":128,"./icons/globe":129,"./icons/information":130,"./icons/search":131,"./icons/slider":132,"./icons/speech-bubble":133}],119:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
var arrowDown = exports.arrowDown = function arrowDown() {
    var color = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "#191919";

    return {
        'svg': '<g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g><g><rect x="0" y="0" width="16" height="16"></rect><polygon fill=' + color + ' points="11.685 6 8.179 8.521 4.672 6 3.5 7.453 8.179 11 12.857 7.453"></polygon></g></g></g>',
        'height': 16,
        'width': 16,
        'viewBox': '0 0 16 16'
    };
};

},{}],120:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
var arrowLeft = exports.arrowLeft = function arrowLeft() {
    var color = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "#191919";

    return {
        'svg': '<g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g><g><rect x="0" y="0" width="16" height="16"></rect><polygon fill=' + color + ' points="8.548 4.00084 5 8.67884 8.548 13.35684 10.001 12.18584 7.48 8.67884 10.001 5.17284"></polygon></g></g></g>',
        'height': 16,
        'width': 16,
        'viewBox': '0 0 16 16'
    };
};

},{}],121:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
var arrowRight = exports.arrowRight = function arrowRight() {
    var color = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "#191919";

    return {
        'svg': '<g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g><g><rect x="0" y="0" width="16" height="16"></rect><polygon fill=' + color + ' points="6.65960337 3.79931178 5.20660337 4.97131178 7.72760337 8.47731178 5.20660337 11.9843118 6.65960337 13.1553118 10.2076034 8.47731178"></polygon></g></g></g>',
        'height': 16,
        'width': 16,
        'viewBox': '0 0 16 16'
    };
};

},{}],122:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
var arrowSort = exports.arrowSort = function arrowSort() {
    var color = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "#CD9C54";

    return {
        'svg': '<g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g><g transform="translate(0.000000, -119.000000)"><polygon fill=' + color + ' transform="translate(8.000000, 127.000000) scale(1, -1) translate(-8.000000, -127.000000) " points="8 124 13 130 3 130"></polygon><rect x="0" y="119" width="16" height="16"></rect></g></g></g>',
        'height': 16,
        'width': 16,
        'viewBox': '0 0 16 16'
    };
};

},{}],123:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
var arrowUp = exports.arrowUp = function arrowUp() {
    var color = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "#191919";

    return {
        'svg': '<g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g><g><rect x="0" y="0" width="16" height="16"></rect><polygon fill=' + color + ' points="8.178 6 3.5 9.548 4.672 11 8.178 8.479 11.684 11 12.856 9.548"></polygon></g></g></g>',
        'height': 16,
        'width': 16,
        'viewBox': '0 0 16 16'
    };
};

},{}],124:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
var bell = exports.bell = function bell() {
    var color = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "#191919";

    return {
        'svg': '<g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g><g><g transform="translate(2.000000, 1.000000)" fill=' + color + '><path d="M9.38239005,8.9127283 C9.51208522,8.55656664 9.57783766,8.18882249 9.57783766,7.81818272 L9.57783766,4.81831705 C9.57783766,3.28653236 8.50770168,1.94875443 6.90279933,1.45939411 L6.90279933,1.15535367 C6.90279933,0.518316558 6.32852117,0 5.62243652,0 C4.91665349,0 4.34237534,0.518316558 4.34237534,1.15535367 L4.34237534,1.45649848 C2.73717137,1.94875443 1.66763862,3.28653236 1.66763862,4.81831705 L1.66763862,7.81818272 C1.66763862,8.19171811 1.73308944,8.55946226 1.86278461,8.9127283 C0.803808451,8.97064076 0,9.4860617 0,10.1375769 L0,11.22054 C0,11.3016175 0.0693718363,11.3682168 0.155030973,11.3682168 L11.0898421,11.3682168 C11.1755012,11.3682168 11.244873,11.3016175 11.244873,11.22054 L11.244873,10.1375769 C11.244873,9.4860617 10.440763,8.97064076 9.38239005,8.9127283"></path><path d="M7.68477734,12 L3.83743434,12 C3.69100639,12 3.57293596,12.1005905 3.57293596,12.2274221 C3.57293596,13.1895924 4.55462198,13.9724491 5.76110584,13.9724491 C6.9681053,13.9724491 7.94979131,13.1895924 7.94979131,12.2274221 C7.94979131,12.1005905 7.83120529,12 7.68477734,12 Z"></path></g><rect x="0" y="0" width="16" height="16"></rect></g></g></g>',
        'height': 16,
        'width': 16,
        'viewBox': '0 0 16 16'
    };
};

},{}],125:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
var calendar = exports.calendar = function calendar() {
    var color = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "#191919";

    return {
        'svg': '<defs><rect id="path-1" x="1.93154185" y="8.684521" width="1.13341204" height="1.13341204"></rect><mask id="mask-2" maskContentUnits="userSpaceOnUse" maskUnits="objectBoundingBox" x="0" y="0" width="1.13341204" height="1.13341204" fill="white"><use xlink:href="#path-1"></use></mask><rect id="path-3" x="4.19836593" y="8.684521" width="1.13341204" height="1.13341204"></rect><mask id="mask-4" maskContentUnits="userSpaceOnUse" maskUnits="objectBoundingBox" x="0" y="0" width="1.13341204" height="1.13341204" fill="white"><use xlink:href="#path-3"></use></mask><rect id="path-5" x="6.46519002" y="8.684521" width="1.13341204" height="1.13341204"></rect><mask id="mask-6" maskContentUnits="userSpaceOnUse" maskUnits="objectBoundingBox" x="0" y="0" width="1.13341204" height="1.13341204" fill="white"><use xlink:href="#path-5"></use></mask><rect id="path-7" x="1.93154185" y="6.41769691" width="1.13341204" height="1.13341204"></rect><mask id="mask-8" maskContentUnits="userSpaceOnUse" maskUnits="objectBoundingBox" x="0" y="0" width="1.13341204" height="1.13341204" fill="white"><use xlink:href="#path-7"></use></mask><rect id="path-9" x="4.19836593" y="6.41769691" width="1.13341204" height="1.13341204"></rect><mask id="mask-10" maskContentUnits="userSpaceOnUse" maskUnits="objectBoundingBox" x="0" y="0" width="1.13341204" height="1.13341204" fill="white"><use xlink:href="#path-9"></use></mask><rect id="path-11" x="6.46519002" y="6.41769691" width="1.13341204" height="1.13341204"></rect><mask id="mask-12" maskContentUnits="userSpaceOnUse" maskUnits="objectBoundingBox" x="0" y="0" width="1.13341204" height="1.13341204" fill="white"><use xlink:href="#path-11"></use></mask><rect id="path-13" x="8.7320141" y="6.41769691" width="1.13341204" height="1.13341204"></rect><mask id="mask-14" maskContentUnits="userSpaceOnUse" maskUnits="objectBoundingBox" x="0" y="0" width="1.13341204" height="1.13341204" fill="white"><use xlink:href="#path-13"></use></mask><rect id="path-15" x="1.93154185" y="4.15087283" width="1.13341204" height="1.13341204"></rect><mask id="mask-16" maskContentUnits="userSpaceOnUse" maskUnits="objectBoundingBox" x="0" y="0" width="1.13341204" height="1.13341204" fill="white"><use xlink:href="#path-15"></use></mask><rect id="path-17" x="4.19836593" y="4.15087283" width="1.13341204" height="1.13341204"></rect><mask id="mask-18" maskContentUnits="userSpaceOnUse" maskUnits="objectBoundingBox" x="0" y="0" width="1.13341204" height="1.13341204" fill="white"><use xlink:href="#path-17"></use></mask><rect id="path-19" x="6.46519002" y="4.15087283" width="1.13341204" height="1.13341204"></rect><mask id="mask-20" maskContentUnits="userSpaceOnUse" maskUnits="objectBoundingBox" x="0" y="0" width="1.13341204" height="1.13341204" fill="white"><use xlink:href="#path-19"></use></mask><rect id="path-21" x="8.7320141" y="4.15087283" width="1.13341204" height="1.13341204"></rect><mask id="mask-22" maskContentUnits="userSpaceOnUse" maskUnits="objectBoundingBox" x="0" y="0" width="1.13341204" height="1.13341204" fill="white"><use xlink:href="#path-21"></use></mask></defs><g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g><g><rect x="0" y="0" width="16" height="16"></rect><g transform="translate(2.000000, 3.000000)"><rect fill=' + color + ' x="0.725123598" y="1.24210606" width="10.2007084" height="1.91160793"></rect><path d="M1.85798445,11.9834761 C0.826892985,11.9834761 0.0151486204,11.3122309 0.0151486204,10.4533698 L0.0151486204,2.31836519 C0.0151486204,1.46468889 0.826892985,0.793564269 1.85798445,0.793564269 L5.88942644,0.793564269 L9.92086843,0.793564269 C10.9519599,0.793564269 11.7637043,1.46468889 11.7637043,2.31836519 L11.7637043,10.4533698 C11.7637043,11.3122309 10.9519599,11.9834761 9.92086843,11.9834761 L5.88942644,11.9834761 L1.85798445,11.9834761 Z M10.8306478,10.8456028 C10.814637,10.8938331 10.6388884,11.0548017 10.3099293,11.0548017 L1.46288872,11.0548017 C1.13934868,11.0548017 0.958304188,10.8938331 0.947342991,10.8456028 L0.947342991,1.92649401 C0.958304188,1.87826371 1.13934868,1.72247984 1.46288872,1.72247984 L5.88899538,1.72247984 L10.315102,1.72247984 C10.6386421,1.72247984 10.8196866,1.87826371 10.8306478,1.92649401 L10.8306478,6.8881258 L10.8306478,10.8456028 Z" fill=' + color + '></path><use stroke=' + color + ' mask="url(#mask-2)" stroke-width="2" xlink:href="#path-1"></use><use stroke=' + color + ' mask="url(#mask-4)" stroke-width="2" xlink:href="#path-3"></use><use stroke=' + color + ' mask="url(#mask-6)" stroke-width="2" xlink:href="#path-5"></use><use stroke=' + color + ' mask="url(#mask-8)" stroke-width="2" xlink:href="#path-7"></use><use stroke=' + color + ' mask="url(#mask-10)" stroke-width="2" xlink:href="#path-9"></use><use stroke=' + color + ' mask="url(#mask-12)" stroke-width="2" xlink:href="#path-11"></use><use stroke=' + color + ' mask="url(#mask-14)" stroke-width="2" xlink:href="#path-13"></use><use stroke=' + color + ' mask="url(#mask-16)" stroke-width="2" xlink:href="#path-15"></use><use stroke=' + color + ' mask="url(#mask-18)" stroke-width="2" xlink:href="#path-17"></use><use stroke=' + color + ' mask="url(#mask-20)" stroke-width="2" xlink:href="#path-19"></use><use stroke=' + color + ' mask="url(#mask-22)" stroke-width="2" xlink:href="#path-21"></use></g><rect fill="#FFFFFF" x="9.72000027" y="0.699999988" width="3" height="5" rx="1"></rect><rect fill="#FFFFFF" x="3.1400001" y="0.699999988" width="3" height="5" rx="1"></rect><polygon fill=' + color + ' points="10.7199033 4.49139137 10.7199033 4.80307969 11.6549682 4.80307969 11.6549682 4.49139137 11.6549682 2.53305026 11.6549682 2.22136194 10.7199033 2.22136194 10.7199033 2.53305026"></polygon><polygon fill=' + color + ' points="4.13585005 4.49139137 4.13585005 4.80307969 5.07091498 4.80307969 5.07091498 4.49139137 5.07091498 2.53305026 5.07091498 2.22136194 4.13585005 2.22136194 4.13585005 2.53305026"></polygon></g></g></g>',
        'height': 16,
        'width': 16,
        'viewBox': '0 0 16 16'
    };
};

},{}],126:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
var checkmark = exports.checkmark = function checkmark() {
    var color = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "#CD9C54";

    return {
        'svg': '<g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g><g><g transform="translate(2.000000, 1.000000)"><g><path d="M6.5,0 C2.910375,0 0,2.910375 0,6.5 C0,10.089625 2.910375,13 6.5,13 C10.089625,13 13,10.089625 13,6.5 C13,2.910375 10.089625,0 6.5,0 L6.5,0 Z" stroke=' + color + '></path><polygon fill=' + color + ' points="8.9375 3.732625 10.079875 4.875 5.6875 9.267375 2.920125 6.5 4.0625 5.357625 5.6875 6.982625 8.9375 3.732625"></polygon></g></g><rect x="0" y="0" width="16" height="16"></rect></g></g></g>',
        'height': 16,
        'width': 16,
        'viewBox': '0 0 16 16'
    };
};

},{}],127:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
var close = exports.close = function close() {
    var color = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "#BFBFBF";

    return {
        'svg': '<g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g><g><rect x="0" y="0" width="16" height="16"></rect><g transform="translate(3.000000, 3.000000)" fill=' + color + '><rect transform="translate(5.000000, 5.000000) rotate(45.000000) translate(-5.000000, -5.000000) " x="-0.905420992" y="3.96296296" width="11.810842" height="2.07407407"></rect><rect transform="translate(5.000000, 5.000000) scale(-1, 1) rotate(45.000000) translate(-5.000000, -5.000000) " x="-0.905420992" y="3.96296296" width="11.810842" height="2.07407407"></rect></g></g></g></g>',
        'height': 16,
        'width': 16,
        'viewBox': '0 0 16 16'
    };
};

},{}],128:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
var document = exports.document = function document() {
    var color = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "#000000";

    return {
        'svg': '<g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g><g><g transform="translate(2.000000, 1.000000)" fill=' + color + '><path d="M10.0793,14 L1.20652,14 C0.5411,14 0,13.4589 0,12.79348 L0,1.20652 C0.00014,0.5411 0.5411,0 1.20652,0 L8.10684,0 C8.21632,0 8.3209,0.04368 8.39832,0.12026 L11.16472,2.884 C11.24214,2.96142 11.28498,3.066 11.28498,3.17548 L11.28498,12.79348 C11.28498,13.45806 10.74388,14 10.0793,14 L10.0793,14 Z M1.20652,0.82348 C0.99568,0.82348 0.82362,0.99484 0.82362,1.20638 L0.82362,12.79348 C0.82362,13.00432 0.99568,13.17638 1.20652,13.17638 L10.07846,13.17638 C10.28594,13.17638 10.46136,13.00096 10.46136,12.79348 L10.46136,3.346 L7.93646,0.82348 L1.20652,0.82348 L1.20652,0.82348 Z"></path><path d="M10.87548,3.58744353 L8.11174,3.58744353 C7.88438,3.58744353 7.7,3.40292353 7.7,3.17570353 L7.7,0.411823527 C7.7,0.245503527 7.80052,0.0947235266 7.95452,0.0313035266 C8.10768,-0.0321164734 8.28562,0.00246352656 8.40336,0.120203527 L11.1671,2.88408353 C11.28484,3.00182353 11.32026,3.17892353 11.256,3.33292353 C11.19174,3.48692353 11.04278,3.58744353 10.87548,3.58744353 L10.87548,3.58744353 Z M8.52348,2.76382353 L9.88148,2.76382353 L8.52348,1.40582353 L8.52348,2.76382353 L8.52348,2.76382353 Z"></path><path d="M8.61084,11.32348 L2.65174,11.32348 C2.42438,11.32348 2.24,11.13896 2.24,10.91174 C2.24,10.68438 2.42452,10.5 2.65174,10.5 L8.61084,10.5 C8.8382,10.5 9.02258,10.68452 9.02258,10.91174 C9.02258,11.1391 8.8382,11.32348 8.61084,11.32348 L8.61084,11.32348 Z"></path><path d="M8.61084,8.80348 L2.65174,8.80348 C2.42438,8.80348 2.24,8.61896 2.24,8.39174 C2.24,8.16438 2.42452,7.98 2.65174,7.98 L8.61084,7.98 C8.8382,7.98 9.02258,8.16452 9.02258,8.39174 C9.02258,8.6191 8.8382,8.80348 8.61084,8.80348 L8.61084,8.80348 Z"></path><path d="M8.61084,6.28348 L2.65174,6.28348 C2.42438,6.28348 2.24,6.09896 2.24,5.87174 C2.24,5.64438 2.42452,5.46 2.65174,5.46 L8.61084,5.46 C8.8382,5.46 9.02258,5.64452 9.02258,5.87174 C9.02258,6.0991 8.8382,6.28348 8.61084,6.28348 L8.61084,6.28348 Z"></path></g><rect x="0" y="0" width="16" height="16"></rect></g></g></g>',
        'height': 16,
        'width': 16,
        'viewBox': '0 0 16 16'
    };
};

},{}],129:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
var globe = exports.globe = function globe() {
    var color = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "#191919";

    return {
        'svg': '<g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g><g><rect x="0" y="0" width="16" height="16"></rect><path d="M8.4,2 C4.85866667,2 2,4.90333333 2,8.5 C2,12.0966667 4.85866667,15 8.4,15 C11.9413333,15 14.8,12.0966667 14.8,8.5 C14.8,4.90333333 11.9413333,2 8.4,2 L8.4,2 Z M6.59377778,3.40111111 C6.224,3.87777778 5.91111111,4.51333333 5.66933333,5.25 L4.13333333,5.25 C4.75911111,4.41222222 5.61244444,3.76222222 6.59377778,3.40111111 L6.59377778,3.40111111 Z M3.67822222,5.97222222 L5.47022222,5.97222222 C5.31377778,6.63666667 5.22844444,7.37333333 5.2,8.13888889 L3.08088889,8.13888889 C3.12355556,7.35888889 3.33688889,6.62222222 3.67822222,5.97222222 L3.67822222,5.97222222 Z M3.67822222,11.0277778 C3.33688889,10.3777778 3.12355556,9.64111111 3.06666667,8.86111111 L5.18577778,8.86111111 C5.21422222,9.62666667 5.29955556,10.3633333 5.456,11.0277778 L3.67822222,11.0277778 L3.67822222,11.0277778 Z M4.13333333,11.75 L5.66933333,11.75 C5.91111111,12.4866667 6.224,13.1077778 6.59377778,13.5988889 C5.61244444,13.2377778 4.75911111,12.5877778 4.13333333,11.75 L4.13333333,11.75 Z M8.04444444,13.8588889 C7.39022222,13.6422222 6.82133333,12.8622222 6.42311111,11.75 L8.04444444,11.75 L8.04444444,13.8588889 L8.04444444,13.8588889 Z M8.04444444,11.0277778 L6.20977778,11.0277778 C6.03911111,10.3633333 5.93955556,9.64111111 5.91111111,8.86111111 L8.04444444,8.86111111 L8.04444444,11.0277778 L8.04444444,11.0277778 Z M8.04444444,8.13888889 L5.91111111,8.13888889 C5.93955556,7.35888889 6.03911111,6.63666667 6.20977778,5.97222222 L8.04444444,5.97222222 L8.04444444,8.13888889 L8.04444444,8.13888889 Z M8.04444444,5.25 L6.42311111,5.25 C6.80711111,4.13777778 7.39022222,3.35777778 8.04444444,3.14111111 L8.04444444,5.25 L8.04444444,5.25 Z M12.6666667,5.25 L11.1306667,5.25 C10.8888889,4.51333333 10.576,3.89222222 10.2062222,3.40111111 C11.1875556,3.76222222 12.0408889,4.41222222 12.6666667,5.25 L12.6666667,5.25 Z M8.75555556,3.14111111 C9.40977778,3.35777778 9.97866667,4.13777778 10.3768889,5.25 L8.75555556,5.25 L8.75555556,3.14111111 L8.75555556,3.14111111 Z M8.75555556,5.97222222 L10.5902222,5.97222222 C10.7608889,6.63666667 10.8604444,7.35888889 10.8888889,8.13888889 L8.75555556,8.13888889 L8.75555556,5.97222222 L8.75555556,5.97222222 Z M8.75555556,8.86111111 L10.8888889,8.86111111 C10.8604444,9.64111111 10.7608889,10.3633333 10.5902222,11.0277778 L8.75555556,11.0277778 L8.75555556,8.86111111 L8.75555556,8.86111111 Z M8.75555556,13.8588889 L8.75555556,11.75 L10.3768889,11.75 C9.97866667,12.8622222 9.40977778,13.6422222 8.75555556,13.8588889 L8.75555556,13.8588889 Z M10.2062222,13.5988889 C10.576,13.1222222 10.8888889,12.4866667 11.1306667,11.75 L12.6666667,11.75 C12.0408889,12.5877778 11.1875556,13.2377778 10.2062222,13.5988889 L10.2062222,13.5988889 Z M13.1217778,11.0277778 L11.3297778,11.0277778 C11.4862222,10.3633333 11.5715556,9.62666667 11.6,8.86111111 L13.7191111,8.86111111 C13.6764444,9.64111111 13.4631111,10.3777778 13.1217778,11.0277778 L13.1217778,11.0277778 Z M13.7191111,8.13888889 L11.6,8.13888889 C11.5715556,7.37333333 11.4862222,6.63666667 11.3297778,5.97222222 L13.1217778,5.97222222 C13.4631111,6.62222222 13.6764444,7.35888889 13.7191111,8.13888889 L13.7191111,8.13888889 Z" fill=' + color + '></path></g></g></g>',
        'height': 16,
        'width': 16,
        'viewBox': '0 0 16 16'
    };
};

},{}],130:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
var information = exports.information = function information() {
    var color = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "#BFBFBF";

    return {
        'svg': '<g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g><g><path d="M8.5,2 C4.91012222,2 2,4.91012222 2,8.5 C2,12.0898778 4.91012222,15 8.5,15 C12.0898778,15 15,12.0898778 15,8.5 C15,4.91012222 12.0898778,2 8.5,2 L8.5,2 Z M8.5,4.39228889 C9.13815556,4.39228889 9.65555556,4.90968889 9.65555556,5.54784444 C9.65555556,6.186 9.13815556,6.7034 8.5,6.7034 C7.86184444,6.7034 7.34444444,6.186 7.34444444,5.54784444 C7.34444444,4.90968889 7.86184444,4.39228889 8.5,4.39228889 L8.5,4.39228889 Z M10.2333333,12.3188222 C10.2333333,12.4782889 10.1039111,12.5444444 9.94444444,12.5444444 L7.05555556,12.5444444 C6.89608889,12.5444444 6.76666667,12.4782889 6.76666667,12.3188222 L6.76666667,12.1743778 C6.76666667,12.0147667 6.89608889,11.8222222 7.05555556,11.8222222 L7.34444444,11.8222222 L7.34444444,8.21111111 L7.05555556,8.21111111 C6.89608889,8.21111111 6.76666667,8.14495556 6.76666667,7.98548889 L6.76666667,7.84104444 C6.76666667,7.68143333 6.89608889,7.48888889 7.05555556,7.48888889 L9.36666667,7.48888889 C9.52613333,7.48888889 9.65555556,7.68143333 9.65555556,7.84104444 L9.65555556,7.98548889 L9.65555556,11.8222222 L9.94444444,11.8222222 C10.1039111,11.8222222 10.2333333,12.0147667 10.2333333,12.1743778 L10.2333333,12.3188222 L10.2333333,12.3188222 Z" fill=' + color + '></path><rect x="0" y="0" width="16" height="16"></rect></g></g></g>',
        'height': 16,
        'width': 16,
        'viewBox': '0 0 16 16'
    };
};

},{}],131:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
var search = exports.search = function search() {
    var color = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "#D8D8D8";

    return {
        'svg': '<g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g><g><g fill=' + color + '><path d="M11.051059,16.0552634 C15.4168701,16.0552634 18.9560592,12.5171346 18.9560592,8.15263168 C18.9560592,3.78812872 15.4168701,0.25 11.051059,0.25 C6.68524796,0.25 3.14605882,3.78812872 3.14605882,8.15263168 C3.14605882,12.5171346 6.68524796,16.0552634 11.051059,16.0552634 Z M11.051059,13.8342105 C14.1956642,13.8342105 16.7448704,11.2857682 16.7448704,8.14210518 C16.7448704,4.99844219 14.1956642,2.44999981 11.051059,2.44999981 C7.90645384,2.44999981 5.35724766,4.99844219 5.35724766,8.14210518 C5.35724766,11.2857682 7.90645384,13.8342105 11.051059,13.8342105 Z"></path><rect transform="translate(3.831064, 15.531065) rotate(-315.000000) translate(-3.831064, -15.531065) " x="2.44907139" y="12.7679068" width="2.76398605" height="5.52631579"></rect></g><rect x="0" y="0" width="20" height="19"></rect></g></g></g>',
        'height': 19,
        'width': 20,
        'viewBox': '0 0 20 19'
    };
};

},{}],132:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
var slider = exports.slider = function slider() {
    var color = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "#7F7F7F";

    return {
        'svg': '<g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g><g><g transform="translate(0.000000, 1.000000)"><path d="M14.5,0 L14.5,20" stroke=' + color + ' stroke-linecap="round"></path><path d="M11.5,0 L11.5,20" stroke=' + color + ' stroke-linecap="round"></path><polygon fill=' + color + ' points="19.5 8.66666667 19.5 6 25.4954224 9.99871826 19.5 14 19.5 11.3333333 14 11.3333333 14 8.66666667"></polygon><path d="M6.5,8.66666667 L6.5,6 L0.504943848,10.1793213 L6.5,14 L6.5,11.3333333 L12,11.3333333 L12,8.66666667 L6.5,8.66666667 Z" fill=' + color + '></path></g><rect x="0" y="0" width="26" height="22"></rect></g></g></g>',
        'height': 22,
        'width': 26,
        'viewBox': '0 0 26 22'
    };
};

},{}],133:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
var speechBubble = exports.speechBubble = function speechBubble() {
    var color = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "#BFBFBF";

    return {
        'svg': '<g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g><g><path d="M4.65196957,13.9892799 C4.59908383,13.9674824 4.56477957,13.9158474 4.56477957,13.8586736 L4.56477957,11.6676675 L4.49724305,11.6676675 C3.12024855,11.6676675 2,10.547419 2,9.17042449 L2,4.49724305 C2,3.12024855 3.12024855,2 4.49724305,2 L11.5939372,2 C12.9709317,2 14.0911803,3.12024855 14.0911803,4.49724305 L14.0911803,9.17042449 C14.0911803,10.547419 12.9709317,11.6676675 11.5939372,11.6676675 L7.09686289,11.6676675 L4.80598141,13.958549 C4.77900254,13.9857066 4.74273293,14 4.70610598,14 C4.68788184,14 4.66947903,13.9964266 4.65196957,13.9892799 Z" fill=' + color + '></path><rect x="0" y="0" width="16" height="16"></rect></g></g></g>',
        'height': 16,
        'width': 16,
        'viewBox': '0 0 16 16'
    };
};

},{}],134:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _Color = require('../Color');

var _Color2 = _interopRequireDefault(_Color);

var _IconDictionary = require('./IconDictionary');

var _IconDictionary2 = _interopRequireDefault(_IconDictionary);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Icon = function (_React$Component) {
    _inherits(Icon, _React$Component);

    function Icon(props) {
        _classCallCheck(this, Icon);

        return _possibleConstructorReturn(this, (Icon.__proto__ || Object.getPrototypeOf(Icon)).call(this, props));
    }

    _createClass(Icon, [{
        key: 'render',
        value: function render() {
            var zoom = this.props.zoom.toString();
            var height = 16;
            var width = 16;
            var iconObj = _IconDictionary2.default[this.props.icon] && _IconDictionary2.default[this.props.icon]() || _IconDictionary2.default[this.props.name] && _IconDictionary2.default[this.props.name]();
            if (!iconObj) {
                console.error("ICON:", this.props.icon + " can't not find");
                return null;
            }
            if (!isNaN(parseFloat(zoom, 10))) {
                height = iconObj.height * parseFloat(zoom, 10);
                width = iconObj.width * parseFloat(zoom, 10);
            } else {
                height = iconObj.height;
                width = iconObj.width;
            }
            var styles = {
                color: _Color2.default[this.props.color],
                fill: 'currentcolor',
                height: height,
                verticalAlign: 'middle',
                width: width
            };
            var viewBox = iconObj ? iconObj.viewBox : '0 0 16 16';
            return React.createElement('svg', { viewBox: viewBox, preserveAspectRatio: 'xMidYMid meet', style: styles, dangerouslySetInnerHTML: { __html: this.renderGraphic() } });
        }
    }, {
        key: 'renderGraphic',
        value: function renderGraphic() {
            if (_IconDictionary2.default[this.props.icon] || _IconDictionary2.default[this.props.name]) {
                var getIcon = _IconDictionary2.default[this.props.icon] || _IconDictionary2.default[this.props.name];
                var svg = getIcon(_Color2.default[this.props.color]).svg;
                return svg;
            }
            return null;
        }
    }]);

    return Icon;
}(React.Component);

exports.default = Icon;


Icon.propTypes = {
    color: React.PropTypes.string,
    icon: React.PropTypes.string,
    name: React.PropTypes.string,
    zoom: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.number])
};

Icon.defaultProps = {
    zoom: 1
};

},{"../Color":86,"./IconDictionary":118,"react":"react"}],135:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _mdcClassnames = require('mdc-classnames');

var _htmlSubString = require('./util/htmlSubString');

var _Popover = require('../Popover/');

var _Popover2 = _interopRequireDefault(_Popover);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var styles = require('./style.less');
var cx = _mdcClassnames.setCssModule.bind(styles);

var Label = function (_React$Component) {
    _inherits(Label, _React$Component);

    function Label(props) {
        _classCallCheck(this, Label);

        return _possibleConstructorReturn(this, (Label.__proto__ || Object.getPrototypeOf(Label)).call(this, props));
    }

    _createClass(Label, [{
        key: 'render',
        value: function render() {
            var label = this.renderLabel();
            if (this.props.tooltip) {
                var overlay = React.createElement(
                    'div',
                    { className: cx('tooltip-overlay') },
                    React.createElement(
                        'span',
                        { className: cx('Body-Text-Prompt') },
                        this.props.tooltip
                    )
                );
                return React.createElement(_Popover2.default, { trigger: 'hover', toolTips: true, overlay: overlay, children: label }); /* eslint react/jsx-boolean-value: 0 */
            } else {
                return label;
            }
        }
    }, {
        key: 'renderLabel',
        value: function renderLabel() {
            /* eslint complexity: 0 max-statements:0 */
            var elemProps = {};
            if (this.props.for) {
                elemProps.htmlFor = this.props.for;
            }
            var classNameArray = this.props.className ? this.props.className.split(' ') : [];
            if (this.props.color) {
                classNameArray.push(this.props.color);
            }
            if (this.props.type) {
                classNameArray.push(this.props.type);
            }
            var classes = cx.apply(undefined, _toConsumableArray(classNameArray).concat([{
                basicLabel: true,
                block: this.props.block,
                disabled: this.props.disabled
            }]));
            var tips = false;
            var showText = this.props.children;
            var maxlength = !isNaN(this.props.maxLength) ? parseInt(this.props.maxLength, 10) : -1;
            if (maxlength > 0 && showText.length > maxlength) {
                showText = (0, _htmlSubString.htmlSubstring)(showText, maxlength);
                tips = true;
            }
            if (tips) {
                elemProps.title = this.props.children;
            }
            if (this.props.title) {
                elemProps.title = this.props.children;
            }
            if (this.props.for) {
                return React.createElement(
                    'label',
                    _extends({ className: classes }, elemProps),
                    showText
                );
            }
            if (this.props.block) {
                if (!this.props.html) {
                    return React.createElement(
                        'div',
                        _extends({ className: classes }, elemProps),
                        showText
                    );
                }
                return React.createElement('div', _extends({ className: classes }, elemProps, { dangerouslySetInnerHTML: { __html: showText } }));
            } else {
                if (!this.props.html) {
                    return React.createElement(
                        'span',
                        _extends({ className: classes }, elemProps),
                        showText
                    );
                }
                return React.createElement('span', _extends({ className: classes }, elemProps, { dangerouslySetInnerHTML: { __html: showText } }));
            }
        }
    }]);

    return Label;
}(React.Component);

exports.default = Label;


Label.propTypes = {
    block: React.PropTypes.bool,
    children: React.PropTypes.any.isRequired,
    className: React.PropTypes.string,
    color: React.PropTypes.string,
    disabled: React.PropTypes.bool,
    for: React.PropTypes.string,
    html: React.PropTypes.bool,
    maxLength: React.PropTypes.string,
    tips: React.PropTypes.bool,
    title: React.PropTypes.any,
    tooltip: React.PropTypes.string,
    // truncateMode: React.PropTypes.oneOf(['right', 'left', 'middle', 'none']),
    type: React.PropTypes.oneOf(['Title-Page', 'Title-Page-Light', 'Title-Section-Primary', 'Title-Section-Primary-Light', 'TITLE-SUBTITLE', 'Title-Section-Secondary', 'TITLE-MODULE', 'LABEL-STANDARD', 'LABEL-ATTRIBUTION', 'Label-Footnote', 'Rating', 'Header-Primary', 'Body-Primary', 'Header-Secondary', 'Header-Secondary-Bold', 'Body-Secondary', 'Header-Tertiary', 'Header-Tertiary-Bold', 'Body-Tertiary', 'Body-Tertiary-Med', 'Body-Text-Prompt', 'Link-DkBlue', 'LINK-GOLD', 'LINK-GREY', 'LABEL-SIDENAV-TITLE', 'LABEL-STANDARD-SEMIBOLD'])
};

},{"../Popover/":177,"./style.less":137,"./util/htmlSubString":138,"mdc-classnames":"mdc-classnames","react":"react"}],136:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _mdcClassnames = require('mdc-classnames');

var _htmlSubString = require('./util/htmlSubString');

var _Popover = require('../Popover/');

var _Popover2 = _interopRequireDefault(_Popover);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var styles = require('./style.less');
var cx = _mdcClassnames.setCssModule.bind(styles);

var Label = function (_React$Component) {
    _inherits(Label, _React$Component);

    function Label(props) {
        _classCallCheck(this, Label);

        return _possibleConstructorReturn(this, (Label.__proto__ || Object.getPrototypeOf(Label)).call(this, props));
    }

    _createClass(Label, [{
        key: 'render',
        value: function render() {
            var label = this.renderLabel();
            if (this.props.tooltip) {
                var overlay = React.createElement(
                    'div',
                    { className: cx('tooltip-overlay') },
                    React.createElement(
                        'span',
                        { className: cx('Body-Text-Prompt') },
                        this.props.tooltip
                    )
                );
                return React.createElement(_Popover2.default, { trigger: 'hover', toolTips: true, overlay: overlay, children: label }); /* eslint react/jsx-boolean-value: 0 */
            } else {
                return label;
            }
        }
    }, {
        key: 'renderLabel',
        value: function renderLabel() {
            /* eslint complexity: 0 max-statements:0 */
            var elemProps = {};
            if (this.props.for) {
                elemProps.htmlFor = this.props.for;
            }
            var classNameArray = this.props.className ? this.props.className.split(' ') : [];
            if (this.props.color) {
                classNameArray.push(this.props.color);
            }
            if (this.props.type) {
                classNameArray.push(this.props.type);
            }
            var classes = cx.apply(undefined, _toConsumableArray(classNameArray).concat([{
                basicLabel: true,
                block: this.props.block,
                disabled: this.props.disabled
            }]));
            var tips = false;
            var showText = this.props.children;
            var maxlength = !isNaN(this.props.maxLength) ? parseInt(this.props.maxLength, 10) : -1;
            if (maxlength > 0 && showText.length > maxlength) {
                showText = (0, _htmlSubString.htmlSubstring)(showText, maxlength);
                tips = true;
            }
            if (tips) {
                elemProps.title = this.props.children;
            }
            if (this.props.title) {
                elemProps.title = this.props.children;
            }
            if (this.props.for) {
                return React.createElement(
                    'label',
                    _extends({ className: classes }, elemProps),
                    showText
                );
            }
            if (this.props.block) {
                if (!this.props.html) {
                    return React.createElement(
                        'div',
                        _extends({ className: classes }, elemProps),
                        showText
                    );
                }
                return React.createElement('div', _extends({ className: classes }, elemProps, { dangerouslySetInnerHTML: { __html: showText } }));
            } else {
                if (!this.props.html) {
                    return React.createElement(
                        'span',
                        _extends({ className: classes }, elemProps),
                        showText
                    );
                }
                return React.createElement('span', _extends({ className: classes }, elemProps, { dangerouslySetInnerHTML: { __html: showText } }));
            }
        }
    }]);

    return Label;
}(React.Component);

exports.default = Label;


Label.propTypes = {
    block: React.PropTypes.bool,
    children: React.PropTypes.any.isRequired,
    className: React.PropTypes.string,
    color: React.PropTypes.string,
    disabled: React.PropTypes.bool,
    for: React.PropTypes.string,
    html: React.PropTypes.bool,
    maxLength: React.PropTypes.string,
    tips: React.PropTypes.bool,
    title: React.PropTypes.any,
    tooltip: React.PropTypes.string,
    // truncateMode: React.PropTypes.oneOf(['right', 'left', 'middle', 'none']),
    type: React.PropTypes.oneOf(['Title-Page', 'Title-Page-Light', 'Title-Section-Primary', 'Title-Section-Primary-Light', 'TITLE-SUBTITLE', 'Title-Section-Secondary', 'TITLE-MODULE', 'LABEL-STANDARD', 'LABEL-ATTRIBUTION', 'Label-Footnote', 'Rating', 'Header-Primary', 'Body-Primary', 'Header-Secondary', 'Header-Secondary-Bold', 'Body-Secondary', 'Header-Tertiary', 'Header-Tertiary-Bold', 'Body-Tertiary', 'Body-Tertiary-Med', 'Body-Text-Prompt', 'Link-DkBlue', 'LINK-GOLD', 'LINK-GREY', 'LABEL-SIDENAV-TITLE', 'LABEL-STANDARD-SEMIBOLD'])
};

},{"../Popover/":177,"./style.less":137,"./util/htmlSubString":138,"mdc-classnames":"mdc-classnames","react":"react"}],137:[function(require,module,exports){
module.exports = {"Title-Page":"neptune_Title-Page_1vd8m","Title-Page-Light":"neptune_Title-Page-Light_1vd8m","Title-Section-Primary":"neptune_Title-Section-Primary_1vd8m","Title-Section-Primary-Light":"neptune_Title-Section-Primary-Light_1vd8m","TITLE-SUBTITLE":"neptune_TITLE-SUBTITLE_1vd8m","Title-Section-Secondary":"neptune_Title-Section-Secondary_1vd8m","TITLE-MODULE":"neptune_TITLE-MODULE_1vd8m","LABEL-STANDARD":"neptune_LABEL-STANDARD_1vd8m","LABEL-STANDARD-SEMIBOLD":"neptune_LABEL-STANDARD-SEMIBOLD_1vd8m","LABEL-ATTRIBUTION":"neptune_LABEL-ATTRIBUTION_1vd8m","LABEL-ATTRIBUTION-MA":"neptune_LABEL-ATTRIBUTION-MA_1vd8m","LABEL-ATTRIBUTION-MIS":"neptune_LABEL-ATTRIBUTION-MIS_1vd8m","Label-Footnote":"neptune_Label-Footnote_1vd8m","Rating":"neptune_Rating_1vd8m","Header-Primary":"neptune_Header-Primary_1vd8m","Body-Primary":"neptune_Body-Primary_1vd8m","Header-Secondary":"neptune_Header-Secondary_1vd8m","Header-Secondary-Bold":"neptune_Header-Secondary-Bold_1vd8m","Body-Secondary":"neptune_Body-Secondary_1vd8m","TABLE-SECTION":"neptune_TABLE-SECTION_1vd8m","Header-Tertiary":"neptune_Header-Tertiary_1vd8m","Header-Tertiary-Bold":"neptune_Header-Tertiary-Bold_1vd8m","Body-Tertiary":"neptune_Body-Tertiary_1vd8m","Body-Tertiary-Med":"neptune_Body-Tertiary-Med_1vd8m","Body-Text-Prompt":"neptune_Body-Text-Prompt_1vd8m","Link-DkBlue":"neptune_Link-DkBlue_1vd8m","LINK-GOLD":"neptune_LINK-GOLD_1vd8m","LINK-GREY":"neptune_LINK-GREY_1vd8m","LABEL-SIDENAV-TITLE":"neptune_LABEL-SIDENAV-TITLE_1vd8m","MIS-BLUE":"neptune_MIS-BLUE_1vd8m","MA-BLUE":"neptune_MA-BLUE_1vd8m","MOODYS-BLUE":"neptune_MOODYS-BLUE_1vd8m","HIGHLIGHT-BLUE":"neptune_HIGHLIGHT-BLUE_1vd8m","GOLD":"neptune_GOLD_1vd8m","GREY-1":"neptune_GREY-1_1vd8m","GREY-2":"neptune_GREY-2_1vd8m","GREY-3":"neptune_GREY-3_1vd8m","GREY-4":"neptune_GREY-4_1vd8m","BLACK":"neptune_BLACK_1vd8m","RED":"neptune_RED_1vd8m","GREEN":"neptune_GREEN_1vd8m","icon_down_arrow":"neptune_icon_down_arrow_1vd8m","icon_up_arrow":"neptune_icon_up_arrow_1vd8m","icon_warning_icon":"neptune_icon_warning_icon_1vd8m","icon_select_arrows":"neptune_icon_select_arrows_1vd8m","icon_triangle_down":"neptune_icon_triangle_down_1vd8m","icon_triangle_up":"neptune_icon_triangle_up_1vd8m","icon_x_icon":"neptune_icon_x_icon_1vd8m","icon_right_arrow":"neptune_icon_right_arrow_1vd8m","MIS-BLUE-FONT":"neptune_MIS-BLUE-FONT_1vd8m","MIS-BLUE-BG":"neptune_MIS-BLUE-BG_1vd8m","MIS-BLUE-BORDER":"neptune_MIS-BLUE-BORDER_1vd8m","MA-BLUE-FONT":"neptune_MA-BLUE-FONT_1vd8m","MA-BLUE-BG":"neptune_MA-BLUE-BG_1vd8m","MA-BLUE-BORDER":"neptune_MA-BLUE-BORDER_1vd8m","MOODYS-BLUE-FONT":"neptune_MOODYS-BLUE-FONT_1vd8m","MOODYS-BLUE-BG":"neptune_MOODYS-BLUE-BG_1vd8m","MOODYS-BLUE-BORDER":"neptune_MOODYS-BLUE-BORDER_1vd8m","HIGHLIGHT-BLUE-FONT":"neptune_HIGHLIGHT-BLUE-FONT_1vd8m","HIGHLIGHT-BLUE-BG":"neptune_HIGHLIGHT-BLUE-BG_1vd8m","HIGHLIGHT-BLUE-BORDER":"neptune_HIGHLIGHT-BLUE-BORDER_1vd8m","GOLD-FONT":"neptune_GOLD-FONT_1vd8m","GOLD-BG":"neptune_GOLD-BG_1vd8m","GOLD-BORDER":"neptune_GOLD-BORDER_1vd8m","GREY-1-FONT":"neptune_GREY-1-FONT_1vd8m","GREY-1-BG":"neptune_GREY-1-BG_1vd8m","GREY-1-BORDER":"neptune_GREY-1-BORDER_1vd8m","GREY-2-FONT":"neptune_GREY-2-FONT_1vd8m","GREY-2-BG":"neptune_GREY-2-BG_1vd8m","GREY-2-BORDER":"neptune_GREY-2-BORDER_1vd8m","GREY-3-FONT":"neptune_GREY-3-FONT_1vd8m","GREY-3-BG":"neptune_GREY-3-BG_1vd8m","GREY-3-BORDER":"neptune_GREY-3-BORDER_1vd8m","GREY-4-FONT":"neptune_GREY-4-FONT_1vd8m","GREY-4-BG":"neptune_GREY-4-BG_1vd8m","GREY-4-BORDER":"neptune_GREY-4-BORDER_1vd8m","BLACK-FONT":"neptune_BLACK-FONT_1vd8m","BLACK-BG":"neptune_BLACK-BG_1vd8m","BLACK-BORDER":"neptune_BLACK-BORDER_1vd8m","RED-FONT":"neptune_RED-FONT_1vd8m","RED-BG":"neptune_RED-BG_1vd8m","RED-BORDER":"neptune_RED-BORDER_1vd8m","GREEN-FONT":"neptune_GREEN-FONT_1vd8m","GREEN-BG":"neptune_GREEN-BG_1vd8m","GREEN-BORDER":"neptune_GREEN-BORDER_1vd8m","block":"neptune_block_1vd8m","disabled":"neptune_disabled_1vd8m","basicLabel":"neptune_basicLabel_1vd8m","tooltip-overlay":"neptune_tooltip-overlay_1vd8m"}
},{}],138:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.htmlSubstring = undefined;

var _lodash = require('lodash');

var _ = _interopRequireWildcard(_lodash);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var updateResultStrV = function updateResultStrV(result, htmlString) {
    var resultLength = result.length;
    var length = htmlString.length - resultLength;
    var j = 0;
    var arrayOfWordEndTag = [' ', ',', '?', '.', ';', '>', '<'];
    var newLength = resultLength;
    for (j = 1; j < length; j++) {
        newLength = resultLength + j;
        var index = htmlString.substring(newLength - 1, newLength);
        if (!(_.indexOf(arrayOfWordEndTag, index) < 0) && !/\b/.test(index)) {
            break;
        }
        result += index;
    }
    result += ' ...';
    return result;
};

var htmlSubstring = exports.htmlSubstring = function htmlSubstring(htmlString, truncateNum) {
    // eslint-disable-line max-statements
    if (!htmlString) {
        return htmlString;
    }

    var htmlText = htmlString.replace(/<(?:.|\n)*?>/gm, '');
    var m = '';
    var htmlReg = /<([^>\s]*)[^>]*>/g;
    var stack = [];
    var lasti = 0;
    var result = '';
    // for each tag, while we don't have enough characters
    while (htmlReg.exec(htmlString) && truncateNum) {
        m = htmlReg.exec(htmlString);
        // get the text substring between the last tag and this one
        var temp = htmlString.substring(lasti, m.index).substr(0, truncateNum);
        // append to the result and count the number of characters added
        result += temp;
        truncateNum -= temp.length;
        lasti = htmlReg.lastIndex;
        if (truncateNum) {
            result += m[0];
            if (m[1].indexOf('/') === 0) {
                // if this is a closing tag, than pop the stack (does not account for bad html)
                stack.pop();
            } else if (m[1].lastIndexOf('/') !== m[1].length - 1) {
                // if this is not a self closing tag than push it in the stack
                stack.push(m[1]);
            }
        }
    }
    // add the remainder of the string, if needed (there are no more tags in here)
    result += htmlString.substr(lasti, truncateNum);
    if (htmlText.length > truncateNum) {
        result = updateResultStrV(result, htmlString);
    }
    // fix the unclosed tags
    while (stack.length) {
        result += '</' + stack.pop() + '>';
    }
    return result;
};

},{"lodash":"lodash"}],139:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _mdcClassnames = require('mdc-classnames');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var styles = require('./style.less');
var cx = _mdcClassnames.setCssModule.bind(styles);

var Link = function (_React$Component) {
    _inherits(Link, _React$Component);

    function Link(props) {
        _classCallCheck(this, Link);

        return _possibleConstructorReturn(this, (Link.__proto__ || Object.getPrototypeOf(Link)).call(this, props));
    }

    _createClass(Link, [{
        key: 'render',
        value: function render() {
            var elemProps = {};
            if (this.props.disabled) {
                elemProps.disabled = true;
            }
            if (this.props.href) {
                elemProps.href = this.props.href;
            }
            var classes = {};
            if (this.props.target) {
                elemProps.target = this.props.target;
            }
            switch (this.props.type) {
                case 'Gold':
                    classes = cx(styles.linkGold, { disabled: this.props.disabled }, this.props.className);
                    break;
                case 'Blue':
                    classes = cx(styles.linkBlue, { disabled: this.props.disabled }, this.props.className);
                    break;
                case 'Grey':
                    classes = cx(styles.linkGrey, { disabled: this.props.disabled }, this.props.className);
                    break;
                default:
                    classes = cx(styles.linkBlue, { disabled: this.props.disabled }, this.props.className);
                    break;
            }
            return React.createElement(
                'a',
                _extends({}, elemProps, { onClick: this.props.onClick, className: classes, style: this.props.style }),
                this.props.children
            );
        }
    }]);

    return Link;
}(React.Component);

exports.default = Link;


Link.propTypes = {
    href: React.PropTypes.string
};

},{"./style.less":140,"mdc-classnames":"mdc-classnames","react":"react"}],140:[function(require,module,exports){
module.exports = {"Title-Page":"neptune_Title-Page_ldkjs","Title-Page-Light":"neptune_Title-Page-Light_ldkjs","Title-Section-Primary":"neptune_Title-Section-Primary_ldkjs","Title-Section-Primary-Light":"neptune_Title-Section-Primary-Light_ldkjs","TITLE-SUBTITLE":"neptune_TITLE-SUBTITLE_ldkjs","Title-Section-Secondary":"neptune_Title-Section-Secondary_ldkjs","TITLE-MODULE":"neptune_TITLE-MODULE_ldkjs","LABEL-STANDARD":"neptune_LABEL-STANDARD_ldkjs","LABEL-STANDARD-SEMIBOLD":"neptune_LABEL-STANDARD-SEMIBOLD_ldkjs","LABEL-ATTRIBUTION":"neptune_LABEL-ATTRIBUTION_ldkjs","LABEL-ATTRIBUTION-MA":"neptune_LABEL-ATTRIBUTION-MA_ldkjs","LABEL-ATTRIBUTION-MIS":"neptune_LABEL-ATTRIBUTION-MIS_ldkjs","Label-Footnote":"neptune_Label-Footnote_ldkjs","Rating":"neptune_Rating_ldkjs","Header-Primary":"neptune_Header-Primary_ldkjs","Body-Primary":"neptune_Body-Primary_ldkjs","Header-Secondary":"neptune_Header-Secondary_ldkjs","Header-Secondary-Bold":"neptune_Header-Secondary-Bold_ldkjs","Body-Secondary":"neptune_Body-Secondary_ldkjs","TABLE-SECTION":"neptune_TABLE-SECTION_ldkjs","Header-Tertiary":"neptune_Header-Tertiary_ldkjs","Header-Tertiary-Bold":"neptune_Header-Tertiary-Bold_ldkjs","Body-Tertiary":"neptune_Body-Tertiary_ldkjs","Body-Tertiary-Med":"neptune_Body-Tertiary-Med_ldkjs","Body-Text-Prompt":"neptune_Body-Text-Prompt_ldkjs","Link-DkBlue":"neptune_Link-DkBlue_ldkjs","LINK-GOLD":"neptune_LINK-GOLD_ldkjs","LINK-GREY":"neptune_LINK-GREY_ldkjs","LABEL-SIDENAV-TITLE":"neptune_LABEL-SIDENAV-TITLE_ldkjs","MIS-BLUE":"neptune_MIS-BLUE_ldkjs","MA-BLUE":"neptune_MA-BLUE_ldkjs","MOODYS-BLUE":"neptune_MOODYS-BLUE_ldkjs","HIGHLIGHT-BLUE":"neptune_HIGHLIGHT-BLUE_ldkjs","GOLD":"neptune_GOLD_ldkjs","GREY-1":"neptune_GREY-1_ldkjs","GREY-2":"neptune_GREY-2_ldkjs","GREY-3":"neptune_GREY-3_ldkjs","GREY-4":"neptune_GREY-4_ldkjs","BLACK":"neptune_BLACK_ldkjs","RED":"neptune_RED_ldkjs","GREEN":"neptune_GREEN_ldkjs","icon_down_arrow":"neptune_icon_down_arrow_ldkjs","icon_up_arrow":"neptune_icon_up_arrow_ldkjs","icon_warning_icon":"neptune_icon_warning_icon_ldkjs","icon_select_arrows":"neptune_icon_select_arrows_ldkjs","icon_triangle_down":"neptune_icon_triangle_down_ldkjs","icon_triangle_up":"neptune_icon_triangle_up_ldkjs","icon_x_icon":"neptune_icon_x_icon_ldkjs","icon_right_arrow":"neptune_icon_right_arrow_ldkjs","MIS-BLUE-FONT":"neptune_MIS-BLUE-FONT_ldkjs","MIS-BLUE-BG":"neptune_MIS-BLUE-BG_ldkjs","MIS-BLUE-BORDER":"neptune_MIS-BLUE-BORDER_ldkjs","MA-BLUE-FONT":"neptune_MA-BLUE-FONT_ldkjs","MA-BLUE-BG":"neptune_MA-BLUE-BG_ldkjs","MA-BLUE-BORDER":"neptune_MA-BLUE-BORDER_ldkjs","MOODYS-BLUE-FONT":"neptune_MOODYS-BLUE-FONT_ldkjs","MOODYS-BLUE-BG":"neptune_MOODYS-BLUE-BG_ldkjs","MOODYS-BLUE-BORDER":"neptune_MOODYS-BLUE-BORDER_ldkjs","HIGHLIGHT-BLUE-FONT":"neptune_HIGHLIGHT-BLUE-FONT_ldkjs","HIGHLIGHT-BLUE-BG":"neptune_HIGHLIGHT-BLUE-BG_ldkjs","HIGHLIGHT-BLUE-BORDER":"neptune_HIGHLIGHT-BLUE-BORDER_ldkjs","GOLD-FONT":"neptune_GOLD-FONT_ldkjs","GOLD-BG":"neptune_GOLD-BG_ldkjs","GOLD-BORDER":"neptune_GOLD-BORDER_ldkjs","GREY-1-FONT":"neptune_GREY-1-FONT_ldkjs","GREY-1-BG":"neptune_GREY-1-BG_ldkjs","GREY-1-BORDER":"neptune_GREY-1-BORDER_ldkjs","GREY-2-FONT":"neptune_GREY-2-FONT_ldkjs","GREY-2-BG":"neptune_GREY-2-BG_ldkjs","GREY-2-BORDER":"neptune_GREY-2-BORDER_ldkjs","GREY-3-FONT":"neptune_GREY-3-FONT_ldkjs","GREY-3-BG":"neptune_GREY-3-BG_ldkjs","GREY-3-BORDER":"neptune_GREY-3-BORDER_ldkjs","GREY-4-FONT":"neptune_GREY-4-FONT_ldkjs","GREY-4-BG":"neptune_GREY-4-BG_ldkjs","GREY-4-BORDER":"neptune_GREY-4-BORDER_ldkjs","BLACK-FONT":"neptune_BLACK-FONT_ldkjs","BLACK-BG":"neptune_BLACK-BG_ldkjs","BLACK-BORDER":"neptune_BLACK-BORDER_ldkjs","RED-FONT":"neptune_RED-FONT_ldkjs","RED-BG":"neptune_RED-BG_ldkjs","RED-BORDER":"neptune_RED-BORDER_ldkjs","GREEN-FONT":"neptune_GREEN-FONT_ldkjs","GREEN-BG":"neptune_GREEN-BG_ldkjs","GREEN-BORDER":"neptune_GREEN-BORDER_ldkjs","linkGold":"neptune_linkGold_ldkjs","disabled":"neptune_disabled_ldkjs","linkBlue":"neptune_linkBlue_ldkjs","linkGrey":"neptune_linkGrey_ldkjs"}
},{}],141:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
/* eslint-disable */

var $ = require('jquery');
var Draggable = require('./util/draggable').default;
var getRealWidth = function getRealWidth(aoColumn) {
    return parseInt(aoColumn.sWidth.replace('px', ''));
};
var initDragHandler = function initDragHandler($wrapper, api) {
    var $resizeHandler = $wrapper.find('.resize_handler');
    var $resizeDivider = $wrapper.find('.resize_divider');
    var aoColumn = api.settings()[0].aoColumns[0];
    var resizeOffset = 23;
    var resizeHandlerWidth = 13; // 6px = half width of Resize Handler Bar
    var firstColumnWidth = getRealWidth(aoColumn) + resizeOffset;
    $resizeHandler.css('left', firstColumnWidth - resizeHandlerWidth);
    $resizeDivider.css('height', $wrapper.find('.DTFC_ScrollWrapper').height());
    var dragOptions = {
        limit: {
            x: [firstColumnWidth - resizeHandlerWidth, firstColumnWidth * 3],
            y: $resizeHandler.position().top
        },
        onDrag: function onDrag(element, x, y, event) {
            //$resizeDivider.css('left', $resizeHandler.position().left + resizeHalfWidth); 
        },
        onDragStart: function onDragStart(element, x, y, event) {
            $resizeDivider.css('background-color', '#000');
            //$resizeDivider.css('left', $resizeHandler.position().left + resizeHalfWidth);
        },
        onDragEnd: function onDragEnd(element, x, y, event) {
            $resizeDivider.css('background-color', 'transparent');
            var newWidth = $resizeHandler.position().left + resizeHandlerWidth - resizeOffset + 'px';
            aoColumn.sWidthOrig = aoColumn.sWidth = aoColumn.width = newWidth;
            api.columns.adjust();
        }
    };
    new Draggable($resizeHandler[0], dragOptions);
};
var adjustFixedColumnsWidth = function adjustFixedColumnsWidth($wrapper, api) {
    var aoColumn = api.settings()[0].aoColumns[0];
    var $firstTh = $wrapper.find('.DTFC_LeftHeadWrapper, .DTFC_LeftBodyWrapper').find('.neptuneTable > thead > tr:eq(0) th:eq(0)');
    $firstTh.css('width', aoColumn.sWidth);
};
var addDragHandler = function addDragHandler(wrapper, api, options) {
    var leftColumns = options.fixedColumns.leftColumns || 0;
    if (leftColumns === 0) return;
    var $wrapper = $(wrapper);
    var $divDivider = $("<div class='resize_handler'><div class='resize_divider'></div></div>");
    $wrapper.find('.DTFC_LeftBodyWrapper').after($divDivider);
    initDragHandler($wrapper, api);
    api.on('column-sizing.dt', function () {
        adjustFixedColumnsWidth($wrapper, api);
    });
};
exports.default = addDragHandler;

},{"./util/draggable":149,"jquery":"jquery"}],142:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
/* eslint-disable */

var $ = require('jquery');
var doAdjustScrollbar = function doAdjustScrollbar($wrapper, leftColumns, rightColumns) {
    rightColumns = rightColumns || 0;
    var $scrollWrapper = $wrapper.find('.dataTables_scroll');
    var $headerInner = $scrollWrapper.find('.dataTables_scrollHeadInner');
    var $outer = $scrollWrapper.find('.dataTables_scrollBody');
    var $inner = $outer.children('table');
    var leftFixedColWidth = $wrapper.find('.DTFC_LeftWrapper').width();
    var rightFixedColWidth = rightColumns ? $wrapper.find('.DTFC_RightWrapper').width() : 0;
    var fixedColWidth = leftFixedColWidth + rightFixedColWidth;
    var outerWidth = $scrollWrapper.width();
    $outer.css({ 'margin-left': leftFixedColWidth + 'px', 'width': outerWidth - fixedColWidth + 'px' });
    var innerWidth = $headerInner.width();
    $inner.css({
        'margin-left': -leftFixedColWidth + 'px',
        'width': innerWidth - rightFixedColWidth + 'px'
    });
    if (rightColumns) {
        var $trs = $inner.find('thead > tr, tbody > tr');
        for (var i = 0; i < $trs.length; i++) {
            var $tds = $trs.eq(i).children();
            if ($tds.length > rightColumns) {
                $tds.slice(-rightColumns).hide();
            }
        }
    }
};
var adjustScrollbar = function adjustScrollbar(wrapper, api, options) {
    var _options$fixedColumns = options.fixedColumns;
    var leftColumns = _options$fixedColumns.leftColumns;
    var rightColumns = _options$fixedColumns.rightColumns;

    var $wrapper = $(wrapper);
    var callback = function callback() {
        doAdjustScrollbar($wrapper, leftColumns, rightColumns);
    };
    callback();
    api.on('column-sizing.dt', function () {
        callback();
    });
};
exports.default = adjustScrollbar;

},{"jquery":"jquery"}],143:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _debounce = require('./util/debounce');

var _debounce2 = _interopRequireDefault(_debounce);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable */

var $ = require('jquery');

var getDefaultCallback = function getDefaultCallback(options) {
    var rowGoupingCallback = function () {
        var $groupTrs;
        var $headerFirstTh;
        var origText;
        var callback = function callback(isShow, $headWrappers, api, scrollTop, headerHeight) {
            $groupTrs = $groupTrs || $(api.table().node()).find('tr.group');
            $headerFirstTh = $headerFirstTh || $headWrappers.find('th:eq(0)').slice(0, 2);
            if (!isShow) {
                origText = origText || $headerFirstTh.eq(0).text();
                $headerFirstTh.text(origText);
                return;
            }
            for (var i = 0; i < $groupTrs.length; i++) {
                var $tr = $groupTrs.eq(i);
                if (scrollTop > $tr.offset().top - headerHeight) {
                    $headerFirstTh.text($tr.children().first().text());
                }
            }
        };
        return callback;
    }();
    return options.rowGroupingIndex > -1 ? rowGoupingCallback : function () {};
};
var handleFixedColumns = function handleFixedColumns($scrollHead, $scrollWrapper, $wrapper, api) {
    var $leftBodyWrapper = $wrapper.find('.DTFC_LeftBodyWrapper');
    var $leftHeadWrapper = $leftBodyWrapper.prev().width($leftBodyWrapper.width());
    var $rightBodyWrapper = $wrapper.find('.DTFC_RightBodyWrapper');
    var $rightHeadWrapper = $rightBodyWrapper.prev().width($rightBodyWrapper.width());
    api.on('column-sizing.dt', function () {
        $scrollHead.width($scrollWrapper.width());
        $leftHeadWrapper.width($leftBodyWrapper.width());
    });
    return $scrollHead.add($leftHeadWrapper).add($rightHeadWrapper);
};
var initFixedHeader = function initFixedHeader(wrapper, api, options) {
    var $wrapper = $(wrapper);
    var $scrollHead = $wrapper.find('.dataTables_scrollHead');
    var $scrollWrapper = $scrollHead.parent();
    $scrollHead.width($scrollWrapper.width());
    var $headWrappers = $scrollHead;
    if (options.fixedColumns) {
        $headWrappers = handleFixedColumns($scrollHead, $scrollWrapper, $wrapper, api);
    }
    var headerHeight = $scrollHead.height();
    var $placeHolders = $('<div style="display:none;height:' + headerHeight + 'px" />').insertBefore($headWrappers);
    $headWrappers.css({ position: '', left: '' });
    var tableTop = $scrollWrapper.offset().top;
    var scrollParentOffsetTop = 0;
    var $scrollParent = $wrapper.scrollParent();
    if ($scrollParent[0] !== window.document) {
        scrollParentOffsetTop = $scrollParent.offset().top;
        tableTop = $scrollWrapper.offset().top - scrollParentOffsetTop + $scrollParent.scrollTop();
    } else {
        $scrollParent = $(window);
    }
    var tableHeight = $scrollWrapper.height();
    var offsetTop = options.fixedRows.offsetTop || 0;
    var callback = options.fixedRows.callback || getDefaultCallback(options);
    var toggleHeaders = (0, _debounce2.default)(function () {
        var scrollTop = $scrollParent.scrollTop() + offsetTop;
        if (scrollTop > tableTop && scrollTop < tableTop + tableHeight - headerHeight) {
            $headWrappers.addClass('DTFC_fixed_header');
            $headWrappers.css({ top: scrollParentOffsetTop + offsetTop, 'margin-left': -$scrollParent.scrollLeft() });
            $placeHolders.show();
            callback(true, $headWrappers, api, scrollParentOffsetTop || scrollTop, headerHeight);
        } else {
            $headWrappers.removeClass('DTFC_fixed_header');
            $placeHolders.hide();
            callback(false, $headWrappers, api);
        }
    }, 10);
    $scrollParent.scroll(toggleHeaders);
    api.on('destroy.dt', function () {
        $scrollParent.off('scroll', toggleHeaders);
    });
};
exports.default = initFixedHeader;

},{"./util/debounce":148,"jquery":"jquery"}],144:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _reactDom = require('react-dom');

var ReactDOM = _interopRequireWildcard(_reactDom);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable */

var $ = require('jquery');
var dataTables = require('datatables.net');
var dataTablesFixedColumns = require('datatables.net-fixedcolumns');
var registScrollParent = require('./util/scrollParent').default;
var styles = require('../Table/style.less');
var myStyles = require('./style.less');
var addDragHandler = require('./draggable').default;
var adjustScrollbar = require('./fixedColumns').default;
var initFixedHeader = require('./fixedHeader').default;
var initRowGrouping = require('./rowGrouping').default;
var initTreeView = require('./treeView').default;
var defaultOptions = {
    paging: false,
    ordering: false,
    searching: false,
    info: false
};

var LiteTable = function (_React$Component) {
    _inherits(LiteTable, _React$Component);

    function LiteTable(props) {
        _classCallCheck(this, LiteTable);

        return _possibleConstructorReturn(this, (LiteTable.__proto__ || Object.getPrototypeOf(LiteTable)).call(this, props));
    }

    _createClass(LiteTable, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.initialize();
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate(prevProps, prevState) {
            this.destroy();
            this.initialize();
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            this.destroy();
        }
    }, {
        key: 'initialize',
        value: function initialize() {
            this.renderTableNode();
            registScrollParent();
            if (!$.fn.DataTable) {
                dataTables(window, $);
                dataTablesFixedColumns(window, $);
            }
            var options = Object.assign({}, defaultOptions, this.props.options, {});
            if (options.rowGroupingIndex > -1) {
                initRowGrouping(this.tableNode, options);
            }
            this.api = $(this.tableNode).DataTable(options);
            if (options.fixedColumns) {
                addDragHandler(this.wrapperNode, this.api, options);
                adjustScrollbar(this.wrapperNode, this.api, options);
            }
            if (options.fixedRows) {
                initFixedHeader(this.wrapperNode, this.api, options);
            }
            if (options.treeView) {
                initTreeView(this.wrapperNode, this.api, options);
            }
        }
    }, {
        key: 'destroy',
        value: function destroy() {
            if (this.api) {
                this.api.destroy();
                ReactDOM.unmountComponentAtNode(this.wrapperNode);
            }
        }
    }, {
        key: 'renderTableNode',
        value: function renderTableNode() {
            var _this2 = this;

            var $table = React.createElement(
                'table',
                { ref: function ref(i) {
                        return _this2.tableNode = i;
                    }, className: 'neptuneTable' },
                this.props.children
            );
            ReactDOM.render($table, this.wrapperNode);
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            return React.createElement('div', { className: 'LiteTableWrapper', ref: function ref(i) {
                    return _this3.wrapperNode = i;
                }, style: this.props.style });
        }
    }]);

    return LiteTable;
}(React.Component);

exports.default = LiteTable;

LiteTable.propTypes = {
    children: _react.PropTypes.node
};
/*
New Params,
    options:{
        fixedColumns: {
            leftColumns: 1,
            rightColumns: 1,
        },
        fixedRows: {
            offsetTop: 120,
            callback: function (isShow, $headWrappers, api, scrollTop, headerHeight) {
            },
        },
        rowGroupingIndex: -1,
        treeView: {
            identSize: 25,
            toggleAll: false
        }
    }
*/

},{"../Table/style.less":211,"./draggable":141,"./fixedColumns":142,"./fixedHeader":143,"./rowGrouping":145,"./style.less":146,"./treeView":147,"./util/scrollParent":150,"datatables.net":"datatables.net","datatables.net-fixedcolumns":"datatables.net-fixedcolumns","jquery":"jquery","react":"react","react-dom":"react-dom"}],145:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _jquery = require('jquery');

var _jquery2 = _interopRequireDefault(_jquery);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var insertGroupRow = function insertGroupRow(api, bodyNode, colIndex, render) {
    if (!bodyNode) return;
    var $rows = (0, _jquery2.default)('tbody > tr', bodyNode);
    var colSpan = $rows.eq(0).children().length;
    var last = null;
    api.column(colIndex).data().each(function (group, i) {
        if (last === group) return;
        var meta = { row: -1, col: colIndex, settings: {} };
        var displayGroup = render ? render(group, "display", api.data()[0], meta) : group;
        var $groupRow = (0, _jquery2.default)('<tr class="group" ><td colspan="' + colSpan + '">' + displayGroup + '</td></tr>');
        $groupRow.insertBefore($rows.eq(i));
        last = group;
    });
}; /* eslint-disable */

var initRowGrouping = function initRowGrouping(tableNode, options) {
    var colIndex = options.rowGroupingIndex;
    var column = options.columns[colIndex];
    column.width = 0;
    column.visible = false;
    if (!options.fixedColumns) {
        //this wont work with fixed columns
        options.drawCallback = function (settings) {
            var api = this.api();
            insertGroupRow(api, tableNode, colIndex, column.render);
        };
    } else {
        //locked column fixed headers - complicates things a little bit.
        var fnDrawCallback = function fnDrawCallback(left, right) {
            var api = (0, _jquery2.default)(this.dom.body).dataTable().api();
            insertGroupRow(api, tableNode, colIndex, column.render);
            insertGroupRow(api, left.body, colIndex, column.render);
            insertGroupRow(api, right.body, colIndex, function () {
                return '&nbsp;';
            });
            api.columns.adjust();
        };
        Object.assign(options.fixedColumns, { fnDrawCallback: fnDrawCallback });
    }
};
exports.default = initRowGrouping;

},{"jquery":"jquery"}],146:[function(require,module,exports){
arguments[4][3][0].apply(exports,arguments)
},{"dup":3}],147:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
/* eslint-disable */

var $ = require('jquery'); // eslint-disable-line
var getCurrentRow = function getCurrentRow($elem) {
    var $parent = $elem.parent();
    return $parent[0].tagName === "TR" ? $parent : getCurrentRow($parent);
};
var getParentRow = function getParentRow($row, level) {
    var $preRows = $row.prevAll();
    for (var j = 0; j < $preRows.length; j++) {
        if ($preRows.eq(j).attr("depth") < level) {
            return $preRows.eq(j);
        }
    }
    return null;
};
var toggleRow = function toggleRow($btn) {
    var toggleBtn = function toggleBtn($btn, expandFlag) {
        return expandFlag ? $btn.removeClass('togglePlus') : $btn.addClass('togglePlus');
    };
    var toggleRows = function toggleRows($theImg, expandFlag) {
        var $currentRow = getCurrentRow($theImg);
        var srcLevel = +$currentRow.attr('depth');
        var $rows = $currentRow.nextAll();
        var $row;
        for (var i = 0; i < $rows.length; i++) {
            $row = $rows.eq(i);
            var level = $row.attr('depth');
            if (level <= srcLevel) break;
            if (!expandFlag) {
                $row.addClass('mdcHide');
                continue;
            }
            var $parentRow = getParentRow($row, level);
            if (!$parentRow.hasClass('mdcHide') && !$parentRow.find('.toggleBtn').hasClass('togglePlus')) $row.removeClass('mdcHide');
        }
    };
    var isExpand = $btn.hasClass('togglePlus');
    toggleBtn($btn, isExpand);
    toggleRows($btn, isExpand);
};
var hideLeaf = function hideLeaf($trs) {
    for (var i = 0; i < $trs.length; i++) {
        var $tr = $trs.eq(i);
        if ($tr.next().attr('depth') <= $tr.attr('depth') || $tr.next().length === 0) {
            $tr.children("td:eq(0)").find('.toggleBtn').css('visibility', 'hidden');
        }
    }
};
var addButtonAndSetDepth = function addButtonAndSetDepth(api, identSize, $tableNode) {
    $tableNode.find('tbody > tr.group').attr('depth', 0);
    var $trs = $('tbody > tr[role="row"]', $tableNode);
    var origPaddingLeft = $trs.eq(0).css('padding-left').replace('px', '') * 1;
    api.data().each(function (data, i) {
        var depth = data['depth'];
        var $tr = $trs.eq(i);
        $tr.attr('depth', depth);
        var $btn = $('<span />').addClass('toggleBtn');
        var paddingLeft = origPaddingLeft + depth * identSize;
        $tr.children("td:eq(0)").css('padding-left', paddingLeft).prepend($btn);
    });
    hideLeaf($trs);
};
var syncRows = function syncRows($wrapper, $srcTableNode) {
    var $leftTableNode = $wrapper.find('.DTFC_LeftBodyWrapper').find('.neptuneTable');
    var $bodyTableNode = $wrapper.find('.dataTables_scrollBody').find('.neptuneTable');
    var $rightTableNode = $wrapper.find('.DTFC_RightBodyWrapper').find('.neptuneTable');
    if ($leftTableNode.length === 0 && $rightTableNode.length === 0) return;
    var $destTableNode = $leftTableNode.length === 0 ? $rightTableNode : $bodyTableNode.add($rightTableNode);
    var $trs = $('tbody > tr[role="row"]', $srcTableNode);
    for (var i = 0; i < $trs.length; i++) {
        var $destTr = $destTableNode.find('tbody > tr[role="row"]:eq(' + i + ')');
        if ($trs.eq(i).hasClass('mdcHide')) {
            $destTr.addClass('mdcHide');
        } else {
            $destTr.removeClass('mdcHide');
        }
    }
};
var addToggleButton = function addToggleButton($wrapper, api, identSize, $tableNode) {
    if ($tableNode.length === 0) return;
    addButtonAndSetDepth(api, identSize, $tableNode);
    $tableNode.on('click', '.toggleBtn', function () {
        toggleRow($(this));
        syncRows($wrapper, $tableNode);
        api.columns.adjust();
    });
};
var toggleAll = function toggleAll($tableNode, expandFlag) {
    $tableNode.find("tbody > tr[depth='1']").find(".toggleBtn").each(function () {
        var $btn = $(this);
        if (expandFlag === $btn.hasClass("togglePlus")) {
            toggleRow($btn);
        }
    });
};
var addToggleAllButton = function addToggleAllButton($wrapper, api, $bodyWrapper) {
    var $tableNode = $bodyWrapper.find('.neptuneTable');
    var $btn = $('<a class="toggleAllBtn" href="javascript:void(0)">COLLAPSE ALL</a>');
    $btn.click(function () {
        var $this = $(this);
        if ($this.text() === 'COLLAPSE ALL') {
            toggleAll($tableNode, false);
            $this.text('EXPAND ALL');
        } else {
            toggleAll($tableNode, true);
            $this.text('COLLAPSE ALL');
        }
        syncRows($wrapper, $tableNode);
        api.columns.adjust();
    });
    var $headerTableNode = $bodyWrapper.prev().find('.neptuneTable');
    $headerTableNode.find("thead > tr:eq(0)").children().eq(0).append('<span class="toggleAllIcon" />').append($btn);
};
var initTreeView = function initTreeView(wrapper, api, options) {
    var identSize = options.treeView.identSize || 10;
    var $wrapper = $(wrapper);
    var $bodyWrapper = $wrapper.find('.dataTables_scrollBody');
    var $leftBodyWrapper = $wrapper.find('.DTFC_LeftBodyWrapper');
    var $btnBodyWrapper = $leftBodyWrapper.length > 0 ? $leftBodyWrapper : $bodyWrapper;
    addToggleButton($wrapper, api, identSize, $btnBodyWrapper.find('.neptuneTable'));
    if (options.treeView.toggleAll) {
        addToggleAllButton($wrapper, api, $btnBodyWrapper);
    }
};
exports.default = initTreeView;

},{"jquery":"jquery"}],148:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
/* eslint-disable */

var debounce = function debounce(fn, delay) {
    var timer = null;
    return function () {
        var context = this,
            args = arguments;
        clearTimeout(timer);
        timer = setTimeout(function () {
            fn.apply(context, args);
        }, delay);
    };
};
exports.default = debounce;

},{}],149:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/* eslint-disable */

var Draggable = function () {
    function Draggable(element, options) {
        _classCallCheck(this, Draggable);

        this.defaults = {
            // settings
            grid: 0,
            filterTarget: null,
            limit: {
                x: null,
                y: null // [minimum position, maximum position] || position
            },
            threshold: 0,
            // flags
            setCursor: false,
            setPosition: true,
            smoothDrag: true,
            useGPU: true,
            // event hooks
            onDrag: this.noop,
            onDragStart: this.noop,
            onDragEnd: this.noop // function(element, X, Y, event)
        };
        this.env = {
            // CSS vendor-prefixed transform property
            transform: function () {
                var prefixes = ' -o- -ms- -moz- -webkit-'.split(' ');
                var style = document.body.style;
                for (var n = prefixes.length; n--;) {
                    var property = prefixes[n] + 'transform';
                    if (property in style) {
                        return property;
                    }
                }
            }()
        };
        var env = this.env;
        // internal
        var me = this,
            start = this.bind(me.start, me),
            drag = this.bind(me.drag, me),
            stop = this.bind(me.stop, me);
        // sanity check
        if (!this.isElement(element)) {
            throw new TypeError('Draggable expects argument 0 to be an Element');
        }
        // set instance properties
        this.assign(me, {
            // DOM element
            element: element,
            // DOM event handlers
            handlers: {
                start: {
                    mousedown: start,
                    touchstart: start
                },
                move: {
                    mousemove: drag,
                    mouseup: stop,
                    touchmove: drag,
                    touchend: stop
                }
            },
            // options
            options: this.assign({}, this.defaults, options)
        });
        this.dragEvent = {
            started: false,
            x: 0,
            y: 0
        };
        this.addEvent = 'attachEvent' in Element.prototype ? function (element, e, fn) {
            element.attachEvent('on' + e, fn);
        } : function (element, e, fn) {
            element.addEventListener(e, fn, false);
        };
        this.removeEvent = 'attachEvent' in Element.prototype ? function (element, e, fn) {
            element.detachEvent('on' + e, fn);
        } : function (element, e, fn) {
            element.removeEventListener(e, fn);
        };
        // initialize
        me.initialize();
    }

    _createClass(Draggable, [{
        key: 'assign',
        value: function assign() {
            var obj = arguments[0];
            var count = arguments.length;
            for (var n = 1; n < count; n++) {
                var argument = arguments[n];
                for (var key in argument) {
                    obj[key] = argument[key];
                }
            }
            return obj;
        }
    }, {
        key: 'bind',
        value: function bind(fn, context) {
            return function () {
                fn.apply(context, arguments);
            };
        }
    }, {
        key: 'on',
        value: function on(element, e, fn) {
            if (e && fn) {
                this.addEvent(element, e, fn);
            } else if (e) {
                for (var ee in e) {
                    this.addEvent(element, ee, e[ee]);
                }
            }
        }
    }, {
        key: 'off',
        value: function off(element, e, fn) {
            if (e && fn) {
                this.removeEvent(element, e, fn);
            } else if (e) {
                for (var ee in e) {
                    this.removeEvent(element, ee, e[ee]);
                }
            }
        }
        // Example:
        //
        //     this.limit(x, limit.x)

    }, {
        key: 'limit',
        value: function limit(n, _limit) {
            // {Array} limit.x
            if (_limit instanceof Array) {
                _limit = [+_limit[0], +_limit[1]];
                if (n < _limit[0]) n = _limit[0];else if (n > _limit[1]) n = _limit[1];
            } else {
                n = +_limit;
            }
            return n;
        }
        // public

    }, {
        key: 'setOption',
        value: function setOption(property, value) {
            var me = this;
            me.options[property] = value;
            me.initialize();
            return me;
        }
    }, {
        key: 'get',
        value: function get() {
            var dragEvent = this.dragEvent;
            return {
                x: dragEvent.x,
                y: dragEvent.y
            };
        }
    }, {
        key: 'set',
        value: function set(x, y) {
            var me = this,
                dragEvent = me.dragEvent;
            dragEvent.original = {
                x: dragEvent.x,
                y: dragEvent.y
            };
            me.move(x, y);
            return me;
        }
    }, {
        key: 'initialize',
        value: function initialize() {
            var env = this.env;
            var me = this;
            var element = me.element;
            var style = element.style;
            var compStyle = this.getStyle(element);
            var options = me.options;
            var transform = env.transform;
            var oldTransform = void 0;
            // cache element dimensions (for performance)
            var _dimensions = me._dimensions = {
                height: element.offsetHeight,
                left: element.offsetLeft,
                top: element.offsetTop,
                width: element.offsetWidth
            };
            // shift compositing over to the GPU if the browser supports it (for performance)
            if (options.useGPU && transform) {
                // concatenate to any existing transform
                // so we don't accidentally override it
                oldTransform = compStyle[transform];
                if (oldTransform === 'none') {
                    oldTransform = '';
                }
                style[transform] = oldTransform + ' translate3d(0,0,0)';
            }
            // optional styling
            if (options.setPosition) {
                style.display = 'block';
                style.left = _dimensions.left + 'px';
                style.top = _dimensions.top + 'px';
                style.bottom = style.right = 'auto';
                style.margin = 0;
                style.position = 'absolute';
            }
            if (options.setCursor) {
                style.cursor = 'move';
            }
            // set limit
            me.setLimit(options.limit);
            // set position in model
            this.assign(me.dragEvent, {
                x: _dimensions.left,
                y: _dimensions.top
            });
            // attach mousedown event
            this.on(me.element, me.handlers.start);
        }
    }, {
        key: 'start',
        value: function start(e) {
            var env = this.env;
            var me = this;
            var cursor = me.getCursor(e);
            var element = me.element;
            // filter the target?
            if (!me.useTarget(e.target || e.srcElement)) {
                return;
            }
            // prevent browsers from visually dragging the element's outline
            if (e.preventDefault) {
                e.preventDefault();
            } else {
                e.returnValue = false; // IE10
            }
            // set a high z-index, just in case
            me.dragEvent.oldZindex = element.style.zIndex;
            element.style.zIndex = 10000;
            // set initial position
            me.setCursor(cursor);
            me.setPosition();
            me.setZoom();
            // add event listeners
            this.on(document, me.handlers.move);
        }
    }, {
        key: 'drag',
        value: function drag(e) {
            var env = this.env;
            var me = this,
                dragEvent = me.dragEvent,
                element = me.element,
                initialCursor = me._cursor,
                initialPosition = me._dimensions,
                options = me.options,
                zoom = initialPosition.zoom,
                cursor = me.getCursor(e),
                threshold = options.threshold,
                x = (cursor.x - initialCursor.x) / zoom + initialPosition.left,
                y = (cursor.y - initialCursor.y) / zoom + initialPosition.top;
            // check threshold
            if (!dragEvent.started && threshold && Math.abs(initialCursor.x - cursor.x) < threshold && Math.abs(initialCursor.y - cursor.y) < threshold) {
                return;
            }
            // save original position?
            if (!dragEvent.original) {
                dragEvent.original = { x: x, y: y };
            }
            // trigger start event?
            if (!dragEvent.started) {
                options.onDragStart(element, x, y, e);
                dragEvent.started = true;
            }
            // move the element
            if (me.move(x, y)) {
                // trigger drag event
                options.onDrag(element, dragEvent.x, dragEvent.y, e);
            }
        }
    }, {
        key: 'move',
        value: function move(x, y) {
            var env = this.env;
            var me = this;
            var dragEvent = me.dragEvent;
            var options = me.options;
            var grid = options.grid;
            var style = me.element.style;
            var pos = me.limit(x, y, dragEvent.original.x, dragEvent.original.y);
            // snap to grid?
            if (!options.smoothDrag && grid) {
                pos = me.round(pos, grid);
            }
            // move it
            if (pos.x !== dragEvent.x || pos.y !== dragEvent.y) {
                dragEvent.x = pos.x;
                dragEvent.y = pos.y;
                style.left = pos.x + 'px';
                style.top = pos.y + 'px';
                return true;
            }
            return false;
        }
    }, {
        key: 'stop',
        value: function stop(e) {
            var env = this.env;
            var me = this;
            var dragEvent = me.dragEvent;
            var element = me.element;
            var options = me.options;
            var grid = options.grid;
            var pos = void 0;
            // remove event listeners
            this.off(document, me.handlers.move);
            // resent element's z-index
            element.style.zIndex = dragEvent.oldZindex;
            // snap to grid?
            if (options.smoothDrag && grid) {
                pos = me.round({ x: dragEvent.x, y: dragEvent.y }, grid);
                me.move(pos.x, pos.y);
                this.assign(me.dragEvent, pos);
            }
            // trigger dragend event
            if (me.dragEvent.started) {
                options.onDragEnd(element, dragEvent.x, dragEvent.y, e);
            }
            // clear temp vars
            me.reset();
        }
    }, {
        key: 'reset',
        value: function reset() {
            this.dragEvent.started = false;
        }
    }, {
        key: 'round',
        value: function round(pos) {
            var grid = this.options.grid;
            return {
                x: grid * Math.round(pos.x / grid),
                y: grid * Math.round(pos.y / grid)
            };
        }
    }, {
        key: 'getCursor',
        value: function getCursor(e) {
            return {
                x: (e.targetTouches ? e.targetTouches[0] : e).clientX,
                y: (e.targetTouches ? e.targetTouches[0] : e).clientY
            };
        }
    }, {
        key: 'setCursor',
        value: function setCursor(xy) {
            this._cursor = xy;
        }
    }, {
        key: 'setLimit',
        value: function setLimit(limit) {
            var _this = this;

            var env = this.env;
            var me = this,
                _true = function _true(x, y) {
                return {
                    x: x,
                    y: y
                };
            };
            // limit is a function
            if (this.isFunction(limit)) {
                me.limit = limit;
            } else if (this.isElement(limit)) {
                (function () {
                    var draggableSize = me._dimensions,
                        height = limit.scrollHeight - draggableSize.height,
                        width = limit.scrollWidth - draggableSize.width;
                    me.limit = function (x, y) {
                        return {
                            x: _this.limit(x, [0, width]),
                            y: _this.limit(y, [0, height])
                        };
                    };
                })();
            } else if (limit) {
                (function () {
                    var thisLimit = _this.limit;
                    var defined = {
                        x: _this.isDefined(limit.x),
                        y: _this.isDefined(limit.y)
                    };
                    var _x = void 0,
                        _y = void 0;
                    // {Undefined} limit.x, {Undefined} limit.y
                    if (!defined.x && !defined.y) {
                        me.limit = _true;
                    } else {
                        me.limit = function (x, y) {
                            return {
                                x: defined.x ? thisLimit(x, limit.x) : x,
                                y: defined.y ? thisLimit(y, limit.y) : y
                            };
                        };
                    }
                })();
            } else {
                me.limit = _true;
            }
        }
    }, {
        key: 'setPosition',
        value: function setPosition() {
            var env = this.env;
            var me = this,
                element = me.element,
                style = element.style;
            this.assign(me._dimensions, {
                left: this.parse(style.left) || element.offsetLeft,
                top: this.parse(style.top) || element.offsetTop
            });
        }
    }, {
        key: 'setZoom',
        value: function setZoom() {
            var me = this;
            var element = me.element;
            var zoom = 1;
            while (element = element.offsetParent) {
                var z = this.getStyle(element).zoom;
                if (z && z !== 'normal') {
                    zoom = z;
                    break;
                }
            }
            me._dimensions.zoom = zoom;
        }
    }, {
        key: 'useTarget',
        value: function useTarget(element) {
            var filterTarget = this.options.filterTarget;
            if (filterTarget instanceof Function) {
                return filterTarget(element);
            }
            return true;
        }
    }, {
        key: 'destroy',
        value: function destroy() {
            var env = this.env;
            this.off(this.element, this.handlers.start);
            this.off(document, this.handlers.move);
        }
        // helpers

    }, {
        key: 'parse',
        value: function parse(string) {
            return parseInt(string, 10);
        }
    }, {
        key: 'getStyle',
        value: function getStyle(element) {
            return 'currentStyle' in element ? element.currentStyle : getComputedStyle(element);
        }
    }, {
        key: 'isDefined',
        value: function isDefined(thing) {
            return thing !== void 0 && thing !== null;
        }
    }, {
        key: 'isElement',
        value: function isElement(thing) {
            return thing instanceof Element || thing instanceof HTMLDocument;
        }
    }, {
        key: 'isFunction',
        value: function isFunction(thing) {
            return thing instanceof Function;
        }
    }]);

    return Draggable;
}();

exports.default = Draggable;

},{}],150:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
/* eslint-disable */

var $ = require('jquery'); // eslint-disable-line
var register = function register() {
    if ($.fn.scrollParent) {
        return;
    }
    $.fn.scrollParent = function () {
        var overflowRegex = /(auto|scroll)/,
            position = this.css("position"),
            excludeStaticParent = position === "absolute",
            scrollParent = this.parents().filter(function () {
            var parent = $(this);
            if (excludeStaticParent && parent.css("position") === "static") {
                return false;
            }
            var overflowState = parent.css(["overflow", "overflowX", "overflowY"]);
            return overflowRegex.test(overflowState.overflow + overflowState.overflowX + overflowState.overflowY);
        }).eq(0);
        return position === "fixed" || !scrollParent.length ? $(this[0].ownerDocument || document) : scrollParent;
    };
};
exports.default = register;

},{"jquery":"jquery"}],151:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var on = function on(target, eventName, callback, capture) {
    if (target.addEventListener) {
        target.addEventListener(eventName, callback, capture);
    } else if (target.attachEvent) {
        target.attachEvent('on' + eventName, function () {
            callback.call(target);
        });
    }
};

var off = function off(target, eventName, callback, capture) {
    if (target.removeEventListener) {
        target.removeEventListener(eventName, callback, capture);
    } else if (target.detachEvent) {
        target.detachEvent('on' + eventName, callback);
    }
};

// see https://github.com/oliviertassinari/react-event-listener/blob/master/src/index.js

var KeyUpEventListener = function (_Component) {
    _inherits(KeyUpEventListener, _Component);

    function KeyUpEventListener() {
        _classCallCheck(this, KeyUpEventListener);

        return _possibleConstructorReturn(this, (KeyUpEventListener.__proto__ || Object.getPrototypeOf(KeyUpEventListener)).apply(this, arguments));
    }

    _createClass(KeyUpEventListener, [{
        key: 'render',
        value: function render() {
            return null;
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.addListeners();
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            this.removeListeners();
        }
    }, {
        key: 'addListeners',
        value: function addListeners() {
            on(window, 'keyup', this.props.onKeyUp);
        }
    }, {
        key: 'removeListeners',
        value: function removeListeners() {
            off(window, 'keyup', this.props.onKeyUp);
        }
    }]);

    return KeyUpEventListener;
}(_react.Component);

KeyUpEventListener.propTypes = {
    onKeyUp: _react.PropTypes.func.isRequired
};
exports.default = KeyUpEventListener;

},{"react":"react"}],152:[function(require,module,exports){
module.exports = {"Title-Page":"neptune_Title-Page_1qnuc","Title-Page-Light":"neptune_Title-Page-Light_1qnuc","Title-Section-Primary":"neptune_Title-Section-Primary_1qnuc","Title-Section-Primary-Light":"neptune_Title-Section-Primary-Light_1qnuc","TITLE-SUBTITLE":"neptune_TITLE-SUBTITLE_1qnuc","Title-Section-Secondary":"neptune_Title-Section-Secondary_1qnuc","TITLE-MODULE":"neptune_TITLE-MODULE_1qnuc","LABEL-STANDARD":"neptune_LABEL-STANDARD_1qnuc","LABEL-STANDARD-SEMIBOLD":"neptune_LABEL-STANDARD-SEMIBOLD_1qnuc","LABEL-ATTRIBUTION":"neptune_LABEL-ATTRIBUTION_1qnuc","LABEL-ATTRIBUTION-MA":"neptune_LABEL-ATTRIBUTION-MA_1qnuc","LABEL-ATTRIBUTION-MIS":"neptune_LABEL-ATTRIBUTION-MIS_1qnuc","Label-Footnote":"neptune_Label-Footnote_1qnuc","Rating":"neptune_Rating_1qnuc","Header-Primary":"neptune_Header-Primary_1qnuc","Body-Primary":"neptune_Body-Primary_1qnuc","Header-Secondary":"neptune_Header-Secondary_1qnuc","Header-Secondary-Bold":"neptune_Header-Secondary-Bold_1qnuc","Body-Secondary":"neptune_Body-Secondary_1qnuc","TABLE-SECTION":"neptune_TABLE-SECTION_1qnuc","Header-Tertiary":"neptune_Header-Tertiary_1qnuc","Header-Tertiary-Bold":"neptune_Header-Tertiary-Bold_1qnuc","Body-Tertiary":"neptune_Body-Tertiary_1qnuc","Body-Tertiary-Med":"neptune_Body-Tertiary-Med_1qnuc","Body-Text-Prompt":"neptune_Body-Text-Prompt_1qnuc","Link-DkBlue":"neptune_Link-DkBlue_1qnuc","LINK-GOLD":"neptune_LINK-GOLD_1qnuc","LINK-GREY":"neptune_LINK-GREY_1qnuc","LABEL-SIDENAV-TITLE":"neptune_LABEL-SIDENAV-TITLE_1qnuc","MIS-BLUE":"neptune_MIS-BLUE_1qnuc","MA-BLUE":"neptune_MA-BLUE_1qnuc","MOODYS-BLUE":"neptune_MOODYS-BLUE_1qnuc","HIGHLIGHT-BLUE":"neptune_HIGHLIGHT-BLUE_1qnuc","GOLD":"neptune_GOLD_1qnuc","GREY-1":"neptune_GREY-1_1qnuc","GREY-2":"neptune_GREY-2_1qnuc","GREY-3":"neptune_GREY-3_1qnuc","GREY-4":"neptune_GREY-4_1qnuc","BLACK":"neptune_BLACK_1qnuc","RED":"neptune_RED_1qnuc","GREEN":"neptune_GREEN_1qnuc","icon_down_arrow":"neptune_icon_down_arrow_1qnuc","icon_up_arrow":"neptune_icon_up_arrow_1qnuc","icon_warning_icon":"neptune_icon_warning_icon_1qnuc","icon_select_arrows":"neptune_icon_select_arrows_1qnuc","icon_triangle_down":"neptune_icon_triangle_down_1qnuc","icon_triangle_up":"neptune_icon_triangle_up_1qnuc","icon_x_icon":"neptune_icon_x_icon_1qnuc","icon_right_arrow":"neptune_icon_right_arrow_1qnuc","MIS-BLUE-FONT":"neptune_MIS-BLUE-FONT_1qnuc","MIS-BLUE-BG":"neptune_MIS-BLUE-BG_1qnuc","MIS-BLUE-BORDER":"neptune_MIS-BLUE-BORDER_1qnuc","MA-BLUE-FONT":"neptune_MA-BLUE-FONT_1qnuc","MA-BLUE-BG":"neptune_MA-BLUE-BG_1qnuc","MA-BLUE-BORDER":"neptune_MA-BLUE-BORDER_1qnuc","MOODYS-BLUE-FONT":"neptune_MOODYS-BLUE-FONT_1qnuc","MOODYS-BLUE-BG":"neptune_MOODYS-BLUE-BG_1qnuc","MOODYS-BLUE-BORDER":"neptune_MOODYS-BLUE-BORDER_1qnuc","HIGHLIGHT-BLUE-FONT":"neptune_HIGHLIGHT-BLUE-FONT_1qnuc","HIGHLIGHT-BLUE-BG":"neptune_HIGHLIGHT-BLUE-BG_1qnuc","HIGHLIGHT-BLUE-BORDER":"neptune_HIGHLIGHT-BLUE-BORDER_1qnuc","GOLD-FONT":"neptune_GOLD-FONT_1qnuc","GOLD-BG":"neptune_GOLD-BG_1qnuc","GOLD-BORDER":"neptune_GOLD-BORDER_1qnuc","GREY-1-FONT":"neptune_GREY-1-FONT_1qnuc","GREY-1-BG":"neptune_GREY-1-BG_1qnuc","GREY-1-BORDER":"neptune_GREY-1-BORDER_1qnuc","GREY-2-FONT":"neptune_GREY-2-FONT_1qnuc","GREY-2-BG":"neptune_GREY-2-BG_1qnuc","GREY-2-BORDER":"neptune_GREY-2-BORDER_1qnuc","GREY-3-FONT":"neptune_GREY-3-FONT_1qnuc","GREY-3-BG":"neptune_GREY-3-BG_1qnuc","GREY-3-BORDER":"neptune_GREY-3-BORDER_1qnuc","GREY-4-FONT":"neptune_GREY-4-FONT_1qnuc","GREY-4-BG":"neptune_GREY-4-BG_1qnuc","GREY-4-BORDER":"neptune_GREY-4-BORDER_1qnuc","BLACK-FONT":"neptune_BLACK-FONT_1qnuc","BLACK-BG":"neptune_BLACK-BG_1qnuc","BLACK-BORDER":"neptune_BLACK-BORDER_1qnuc","RED-FONT":"neptune_RED-FONT_1qnuc","RED-BG":"neptune_RED-BG_1qnuc","RED-BORDER":"neptune_RED-BORDER_1qnuc","GREEN-FONT":"neptune_GREEN-FONT_1qnuc","GREEN-BG":"neptune_GREEN-BG_1qnuc","GREEN-BORDER":"neptune_GREEN-BORDER_1qnuc","overlay":"neptune_overlay_1qnuc","bgdOpacityTransfer":"neptune_bgdOpacityTransfer_1qnuc","hidden":"neptune_hidden_1qnuc","modal":"neptune_modal_1qnuc","opacityTransfer":"neptune_opacityTransfer_1qnuc","modal2":"neptune_modal2_1qnuc","close":"neptune_close_1qnuc","close-x":"neptune_close-x_1qnuc","header":"neptune_header_1qnuc","title":"neptune_title_1qnuc","content":"neptune_content_1qnuc","footer":"neptune_footer_1qnuc","content2":"neptune_content2_1qnuc","footer2":"neptune_footer2_1qnuc"}
},{}],153:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _reactDom = require('react-dom');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// eslint-disable-line camelcase
// heavily inspired by https://github.com/callemall/material-ui/blob/master/src/internal/RenderToLayer.js
// heavily inspired by https://github.com/Khan/react-components/blob/master/js/layered-component-mixin.jsx
var RenderToBody = function (_Component) {
    _inherits(RenderToBody, _Component);

    function RenderToBody() {
        _classCallCheck(this, RenderToBody);

        return _possibleConstructorReturn(this, (RenderToBody.__proto__ || Object.getPrototypeOf(RenderToBody)).apply(this, arguments));
    }

    _createClass(RenderToBody, [{
        key: 'render',
        value: function render() {
            return null;
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.renderLayer();
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate() {
            this.renderLayer();
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            this.unRenderLayer();
        }
    }, {
        key: 'unRenderLayer',
        value: function unRenderLayer() {
            if (!this.layer) {
                return;
            }
            (0, _reactDom.unmountComponentAtNode)(this.layer);
            document.body.removeChild(this.layer);
            this.layer = null;
        }
        /*
        * By calling this method in componentDidMount() and
        * componentDidUpdate(), you're effectively creating a "wormhole" that
        * funnels React's hierarchical updates through to a DOM node on an
        * entirely different part of the page.
        */

    }, {
        key: 'renderLayer',
        value: function renderLayer() {
            var render = this.props.render;

            if (!this.layer) {
                this.layer = document.createElement('div');
                document.body.appendChild(this.layer);
            }
            var layerElement = render();
            if (layerElement) {
                this.layerElement = (0, _reactDom.unstable_renderSubtreeIntoContainer)(this, layerElement, this.layer);
            } else {
                this.unRenderLayer();
            }
        }
    }]);

    return RenderToBody;
}(_react.Component);

exports.default = RenderToBody;


RenderToBody.propTypes = {
    render: _react.PropTypes.func.isRequired
};

},{"react":"react","react-dom":"react-dom"}],154:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// Measure scrollbar width for padding body during modal show/hide
var scrollbarMeasure = {
    height: '50px',
    overflow: 'scroll',
    position: 'absolute',
    top: '-9999px',
    width: '50px'
};

var openCount = 0;
// heavily inspired by https://github.com/react-component/dialog/blob/master/src/Dialog.jsx

var ScrollbarEffect = function (_Component) {
    _inherits(ScrollbarEffect, _Component);

    function ScrollbarEffect() {
        _classCallCheck(this, ScrollbarEffect);

        return _possibleConstructorReturn(this, (ScrollbarEffect.__proto__ || Object.getPrototypeOf(ScrollbarEffect)).apply(this, arguments));
    }

    _createClass(ScrollbarEffect, [{
        key: 'render',
        value: function render() {
            return null;
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.addScrollingEffect();
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            this.removeScrollingEffect();
        }
    }, {
        key: 'setScrollbar',
        value: function setScrollbar() {
            if (this.bodyIsOverflow && this.scrollbarWidth) {
                document.body.style.paddingRight = this.scrollbarWidth + 'px';
            }
        }
    }, {
        key: 'addScrollingEffect',
        value: function addScrollingEffect() {
            openCount++;
            if (openCount !== 1) {
                return;
            }
            this.checkScrollbar();
            this.setScrollbar();
            document.body.style.overflow = 'hidden';
        }
    }, {
        key: 'removeScrollingEffect',
        value: function removeScrollingEffect() {
            openCount--;
            if (openCount !== 0) {
                return;
            }
            document.body.style.overflow = '';
            document.body.style.paddingRight = '';
        }
    }, {
        key: 'checkScrollbar',
        value: function checkScrollbar() {
            var fullWindowWidth = window.innerWidth;
            this.bodyIsOverflow = document.body.clientWidth < fullWindowWidth;
            if (this.bodyIsOverflow) {
                this.scrollbarWidth = this.measureScrollbar();
            }
        }
    }, {
        key: 'measureScrollbar',
        value: function measureScrollbar() {
            if (this.scrollbarWidth !== undefined) {
                return this.scrollbarWidth;
            }
            var scrollDiv = document.createElement('div');
            for (var scrollProp in scrollbarMeasure) {
                if (scrollbarMeasure.hasOwnProperty(scrollProp)) {
                    scrollDiv.style[scrollProp] = scrollbarMeasure[scrollProp];
                }
            }
            document.body.appendChild(scrollDiv);
            var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;
            document.body.removeChild(scrollDiv);
            this.scrollbarWidth = scrollbarWidth;
            return scrollbarWidth;
        }
    }]);

    return ScrollbarEffect;
}(_react.Component);

exports.default = ScrollbarEffect;

},{"react":"react"}],155:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _mdcClassnames = require('mdc-classnames');

var _RenderToBody = require('./RenderToBody');

var _RenderToBody2 = _interopRequireDefault(_RenderToBody);

var _ScrollbarEffect = require('./ScrollbarEffect');

var _ScrollbarEffect2 = _interopRequireDefault(_ScrollbarEffect);

var _KeyUpEventListener = require('./KeyUpEventListener');

var _KeyUpEventListener2 = _interopRequireDefault(_KeyUpEventListener);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var styles = require('./Modal.less');

var cx = _mdcClassnames.setCssModule.bind(styles);

var Modal = function (_Component) {
    _inherits(Modal, _Component);

    function Modal(props) {
        _classCallCheck(this, Modal);

        var _this = _possibleConstructorReturn(this, (Modal.__proto__ || Object.getPrototypeOf(Modal)).call(this, props));

        _this.doRender = _this.doRender.bind(_this);
        _this.handleMaskClick = _this.handleMaskClick.bind(_this);
        _this.handleKeyUp = _this.handleKeyUp.bind(_this);
        _this.handleRequestClose = _this.handleRequestClose.bind(_this);
        return _this;
    }

    _createClass(Modal, [{
        key: 'render',
        value: function render() {
            return React.createElement(_RenderToBody2.default, { render: this.doRender });
        }
    }, {
        key: 'doRender',
        value: function doRender() {
            var _props = this.props;
            var visible = _props.visible;
            var title = _props.title;
            var children = _props.children;
            var footer = _props.footer;
            var showCloseButton = _props.showCloseButton;
            var width = _props.width;
            var customizedTitle = _props.customizedTitle;

            if (!visible) {
                return null;
            }
            var closeButton = showCloseButton ? this.getCloseButton() : null;
            var titleElement = void 0;
            if (React.isValidElement(title)) {
                titleElement = React.cloneElement(title, { className: cx('title') });
            } else if (typeof title === 'string') {
                titleElement = React.createElement(
                    'h3',
                    { className: cx('title') },
                    title
                );
            }
            var footerElement = React.Children.count(footer) > 0 && React.Children.toArray(footer);
            if (customizedTitle) {
                return React.createElement(
                    'div',
                    { className: cx('overlay'), onClick: this.handleMaskClick },
                    React.createElement(
                        'div',
                        { className: cx('modal2'), style: width && { width: width } },
                        React.createElement(
                            'div',
                            { className: cx('header') },
                            title
                        ),
                        React.createElement(
                            'div',
                            { className: cx('content2') },
                            children
                        ),
                        React.createElement(
                            'div',
                            { className: cx('footer2') },
                            footerElement
                        )
                    ),
                    React.createElement(_ScrollbarEffect2.default, null),
                    React.createElement(_KeyUpEventListener2.default, { onKeyUp: this.handleKeyUp })
                );
            } else {
                return React.createElement(
                    'div',
                    { className: cx('overlay'), onClick: this.handleMaskClick },
                    React.createElement(
                        'div',
                        { className: cx('modal'), style: width && { width: width } },
                        closeButton,
                        React.createElement(
                            'div',
                            { className: cx('header') },
                            titleElement
                        ),
                        React.createElement(
                            'div',
                            { className: cx('content') },
                            children
                        ),
                        React.createElement(
                            'div',
                            { className: cx('footer') },
                            footerElement
                        )
                    ),
                    React.createElement(_ScrollbarEffect2.default, null),
                    React.createElement(_KeyUpEventListener2.default, { onKeyUp: this.handleKeyUp })
                );
            }
        }
    }, {
        key: 'getCloseButton',
        value: function getCloseButton() {
            return React.createElement(
                'button',
                { onClick: this.handleRequestClose, className: cx('close') },
                React.createElement(
                    'span',
                    { className: cx('close-x') },
                    'X'
                )
            );
        }
    }, {
        key: 'handleMaskClick',
        value: function handleMaskClick(e) {
            if (e.target === e.currentTarget) {
                this.handleRequestClose();
            }
        }
    }, {
        key: 'handleKeyUp',
        value: function handleKeyUp(e) {
            if (!this.props.maskClosable) {
                return;
            }
            if (e.key === 'Escape' || e.keyCode === 27) {
                this.handleRequestClose();
            }
        }
    }, {
        key: 'handleRequestClose',
        value: function handleRequestClose() {
            var onRequestClose = this.props.onRequestClose;

            if (this.props.maskClosable && onRequestClose) {
                onRequestClose();
            }
        }
    }]);

    return Modal;
}(_react.Component);

exports.default = Modal;

Modal.propTypes = {
    children: _react.PropTypes.node,
    footer: _react.PropTypes.node,
    maskClosable: _react.PropTypes.bool,
    onRequestClose: _react.PropTypes.func.isRequired,
    showCloseButton: _react.PropTypes.bool,
    title: _react.PropTypes.node,
    visible: _react.PropTypes.bool.isRequired,
    width: _react.PropTypes.number
};
Modal.defaultProps = {
    maskClosable: true,
    showCloseButton: true
};

},{"./KeyUpEventListener":151,"./Modal.less":152,"./RenderToBody":153,"./ScrollbarEffect":154,"mdc-classnames":"mdc-classnames","react":"react"}],156:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _CheckBox = require("./../CheckBox");

var _CheckBox2 = _interopRequireDefault(_CheckBox);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var React = require("react");
var Component = React.Component;
// import { setCssModule } from 'mdc-classnames';

// const styles = require('./style.less');
// const cx = setCssModule.bind(styles);

var OptionItem = function (_Component) {
    _inherits(OptionItem, _Component);

    function OptionItem(props) {
        _classCallCheck(this, OptionItem);

        var _this = _possibleConstructorReturn(this, (OptionItem.__proto__ || Object.getPrototypeOf(OptionItem)).call(this, props));

        _this.handleSelectClick = _this.handleSelectClick.bind(_this);
        _this.state = {
            checked: props.selected
        };
        return _this;
    }

    _createClass(OptionItem, [{
        key: "handleSelectClick",
        value: function handleSelectClick(evt, value, state) {
            evt.preventDefault();
            console.log(state);
            this.setState({
                checked: value
            });
            this.props.handleSelectClick(this.props.option);
        }
    }, {
        key: "render",
        value: function render() {
            var item = this.props.option;
            return React.createElement(
                "li",
                { key: this.props.key, value: item.value },
                React.createElement(_CheckBox2.default, { text: item.text, onChange: this.handleSelectClick, checked: this.state.checked })
            );
        }
    }]);

    return OptionItem;
}(Component);

exports.default = OptionItem;

},{"./../CheckBox":84,"react":"react"}],157:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _OptionItem = require('./OptionItem');

var _OptionItem2 = _interopRequireDefault(_OptionItem);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var React = require("react");
var Component = React.Component;

var styles = require('./style.less');

var OptionList = function (_Component) {
    _inherits(OptionList, _Component);

    function OptionList(props) {
        _classCallCheck(this, OptionList);

        var _this = _possibleConstructorReturn(this, (OptionList.__proto__ || Object.getPrototypeOf(OptionList)).call(this, props));

        _this.handleSelectClick = _this.handleSelectClick.bind(_this);
        return _this;
    }

    _createClass(OptionList, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var selecteds = this.props.selecteds;
            // const self = this;
            var showOptionListNodes = this.props.showOptionList.map(function (item) {
                return React.createElement(_OptionItem2.default, { key: item.value, option: item, handleSelectClick: _this2.handleSelectClick, selected: selecteds.indexOf(item.text) !== -1 });
            });
            var showSelectAll = showOptionListNodes.length === 0 ? '' : React.createElement(_OptionItem2.default, { key: 'all', option: { text: 'All', value: 'All' }, handleSelectClick: this.props.selectAll, selected: this.props.allSelected });
            return React.createElement(
                'div',
                { className: styles.divSearchList },
                React.createElement(
                    'ul',
                    null,
                    showSelectAll,
                    showOptionListNodes
                )
            );
        }
    }, {
        key: 'handleSelectClick',
        value: function handleSelectClick(item) {
            this.props.handleSelectClick(item);
        }
    }]);

    return OptionList;
}(Component);

exports.default = OptionList;

},{"./OptionItem":156,"./style.less":162,"react":"react"}],158:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var React = require("react");
var Component = React.Component;

var styles = require('./style.less');

var SearchInput = function (_Component) {
    _inherits(SearchInput, _Component);

    function SearchInput() {
        _classCallCheck(this, SearchInput);

        var _this = _possibleConstructorReturn(this, (SearchInput.__proto__ || Object.getPrototypeOf(SearchInput)).call(this));

        _this.state = {
            searchText: ''
        };
        return _this;
    }

    _createClass(SearchInput, [{
        key: 'render',
        value: function render() {
            return React.createElement(
                'div',
                { className: styles.divSearchInputBlock },
                React.createElement(
                    'div',
                    { className: styles.divSearchInput },
                    React.createElement('input', { placeholder: 'search for ' + this.props.placeholder, onChange: this.handleSearchChange.bind(this) }),
                    React.createElement('i', { className: styles.iconSearch })
                )
            );
        }
    }, {
        key: 'handleSearchChange',
        value: function handleSearchChange(e) {
            this.props.handleSearchChange(e.target.value);
        }
    }]);

    return SearchInput;
}(Component);

exports.default = SearchInput;

},{"./style.less":162,"react":"react"}],159:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var React = require("react");
var Component = React.Component;


var styles = require('./style.less');

var OptionItem = function (_Component) {
    _inherits(OptionItem, _Component);

    function OptionItem(props) {
        _classCallCheck(this, OptionItem);

        var _this = _possibleConstructorReturn(this, (OptionItem.__proto__ || Object.getPrototypeOf(OptionItem)).call(this, props));

        _this.handleDelClick = _this.handleDelClick.bind(_this);
        return _this;
    }

    _createClass(OptionItem, [{
        key: "render",
        value: function render() {
            return React.createElement(
                "li",
                null,
                React.createElement(
                    "span",
                    null,
                    this.props.selectedOption.text
                ),
                React.createElement(
                    "span",
                    { className: styles.iconDel, onClick: this.handleDelClick },
                    "X"
                )
            );
        }
    }, {
        key: "handleDelClick",
        value: function handleDelClick() {
            this.props.handleDelClick(this.props.selectedOption);
        }
    }]);

    return OptionItem;
}(Component);

exports.default = OptionItem;

},{"./style.less":162,"react":"react"}],160:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SelectedItem = require("./SelectedItem");

var _SelectedItem2 = _interopRequireDefault(_SelectedItem);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var React = require("react");
var Component = React.Component;

var OptionItem = function (_Component) {
    _inherits(OptionItem, _Component);

    function OptionItem() {
        _classCallCheck(this, OptionItem);

        return _possibleConstructorReturn(this, (OptionItem.__proto__ || Object.getPrototypeOf(OptionItem)).apply(this, arguments));
    }

    _createClass(OptionItem, [{
        key: "render",
        value: function render() {
            // const selecteds = this.props.selecteds;
            var self = this;
            var showOptionListNodes = this.props.selectedOptionList.map(function (item) {
                return React.createElement(_SelectedItem2.default, { key: item.value, selectedOption: item, handleDelClick: self.handleDelClick.bind(self) });
            });
            return React.createElement(
                "div",
                null,
                React.createElement(
                    "ul",
                    null,
                    showOptionListNodes
                )
            );
        }
    }, {
        key: "handleDelClick",
        value: function handleDelClick(item) {
            this.props.handleDelClick(item);
        }
    }]);

    return OptionItem;
}(Component);

exports.default = OptionItem;

},{"./SelectedItem":159,"react":"react"}],161:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _mdcClassnames = require('mdc-classnames');

var _Button = require('./../Button');

var _Button2 = _interopRequireDefault(_Button);

var _SearchInput = require('./SearchInput');

var _SearchInput2 = _interopRequireDefault(_SearchInput);

var _OptionList = require('./OptionList');

var _OptionList2 = _interopRequireDefault(_OptionList);

var _SelectedOptionList = require('./SelectedOptionList');

var _SelectedOptionList2 = _interopRequireDefault(_SelectedOptionList);

var _lodash = require('lodash');

var _ = _interopRequireWildcard(_lodash);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var React = require("react");
var PropTypes = React.PropTypes;
var Component = React.Component;

var styles = require('./style.less');
var cx = _mdcClassnames.setCssModule.bind(styles);

var MultiDropdown = function (_Component) {
    _inherits(MultiDropdown, _Component);

    function MultiDropdown(props) {
        _classCallCheck(this, MultiDropdown);

        var _this = _possibleConstructorReturn(this, (MultiDropdown.__proto__ || Object.getPrototypeOf(MultiDropdown)).call(this, props));

        _this.onOkClick = _this.onOkClick.bind(_this);
        _this.onCancelClick = _this.onCancelClick.bind(_this);
        _this.state = {
            allSelected: _.isEqual(_this.getSelectedList(props.optionsItems, props.selectedOptions), props.optionsItems),
            includeButtons: props.includeButtons,
            initialSelectedOptions: props.selectedOptions ? _.cloneDeep(props.selectedOptions) : [],
            isListDisplay: false,
            optionsItems: props.optionsItems,
            searchText: '',
            selectedOptions: props.selectedOptions ? props.selectedOptions : []
        };
        return _this;
    }

    _createClass(MultiDropdown, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            this.setState({
                allSelected: _.isEqual(this.getSelectedList(this.props.optionsItems, nextProps.selectedOptions), this.props.optionsItems),
                initialSelectedOptions: _.cloneDeep(nextProps.selectedOptions),
                selectedOptions: nextProps.selectedOptions
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var selectedOptions = this.state.selectedOptions || [];
            var searchBlock = cx(this.props.className, {
                displayCss: this.state.isListDisplay,
                divSearchBlock: true
            });
            var titleDisplayClass = cx('', {
                borderBottom: !this.state.isListDisplay,
                displayInlineCss: !this.state.isListDisplay || this.props.dropdownType !== 1,
                divTitle: true
            });
            var selNumsShow = this.props.hideTitle === true ? cx('', {
                displayInlineCss: true,
                selNumShow: true
            }) : cx('', {
                displayInlineCss: selectedOptions.length > 0 && this.props.dropdownType !== 1,
                selNumShow: true
            });
            var selectDisplayClass = cx('', {
                displayCss: this.props.dropdownType === 1,
                selectedBlock: true
            });
            var selectedCount = void 0;
            if (selectedOptions.length > 0) {
                selectedCount = selectedOptions.length === this.props.optionsItems.length ? "All" : selectedOptions.length + ' Selected';
            } else {
                selectedCount = "None";
            }
            // hideTitle => select all items
            // if (this.props.hideTitle === true) {this.addSelectAllOption(); }
            var buttonContainerClass = cx('', 'buttonContainer');
            // const okbuttonClass = cx('', 'okbutton');
            // const cancelbuttonClass = cx('', 'cancelbutton');
            // disabled OK Button if none option is selected
            var disabledButton = this.state.selectedOptions.length > 0 ? false : true;
            var buttons = this.props.includeButtons ? React.createElement(
                'div',
                { className: buttonContainerClass },
                React.createElement(
                    _Button2.default,
                    { onClick: this.onCancelClick },
                    'CANCEL'
                ),
                React.createElement(
                    _Button2.default,
                    { primary: true, disabled: disabledButton, onClick: this.onOkClick },
                    'OK'
                )
            ) : '';
            var titleBlock = this.props.hideTitle === true ? React.createElement(
                'div',
                null,
                React.createElement(
                    'span',
                    { className: selNumsShow },
                    '' + selectedCount
                ),
                React.createElement('i', { className: styles.iconExpand })
            ) : React.createElement(
                'div',
                null,
                React.createElement(
                    'span',
                    null,
                    this.props.dropdownTitle
                ),
                React.createElement(
                    'span',
                    { className: selNumsShow },
                    selectedOptions.length + ' Selected'
                ),
                React.createElement('i', { className: styles.iconExpand })
            );
            var result = this.props.hideSearch ? React.createElement(
                'div',
                { className: styles.multiDropdown, onMouseLeave: this.handleExpandMouseLeave.bind(this) },
                React.createElement(
                    'div',
                    { className: titleDisplayClass, onClick: this.handleExpandClick.bind(this) },
                    titleBlock
                ),
                React.createElement(
                    'div',
                    { className: searchBlock },
                    React.createElement(_OptionList2.default, { showOptionList: this.filterOptionList(), selectAll: this.selectAll.bind(this), allSelected: this.state.allSelected, selecteds: selectedOptions, handleSelectClick: this.handleSelectClick.bind(this) }),
                    buttons
                ),
                React.createElement(
                    'div',
                    { className: selectDisplayClass },
                    React.createElement(_SelectedOptionList2.default, { selectedOptionList: this.selectedOptionList(), handleDelClick: this.handleDelClick.bind(this) })
                )
            ) : React.createElement(
                'div',
                { className: styles.multiDropdown, onMouseLeave: this.handleExpandMouseLeave.bind(this) },
                React.createElement(
                    'div',
                    { className: titleDisplayClass, onClick: this.handleExpandClick.bind(this) },
                    React.createElement(
                        'span',
                        null,
                        this.props.dropdownTitle
                    ),
                    React.createElement(
                        'span',
                        { className: selNumsShow },
                        ' ' + selectedOptions.length + ' Selected'
                    ),
                    React.createElement('i', { className: styles.iconExpand })
                ),
                React.createElement(
                    'div',
                    { className: searchBlock },
                    React.createElement(_SearchInput2.default, { placeholder: this.props.dropdownTitle, handleSearchChange: this.handleSearchChange.bind(this) }),
                    React.createElement(_OptionList2.default, { showOptionList: this.filterOptionList(), selecteds: selectedOptions, handleSelectClick: this.handleSelectClick.bind(this) }),
                    buttons
                ),
                React.createElement(
                    'div',
                    { className: selectDisplayClass },
                    React.createElement(_SelectedOptionList2.default, { selectedOptionList: this.selectedOptionList(), handleDelClick: this.handleDelClick.bind(this) })
                )
            );
            return result;
        }
    }, {
        key: 'initiateAll',
        value: function initiateAll() {
            var selectedOptions = [];
            this.props.optionsItems.map(function (item) {
                selectedOptions.push(item.text);
            });
            return selectedOptions;
        }
    }, {
        key: 'selectAll',
        value: function selectAll() {
            var selectedOptions = [];
            if (this.state.selectedOptions && this.state.allSelected) {
                selectedOptions = [];
                this.setState({ allSelected: false, selectedOptions: selectedOptions });
            } else {
                this.props.optionsItems.map(function (item) {
                    return selectedOptions.push(item.text);
                });
                this.setState({ allSelected: true, selectedOptions: selectedOptions });
            }
        }
    }, {
        key: 'handleDelClick',
        value: function handleDelClick(item) {
            console.log('del');
            var selectedOptions = this.state.selectedOptions;
            var index = selectedOptions.indexOf(item.text);
            selectedOptions.splice(index, 1);
            this.setState({ selectedOptions: selectedOptions });
        }
    }, {
        key: 'selectedOptionList',
        value: function selectedOptionList() {
            // const self = this;
            var selectedOptions = this.state.selectedOptions;
            var selectedList = this.props.optionsItems.filter(function (item) {
                return selectedOptions && selectedOptions.indexOf(item.text) !== -1 ? true : false;
            });
            this.props.uploadTheSelected(selectedList);
            return selectedList;
        }
    }, {
        key: 'filterOptionList',
        value: function filterOptionList() {
            // const self = this;
            var searchText = this.state.searchText;
            var optionsItems = this.props.optionsItems.filter(function (item) {
                if (searchText === '' || item.text.indexOf(searchText) !== -1) {
                    return true;
                }
                return false;
            });
            return optionsItems;
        }
    }, {
        key: 'handleSelectClick',
        value: function handleSelectClick(item) {
            var selectedOptions = this.state.selectedOptions;
            var index = selectedOptions.indexOf(item.text);
            if (index === -1) {
                selectedOptions.push(item.text);
            } else {
                selectedOptions.splice(index, 1);
            }
            var allSelected = this.state.selectedOptions.length === this.props.optionsItems.length;
            this.setState({ allSelected: allSelected, selectedOptions: selectedOptions });
        }
    }, {
        key: 'handleSearchChange',
        value: function handleSearchChange(searchText) {
            this.setState({ searchText: searchText });
        }
    }, {
        key: 'handleExpandClick',
        value: function handleExpandClick() {
            this.setState({ isListDisplay: true });
        }
    }, {
        key: 'getSelectedList',
        value: function getSelectedList(optionItems, selectedItems) {
            var selectedList = optionItems.filter(function (item) {
                if (selectedItems.indexOf(item.text) !== -1) {
                    return true;
                } else {
                    return false;
                }
            });
            return selectedList;
        }
    }, {
        key: 'handleExpandMouseLeave',
        value: function handleExpandMouseLeave() {
            var _this2 = this;

            if (this.state.includeButtons) {
                return;
            }
            this.setState({ isListDisplay: false });
            if (this.props.mouseLeave) {
                (function () {
                    var selectedOptions = _this2.state.selectedOptions;
                    var selectedList = _this2.props.optionsItems.filter(function (item) {
                        if (selectedOptions.indexOf(item.text) !== -1) {
                            return true;
                        } else {
                            return false;
                        }
                    });
                    _this2.props.mouseLeave(selectedList);
                })();
            }
        }
    }, {
        key: 'onOkClick',
        value: function onOkClick() {
            var _this3 = this;

            this.setState({ isListDisplay: false });
            if (this.props.onOkClick) {
                (function () {
                    var selectedOptions = _this3.state.selectedOptions;
                    var selectedList = _this3.props.optionsItems.filter(function (item) {
                        if (selectedOptions.indexOf(item.text) !== -1) {
                            return true;
                        } else {
                            return false;
                        }
                    });
                    _this3.props.onOkClick(selectedList);
                })();
            }
        }
    }, {
        key: 'onCancelClick',
        value: function onCancelClick() {
            var _this4 = this;

            this.setState({ isListDisplay: false, selectedOptions: this.state.initialSelectedOptions });
            if (this.props.onCancelClick) {
                (function () {
                    var selectedOptions = _this4.state.initialSelectedOptions;
                    var selectedList = _this4.props.optionsItems.filter(function (item) {
                        if (selectedOptions.indexOf(item.text) !== -1) {
                            return true;
                        } else {
                            return false;
                        }
                    });
                    _this4.props.onCancelClick(selectedList);
                })();
            }
        }
    }]);

    return MultiDropdown;
}(Component);

exports.default = MultiDropdown;
var string = PropTypes.string;
var number = PropTypes.number;
var bool = PropTypes.bool;
var any = PropTypes.any;
var func = PropTypes.func;

MultiDropdown.propTypes = {
    className: string,
    dropdownTitle: string,
    dropdownType: number,
    hideSearch: bool,
    hideTitle: bool,
    includeButtons: bool,
    mouseLeave: any,
    optionsItems: any.isRequired,
    removeUnchecked: bool,
    selectedOptions: any,
    uploadTheSelected: func.isRequired
};

},{"./../Button":82,"./OptionList":157,"./SearchInput":158,"./SelectedOptionList":160,"./style.less":162,"lodash":"lodash","mdc-classnames":"mdc-classnames","react":"react"}],162:[function(require,module,exports){
module.exports = {"Title-Page":"neptune_Title-Page_1braz","Title-Page-Light":"neptune_Title-Page-Light_1braz","Title-Section-Primary":"neptune_Title-Section-Primary_1braz","Title-Section-Primary-Light":"neptune_Title-Section-Primary-Light_1braz","TITLE-SUBTITLE":"neptune_TITLE-SUBTITLE_1braz","Title-Section-Secondary":"neptune_Title-Section-Secondary_1braz","TITLE-MODULE":"neptune_TITLE-MODULE_1braz","LABEL-STANDARD":"neptune_LABEL-STANDARD_1braz","LABEL-STANDARD-SEMIBOLD":"neptune_LABEL-STANDARD-SEMIBOLD_1braz","LABEL-ATTRIBUTION":"neptune_LABEL-ATTRIBUTION_1braz","LABEL-ATTRIBUTION-MA":"neptune_LABEL-ATTRIBUTION-MA_1braz","LABEL-ATTRIBUTION-MIS":"neptune_LABEL-ATTRIBUTION-MIS_1braz","Label-Footnote":"neptune_Label-Footnote_1braz","Rating":"neptune_Rating_1braz","Header-Primary":"neptune_Header-Primary_1braz","Body-Primary":"neptune_Body-Primary_1braz","Header-Secondary":"neptune_Header-Secondary_1braz","Header-Secondary-Bold":"neptune_Header-Secondary-Bold_1braz","Body-Secondary":"neptune_Body-Secondary_1braz","TABLE-SECTION":"neptune_TABLE-SECTION_1braz","Header-Tertiary":"neptune_Header-Tertiary_1braz","Header-Tertiary-Bold":"neptune_Header-Tertiary-Bold_1braz","Body-Tertiary":"neptune_Body-Tertiary_1braz","Body-Tertiary-Med":"neptune_Body-Tertiary-Med_1braz","Body-Text-Prompt":"neptune_Body-Text-Prompt_1braz","Link-DkBlue":"neptune_Link-DkBlue_1braz","LINK-GOLD":"neptune_LINK-GOLD_1braz","LINK-GREY":"neptune_LINK-GREY_1braz","LABEL-SIDENAV-TITLE":"neptune_LABEL-SIDENAV-TITLE_1braz","MIS-BLUE":"neptune_MIS-BLUE_1braz","MA-BLUE":"neptune_MA-BLUE_1braz","MOODYS-BLUE":"neptune_MOODYS-BLUE_1braz","HIGHLIGHT-BLUE":"neptune_HIGHLIGHT-BLUE_1braz","GOLD":"neptune_GOLD_1braz","GREY-1":"neptune_GREY-1_1braz","GREY-2":"neptune_GREY-2_1braz","GREY-3":"neptune_GREY-3_1braz","GREY-4":"neptune_GREY-4_1braz","BLACK":"neptune_BLACK_1braz","RED":"neptune_RED_1braz","GREEN":"neptune_GREEN_1braz","icon_down_arrow":"neptune_icon_down_arrow_1braz","icon_up_arrow":"neptune_icon_up_arrow_1braz","icon_warning_icon":"neptune_icon_warning_icon_1braz","icon_select_arrows":"neptune_icon_select_arrows_1braz","icon_triangle_down":"neptune_icon_triangle_down_1braz","icon_triangle_up":"neptune_icon_triangle_up_1braz","icon_x_icon":"neptune_icon_x_icon_1braz","icon_right_arrow":"neptune_icon_right_arrow_1braz","MIS-BLUE-FONT":"neptune_MIS-BLUE-FONT_1braz","MIS-BLUE-BG":"neptune_MIS-BLUE-BG_1braz","MIS-BLUE-BORDER":"neptune_MIS-BLUE-BORDER_1braz","MA-BLUE-FONT":"neptune_MA-BLUE-FONT_1braz","MA-BLUE-BG":"neptune_MA-BLUE-BG_1braz","MA-BLUE-BORDER":"neptune_MA-BLUE-BORDER_1braz","MOODYS-BLUE-FONT":"neptune_MOODYS-BLUE-FONT_1braz","MOODYS-BLUE-BG":"neptune_MOODYS-BLUE-BG_1braz","MOODYS-BLUE-BORDER":"neptune_MOODYS-BLUE-BORDER_1braz","HIGHLIGHT-BLUE-FONT":"neptune_HIGHLIGHT-BLUE-FONT_1braz","HIGHLIGHT-BLUE-BG":"neptune_HIGHLIGHT-BLUE-BG_1braz","HIGHLIGHT-BLUE-BORDER":"neptune_HIGHLIGHT-BLUE-BORDER_1braz","GOLD-FONT":"neptune_GOLD-FONT_1braz","GOLD-BG":"neptune_GOLD-BG_1braz","GOLD-BORDER":"neptune_GOLD-BORDER_1braz","GREY-1-FONT":"neptune_GREY-1-FONT_1braz","GREY-1-BG":"neptune_GREY-1-BG_1braz","GREY-1-BORDER":"neptune_GREY-1-BORDER_1braz","GREY-2-FONT":"neptune_GREY-2-FONT_1braz","GREY-2-BG":"neptune_GREY-2-BG_1braz","GREY-2-BORDER":"neptune_GREY-2-BORDER_1braz","GREY-3-FONT":"neptune_GREY-3-FONT_1braz","GREY-3-BG":"neptune_GREY-3-BG_1braz","GREY-3-BORDER":"neptune_GREY-3-BORDER_1braz","GREY-4-FONT":"neptune_GREY-4-FONT_1braz","GREY-4-BG":"neptune_GREY-4-BG_1braz","GREY-4-BORDER":"neptune_GREY-4-BORDER_1braz","BLACK-FONT":"neptune_BLACK-FONT_1braz","BLACK-BG":"neptune_BLACK-BG_1braz","BLACK-BORDER":"neptune_BLACK-BORDER_1braz","RED-FONT":"neptune_RED-FONT_1braz","RED-BG":"neptune_RED-BG_1braz","RED-BORDER":"neptune_RED-BORDER_1braz","GREEN-FONT":"neptune_GREEN-FONT_1braz","GREEN-BG":"neptune_GREEN-BG_1braz","GREEN-BORDER":"neptune_GREEN-BORDER_1braz","multiDropdown":"neptune_multiDropdown_1braz","divTitle":"neptune_divTitle_1braz","selNumShow":"neptune_selNumShow_1braz","divSearchBlock":"neptune_divSearchBlock_1braz","divSearchInputBlock":"neptune_divSearchInputBlock_1braz","divSearchInput":"neptune_divSearchInput_1braz","divSearchList":"neptune_divSearchList_1braz","selectedBlock":"neptune_selectedBlock_1braz","iconDel":"neptune_iconDel_1braz","iconExpand":"neptune_iconExpand_1braz","iconSearch":"neptune_iconSearch_1braz","iconSelected":"neptune_iconSelected_1braz","displayCss":"neptune_displayCss_1braz","displayInlineCss":"neptune_displayInlineCss_1braz","buttonContainer":"neptune_buttonContainer_1braz","okbutton":"neptune_okbutton_1braz","cancelbutton":"neptune_cancelbutton_1braz"}
},{}],163:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _NavLink = require('./NavLink');

var _NavLink2 = _interopRequireDefault(_NavLink);

var _mdcClassnames = require('mdc-classnames');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var styles = require('./NavItem.less');
var cx = _mdcClassnames.setCssModule.bind(styles);

var NavItem = function (_React$Component) {
    _inherits(NavItem, _React$Component);

    function NavItem(props) {
        _classCallCheck(this, NavItem);

        return _possibleConstructorReturn(this, (NavItem.__proto__ || Object.getPrototypeOf(NavItem)).call(this, props));
    }

    _createClass(NavItem, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var itemData = this.props.itemData;
            var classes = cx({
                itemactive: itemData.active,
                itemnoactive: !itemData.active
            });
            var hasChildren = itemData.children && itemData.children.length > 0 ? true : false;
            return React.createElement(
                'li',
                { className: classes, onClick: function onClick(event) {
                        // eslint-disable-line react/jsx-no-bind
                        _this2.clickHandler(event, itemData);
                    } },
                React.createElement(_NavLink2.default, { linkData: itemData, hasChildren: hasChildren }),
                this.getChildren()
            );
        }
    }, {
        key: 'clickHandler',
        value: function clickHandler(event, data) {
            if (!event || data.disabled || data.active) {
                return;
            }
            event.stopPropagation();
            if (!data.onClick) {
                this.props.onClickHandler(data);
            }
        }
    }, {
        key: 'getChildren',
        value: function getChildren() {
            var _this3 = this;

            var itemData = this.props.itemData;
            var hasChildren = itemData.children && itemData.children.length > 0 ? true : false;
            if (!hasChildren || itemData.active !== true || itemData.disabled === true) {
                return null;
            }
            var rows = [];
            itemData.children.forEach(function (item) {
                var classes = cx({
                    disabled: item.disabled,
                    selected: item.active
                });
                rows.push(React.createElement(
                    'li',
                    { className: classes, onClick: function onClick(event) {
                            // eslint-disable-line react/jsx-no-bind
                            _this3.clickHandler(event, item);
                        } },
                    React.createElement(_NavLink2.default, { linkData: item, hasChildren: false })
                ));
            });

            return React.createElement(
                'ul',
                { className: styles.children },
                rows
            );
        }
    }]);

    return NavItem;
}(React.Component);

exports.default = NavItem;


NavItem.propTypes = {
    itemData: React.PropTypes.object,
    onClickHandler: React.PropTypes.func
};

},{"./NavItem.less":164,"./NavLink":165,"mdc-classnames":"mdc-classnames","react":"react"}],164:[function(require,module,exports){
module.exports = {"Title-Page":"neptune_Title-Page_1eizw","Title-Page-Light":"neptune_Title-Page-Light_1eizw","Title-Section-Primary":"neptune_Title-Section-Primary_1eizw","Title-Section-Primary-Light":"neptune_Title-Section-Primary-Light_1eizw","TITLE-SUBTITLE":"neptune_TITLE-SUBTITLE_1eizw","Title-Section-Secondary":"neptune_Title-Section-Secondary_1eizw","TITLE-MODULE":"neptune_TITLE-MODULE_1eizw","LABEL-STANDARD":"neptune_LABEL-STANDARD_1eizw","LABEL-STANDARD-SEMIBOLD":"neptune_LABEL-STANDARD-SEMIBOLD_1eizw","LABEL-ATTRIBUTION":"neptune_LABEL-ATTRIBUTION_1eizw","LABEL-ATTRIBUTION-MA":"neptune_LABEL-ATTRIBUTION-MA_1eizw","LABEL-ATTRIBUTION-MIS":"neptune_LABEL-ATTRIBUTION-MIS_1eizw","Label-Footnote":"neptune_Label-Footnote_1eizw","Rating":"neptune_Rating_1eizw","Header-Primary":"neptune_Header-Primary_1eizw","Body-Primary":"neptune_Body-Primary_1eizw","Header-Secondary":"neptune_Header-Secondary_1eizw","Header-Secondary-Bold":"neptune_Header-Secondary-Bold_1eizw","Body-Secondary":"neptune_Body-Secondary_1eizw","TABLE-SECTION":"neptune_TABLE-SECTION_1eizw","Header-Tertiary":"neptune_Header-Tertiary_1eizw","Header-Tertiary-Bold":"neptune_Header-Tertiary-Bold_1eizw","Body-Tertiary":"neptune_Body-Tertiary_1eizw","Body-Tertiary-Med":"neptune_Body-Tertiary-Med_1eizw","Body-Text-Prompt":"neptune_Body-Text-Prompt_1eizw","Link-DkBlue":"neptune_Link-DkBlue_1eizw","LINK-GOLD":"neptune_LINK-GOLD_1eizw","LINK-GREY":"neptune_LINK-GREY_1eizw","LABEL-SIDENAV-TITLE":"neptune_LABEL-SIDENAV-TITLE_1eizw","MIS-BLUE":"neptune_MIS-BLUE_1eizw","MA-BLUE":"neptune_MA-BLUE_1eizw","MOODYS-BLUE":"neptune_MOODYS-BLUE_1eizw","HIGHLIGHT-BLUE":"neptune_HIGHLIGHT-BLUE_1eizw","GOLD":"neptune_GOLD_1eizw","GREY-1":"neptune_GREY-1_1eizw","GREY-2":"neptune_GREY-2_1eizw","GREY-3":"neptune_GREY-3_1eizw","GREY-4":"neptune_GREY-4_1eizw","BLACK":"neptune_BLACK_1eizw","RED":"neptune_RED_1eizw","GREEN":"neptune_GREEN_1eizw","icon_down_arrow":"neptune_icon_down_arrow_1eizw","icon_up_arrow":"neptune_icon_up_arrow_1eizw","icon_warning_icon":"neptune_icon_warning_icon_1eizw","icon_select_arrows":"neptune_icon_select_arrows_1eizw","icon_triangle_down":"neptune_icon_triangle_down_1eizw","icon_triangle_up":"neptune_icon_triangle_up_1eizw","icon_x_icon":"neptune_icon_x_icon_1eizw","icon_right_arrow":"neptune_icon_right_arrow_1eizw","MIS-BLUE-FONT":"neptune_MIS-BLUE-FONT_1eizw","MIS-BLUE-BG":"neptune_MIS-BLUE-BG_1eizw","MIS-BLUE-BORDER":"neptune_MIS-BLUE-BORDER_1eizw","MA-BLUE-FONT":"neptune_MA-BLUE-FONT_1eizw","MA-BLUE-BG":"neptune_MA-BLUE-BG_1eizw","MA-BLUE-BORDER":"neptune_MA-BLUE-BORDER_1eizw","MOODYS-BLUE-FONT":"neptune_MOODYS-BLUE-FONT_1eizw","MOODYS-BLUE-BG":"neptune_MOODYS-BLUE-BG_1eizw","MOODYS-BLUE-BORDER":"neptune_MOODYS-BLUE-BORDER_1eizw","HIGHLIGHT-BLUE-FONT":"neptune_HIGHLIGHT-BLUE-FONT_1eizw","HIGHLIGHT-BLUE-BG":"neptune_HIGHLIGHT-BLUE-BG_1eizw","HIGHLIGHT-BLUE-BORDER":"neptune_HIGHLIGHT-BLUE-BORDER_1eizw","GOLD-FONT":"neptune_GOLD-FONT_1eizw","GOLD-BG":"neptune_GOLD-BG_1eizw","GOLD-BORDER":"neptune_GOLD-BORDER_1eizw","GREY-1-FONT":"neptune_GREY-1-FONT_1eizw","GREY-1-BG":"neptune_GREY-1-BG_1eizw","GREY-1-BORDER":"neptune_GREY-1-BORDER_1eizw","GREY-2-FONT":"neptune_GREY-2-FONT_1eizw","GREY-2-BG":"neptune_GREY-2-BG_1eizw","GREY-2-BORDER":"neptune_GREY-2-BORDER_1eizw","GREY-3-FONT":"neptune_GREY-3-FONT_1eizw","GREY-3-BG":"neptune_GREY-3-BG_1eizw","GREY-3-BORDER":"neptune_GREY-3-BORDER_1eizw","GREY-4-FONT":"neptune_GREY-4-FONT_1eizw","GREY-4-BG":"neptune_GREY-4-BG_1eizw","GREY-4-BORDER":"neptune_GREY-4-BORDER_1eizw","BLACK-FONT":"neptune_BLACK-FONT_1eizw","BLACK-BG":"neptune_BLACK-BG_1eizw","BLACK-BORDER":"neptune_BLACK-BORDER_1eizw","RED-FONT":"neptune_RED-FONT_1eizw","RED-BG":"neptune_RED-BG_1eizw","RED-BORDER":"neptune_RED-BORDER_1eizw","GREEN-FONT":"neptune_GREEN-FONT_1eizw","GREEN-BG":"neptune_GREEN-BG_1eizw","GREEN-BORDER":"neptune_GREEN-BORDER_1eizw","navMenu":"neptune_navMenu_1eizw neptune_Body-Text-Prompt_1eizw","children":"neptune_children_1eizw","selected":"neptune_selected_1eizw neptune_Header-Secondary_1eizw","disabled":"neptune_disabled_1eizw","itemactive":"neptune_itemactive_1eizw","active":"neptune_active_1eizw neptune_Header-Secondary_1eizw","itemnoactive":"neptune_itemnoactive_1eizw","topBorder":"neptune_topBorder_1eizw","hide":"neptune_hide_1eizw","noactive":"neptune_noactive_1eizw neptune_Body-Text-Prompt_1eizw","iconContainer":"neptune_iconContainer_1eizw","iconDown":"neptune_iconDown_1eizw","iconUp":"neptune_iconUp_1eizw"}
},{}],165:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _reactDom = require('react-dom');

var ReactDOM = _interopRequireWildcard(_reactDom);

var _mdcClassnames = require('mdc-classnames');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var styles = require('./NavItem.less');
var cx = _mdcClassnames.setCssModule.bind(styles);

var NavLink = function (_React$Component) {
    _inherits(NavLink, _React$Component);

    function NavLink(props) {
        _classCallCheck(this, NavLink);

        return _possibleConstructorReturn(this, (NavLink.__proto__ || Object.getPrototypeOf(NavLink)).call(this, props));
    }

    _createClass(NavLink, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var linkData = this.props.linkData;
            var refs = this.refs;
            this.handleClick = this.handleClick.bind(this);
            if (linkData.suppressDefaultOnclick && refs.link) {
                var node = ReactDOM.findDOMNode(refs.link);
                var addEvent = node.addEventListener || node.attachEvent;
                addEvent('click', this.handleClick, true);
            }
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            var linkData = this.props.linkData;
            var refs = this.refs;
            if (linkData.suppressDefaultOnclick && refs.link) {
                var node = ReactDOM.findDOMNode(refs.link);
                var removeEvent = node.removeEventListener || node.detachEvent;
                removeEvent('click', this.handleClick, true);
            }
        }
    }, {
        key: 'handleClick',
        value: function handleClick(event) {
            event.preventDefault();
            return false;
        }
    }, {
        key: 'render',
        value: function render() {
            // eslint-disable-line max-statements
            var linkData = this.props.linkData;
            var hasUrl = linkData.url !== undefined && linkData.url !== null && linkData.url.length > 0;
            var hasTarget = linkData.target !== undefined && linkData.target !== null && linkData.target.length > 0;
            var showLink = linkData.disabled !== true && hasUrl && linkData.active !== true;
            if (!showLink) {
                var classes = cx({
                    active: linkData.active,
                    disabled: linkData.disabled,
                    noactive: !linkData.active
                });
                if (linkData.onClick) {
                    return React.createElement(
                        'span',
                        { className: classes, onClick: linkData.onClick },
                        linkData.label,
                        this.getArrow()
                    ); // eslint-disable-line react/jsx-handler-names
                }
                return React.createElement(
                    'span',
                    { className: classes },
                    linkData.label,
                    this.getArrow()
                );
            }
            var target = hasTarget ? linkData.target : '_self';
            var classesItem = cx({
                active: linkData.active,
                noactive: !linkData.active
            });
            if (linkData.onClick) {
                return React.createElement(
                    'a',
                    { target: target, ref: 'link', className: classesItem, href: linkData.url, onClick: linkData.onClick },
                    linkData.label
                ); // eslint-disable-line react/jsx-handler-names
            }
            if (linkData.pjax === true) {
                var clickHandler = function clickHandler(event) {
                    var label = linkData.label;
                    var url = linkData.url;
                    if (!window || !window.history || !window.eventEmitter) {
                        return;
                    }
                    event.preventDefault();
                    history.pushState({}, label, url);
                    window.eventEmitter.emit('PJAX.NAVIGATION', { url: url });
                };
                if (target === '_blank') {
                    return React.createElement(
                        'a',
                        { target: target, className: classesItem, href: linkData.url },
                        linkData.label
                    );
                }
                return React.createElement(
                    'a',
                    { target: target, className: classesItem, href: linkData.url, onClick: clickHandler },
                    linkData.label
                );
            }
            return React.createElement(
                'a',
                { target: target, className: classesItem, href: linkData.url },
                linkData.label
            );
        }
    }, {
        key: 'getArrow',
        value: function getArrow() {
            var linkData = this.props.linkData;
            var classesItem = cx({
                iconDown: !this.props.hasChildren && linkData.active
            });
            var classesContainer = cx({
                iconContainer: true
            });
            return React.createElement(
                'div',
                { className: classesContainer },
                React.createElement('i', { className: classesItem })
            );
        }
    }]);

    return NavLink;
}(React.Component);

exports.default = NavLink;


NavLink.propTypes = {
    linkData: React.PropTypes.object
};

},{"./NavItem.less":164,"mdc-classnames":"mdc-classnames","react":"react","react-dom":"react-dom"}],166:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _NavItem = require('./NavItem');

var _NavItem2 = _interopRequireDefault(_NavItem);

var _mdcClassnames = require('mdc-classnames');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var styles = require('./NavItem.less');
var cx = _mdcClassnames.setCssModule.bind(styles);

var NavMenu = function (_React$Component) {
    _inherits(NavMenu, _React$Component);

    function NavMenu(props) {
        _classCallCheck(this, NavMenu);

        var _this = _possibleConstructorReturn(this, (NavMenu.__proto__ || Object.getPrototypeOf(NavMenu)).call(this, props));

        _this.state = { dataProvider: props.menuItems };
        _this.handleUpdateActiveStatus = _this.handleUpdateActiveStatus.bind(_this);
        return _this;
    }

    _createClass(NavMenu, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            this.updateActiveStatusByUrl = this.updateActiveStatusByUrl.bind(this);
            window.addEventListener('popstate', this.updateActiveStatusByUrl, false);
            if (window.eventEmitter) {
                window.eventEmitter.on('ROUTER.NAVIGATIONCOMPLETE', function () /*url*/{
                    _this2.updateActiveStatusByUrl();
                });
            }
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            window.removeEventListener('popstate', this.updateActiveStatusByUrl, false);
            if (window.eventEmitter) {
                window.eventEmitter.removeListener('ROUTER.NAVIGATIONCOMPLETE');
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            var rows = [];
            this.state.dataProvider.forEach(function (item) {
                rows.push(React.createElement(_NavItem2.default, { itemData: item, onClickHandler: _this3.handleUpdateActiveStatus }));
            });
            var classes = cx({
                navMenu: true,
                topBorder: this.props.topBold
            });
            return React.createElement(
                'div',
                { className: classes },
                rows
            );
        }
    }, {
        key: 'handleUpdateActiveStatus',
        value: function handleUpdateActiveStatus(itemData) {
            var items = this.state.dataProvider;
            var updateStatusFlag = true;
            items.forEach(function (item) {
                // eslint-disable-line complexity, max-statements
                var childSelected = false;
                var selectItem = null;
                if (item.children && item.children.length > 0) {
                    item.children.forEach(function (subItem) {
                        if (subItem === itemData) {
                            subItem.active = true;
                        } else if (item !== itemData) {
                            subItem.active = false;
                        }
                        if (subItem.active === true) {
                            childSelected = true;
                            selectItem = subItem;
                        }
                    });
                }
                if (item === itemData || childSelected) {
                    item.active = true;
                    if (item.children && item.children.length > 0) {
                        if (!childSelected) {
                            item.children[0].active = true;
                            selectItem = item.children[0];
                        } else if (selectItem.target && selectItem.target === '_blank') {
                            updateStatusFlag = false;
                            return null;
                        }
                        if (selectItem.pjax) {
                            var label = selectItem.label;
                            var url = selectItem.url;
                            if (!window || !window.history || !window.eventEmitter) {
                                return null;
                            }
                            event.preventDefault();
                            if (!childSelected) {
                                history.pushState({}, label, url);
                                window.eventEmitter.emit('PJAX.NAVIGATION', { url: url });
                            } else if (event.target.tagName.toUpperCase() !== 'A') {
                                history.pushState({}, label, url);
                                window.eventEmitter.emit('PJAX.NAVIGATION', { url: url });
                            }
                        } else {
                            window.location.href = item.children[0].url;
                        }
                    } else {
                        if (item.target && item.target === '_blank') {
                            updateStatusFlag = false;
                            return null;
                        }
                        var _label = item.label;
                        var _url = item.url;
                        if (item.pjax) {
                            if (!window || !window.history || !window.eventEmitter) {
                                return null;
                            }
                            event.preventDefault();
                            if (event.target.tagName.toUpperCase() !== 'A') {
                                history.pushState({}, _label, _url);
                                window.eventEmitter.emit('PJAX.NAVIGATION', { url: _url });
                            }
                        } else {
                            window.location.href = _url;
                        }
                    }
                } else {
                    item.active = false;
                }

                return null;
            });
            if (updateStatusFlag) {
                this.setState({ dataProvider: items });
            } else {
                updateStatusFlag = true;
            }
        }
    }, {
        key: 'updateActiveStatusByUrl',
        value: function updateActiveStatusByUrl() {
            var url = window.location.href;
            var items = this.state.dataProvider;
            items.forEach(function (item) {
                var childSelected = false;
                var selectItem = null;
                if (item.children && item.children.length > 0) {
                    item.children.forEach(function (subItem) {
                        if (subItem.url && url.indexOf(subItem.url) >= 0) {
                            subItem.active = true;
                        } else {
                            subItem.active = false;
                        }

                        if (subItem.active === true) {
                            childSelected = true;
                            selectItem = subItem;
                        }
                    });
                }
                if (item.url && url.indexOf(item.url) >= 0 || childSelected) {
                    item.active = true;
                    if (childSelected && selectItem.pjax) {
                        //const label = selectItem.label;
                        var subItemurl = selectItem.url;
                        if (!window || !window.history || !window.eventEmitter) {
                            return;
                        }
                        event.preventDefault();
                        window.eventEmitter.emit('PJAX.NAVIGATION', { subItemurl: subItemurl });
                    }
                } else {
                    item.active = false;
                }
            });
            this.setState({ dataProvider: items });
        }
    }]);

    return NavMenu;
}(React.Component);

exports.default = NavMenu;


NavMenu.propTypes = {
    menuItems: React.PropTypes.array,
    topBold: React.PropTypes.bool
};

NavMenu.defaultProps = {
    menuItems: [],
    topBold: false
};

},{"./NavItem":163,"./NavItem.less":164,"mdc-classnames":"mdc-classnames","react":"react"}],167:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var styles = require('./style.less');

var Info = function (_React$Component) {
    _inherits(Info, _React$Component);

    function Info(props) {
        _classCallCheck(this, Info);

        return _possibleConstructorReturn(this, (Info.__proto__ || Object.getPrototypeOf(Info)).call(this, props));
    }

    _createClass(Info, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var items = [];
            if (this.props.labels && this.props.labels.length > 0) {
                items = this.props.labels.map(function (value, index) {
                    return React.createElement(
                        'div',
                        { key: index, className: styles.info, style: { display: _this2.props.labelIndex === index ? 'block' : 'none' } },
                        value,
                        ' \xA0'
                    );
                });
            }
            return React.createElement(
                'div',
                null,
                items
            );
        }
    }]);

    return Info;
}(React.Component);

exports.default = Info;

Info.propTypes = {
    labelIndex: React.PropTypes.number,
    labels: React.PropTypes.array
};
Info.defaultProps = {
    labelIndex: 0
};

},{"./style.less":169,"react":"react"}],168:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _Info = require('./Info');

var _Info2 = _interopRequireDefault(_Info);

var _lodash = require('lodash');

var _ = _interopRequireWildcard(_lodash);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var styles = require('./style.less');

var Pager = function (_React$Component) {
    _inherits(Pager, _React$Component);

    function Pager(props) {
        _classCallCheck(this, Pager);

        var _this = _possibleConstructorReturn(this, (Pager.__proto__ || Object.getPrototypeOf(Pager)).call(this, props));

        _this.handlePageSelect = _this.handlePageSelect.bind(_this);
        return _this;
    }

    _createClass(Pager, [{
        key: 'pageGenerate',
        value: function pageGenerate() {
            // eslint-disable-line max-statements
            var maxBtnCount = this.props.maxButtonCount;
            var pageSize = this.props.pageSize;
            var lastPage = Math.ceil(this.props.totalCount / pageSize);
            var items = [];
            if (lastPage <= maxBtnCount) {
                for (var i = 1; i <= lastPage; i++) {
                    items.push({ pageNum: i });
                }
            } else {
                var middleNum = (maxBtnCount - 5) / 2;
                var left = this.props.currentIndex - middleNum + 1;
                var right = this.props.currentIndex + middleNum + 1;
                if (left > 3 && right < lastPage - 2) {
                    items.push({ pageNum: 1 });
                    items.push({ pageNum: -2 });
                    for (var _i = left; _i <= right; _i++) {
                        items.push({ pageNum: _i });
                    }
                    items.push({ pageNum: -1 });
                    items.push({ pageNum: lastPage });
                } else if (left <= 3) {
                    for (var _i2 = 1; _i2 < maxBtnCount - 1; _i2++) {
                        items.push({ pageNum: _i2 });
                    }
                    items.push({ pageNum: -1 });
                    items.push({ pageNum: lastPage });
                } else {
                    items.push({ pageNum: 1 });
                    items.push({ pageNum: -2 });
                    for (var _i3 = lastPage - (maxBtnCount - 3); _i3 <= lastPage; _i3++) {
                        items.push({ pageNum: _i3 });
                    }
                }
            }
            return items;
        }
    }, {
        key: 'handlePageSelect',
        value: function handlePageSelect(event) {
            var pageNum = _.toNumber(event.currentTarget.id);
            if (this.props.onPageSelect) {
                this.props.onPageSelect(pageNum);
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            return React.createElement(
                'div',
                { className: styles.pager },
                React.createElement(
                    'ul',
                    null,
                    React.createElement(
                        'li',
                        null,
                        React.createElement(_Info2.default, { labels: this.props.labels })
                    ),
                    React.createElement(
                        'li',
                        null,
                        this.props.todos
                    ),
                    React.createElement(
                        'li',
                        null,
                        this.pageGenerate().map(function (item) {
                            if (item.pageNum < 0) {
                                return React.createElement(
                                    'span',
                                    { key: item.pageNum, className: styles.omit },
                                    '...'
                                );
                            } else {
                                return React.createElement(
                                    'a',
                                    { key: item.pageNum, className: _this2.props.currentIndex === item.pageNum - 1 ? styles.active : ' ', id: item.pageNum, onClick: _this2.handlePageSelect },
                                    ' ',
                                    item.pageNum,
                                    ' '
                                );
                            }
                        })
                    )
                )
            );
        }
    }]);

    return Pager;
}(React.Component);

exports.default = Pager;


Pager.propTypes = {
    currentIndex: React.PropTypes.number,
    labels: React.PropTypes.array,
    maxButtonCount: React.PropTypes.number,
    onPageSelect: React.PropTypes.func,
    pageSize: React.PropTypes.number,
    todos: React.PropTypes.any,
    totalCount: React.PropTypes.number.isRequired
};

Pager.defaultProps = {
    currentIndex: 0,
    labels: [],
    maxButtonCount: 7,
    onPageSelect: function onPageSelect() {},

    pageSize: 50,
    todos: null
};

},{"./Info":167,"./style.less":169,"lodash":"lodash","react":"react"}],169:[function(require,module,exports){
module.exports = {"Title-Page":"neptune_Title-Page_1hy1y","Title-Page-Light":"neptune_Title-Page-Light_1hy1y","Title-Section-Primary":"neptune_Title-Section-Primary_1hy1y","Title-Section-Primary-Light":"neptune_Title-Section-Primary-Light_1hy1y","TITLE-SUBTITLE":"neptune_TITLE-SUBTITLE_1hy1y","Title-Section-Secondary":"neptune_Title-Section-Secondary_1hy1y","TITLE-MODULE":"neptune_TITLE-MODULE_1hy1y","LABEL-STANDARD":"neptune_LABEL-STANDARD_1hy1y","LABEL-STANDARD-SEMIBOLD":"neptune_LABEL-STANDARD-SEMIBOLD_1hy1y","LABEL-ATTRIBUTION":"neptune_LABEL-ATTRIBUTION_1hy1y","LABEL-ATTRIBUTION-MA":"neptune_LABEL-ATTRIBUTION-MA_1hy1y","LABEL-ATTRIBUTION-MIS":"neptune_LABEL-ATTRIBUTION-MIS_1hy1y","Label-Footnote":"neptune_Label-Footnote_1hy1y","Rating":"neptune_Rating_1hy1y","Header-Primary":"neptune_Header-Primary_1hy1y","Body-Primary":"neptune_Body-Primary_1hy1y","Header-Secondary":"neptune_Header-Secondary_1hy1y","Header-Secondary-Bold":"neptune_Header-Secondary-Bold_1hy1y","Body-Secondary":"neptune_Body-Secondary_1hy1y","TABLE-SECTION":"neptune_TABLE-SECTION_1hy1y","Header-Tertiary":"neptune_Header-Tertiary_1hy1y","Header-Tertiary-Bold":"neptune_Header-Tertiary-Bold_1hy1y","Body-Tertiary":"neptune_Body-Tertiary_1hy1y","Body-Tertiary-Med":"neptune_Body-Tertiary-Med_1hy1y","Body-Text-Prompt":"neptune_Body-Text-Prompt_1hy1y","Link-DkBlue":"neptune_Link-DkBlue_1hy1y","LINK-GOLD":"neptune_LINK-GOLD_1hy1y","LINK-GREY":"neptune_LINK-GREY_1hy1y","LABEL-SIDENAV-TITLE":"neptune_LABEL-SIDENAV-TITLE_1hy1y","MIS-BLUE":"neptune_MIS-BLUE_1hy1y","MA-BLUE":"neptune_MA-BLUE_1hy1y","MOODYS-BLUE":"neptune_MOODYS-BLUE_1hy1y","HIGHLIGHT-BLUE":"neptune_HIGHLIGHT-BLUE_1hy1y","GOLD":"neptune_GOLD_1hy1y","GREY-1":"neptune_GREY-1_1hy1y","GREY-2":"neptune_GREY-2_1hy1y","GREY-3":"neptune_GREY-3_1hy1y","GREY-4":"neptune_GREY-4_1hy1y","BLACK":"neptune_BLACK_1hy1y","RED":"neptune_RED_1hy1y","GREEN":"neptune_GREEN_1hy1y","icon_down_arrow":"neptune_icon_down_arrow_1hy1y","icon_up_arrow":"neptune_icon_up_arrow_1hy1y","icon_warning_icon":"neptune_icon_warning_icon_1hy1y","icon_select_arrows":"neptune_icon_select_arrows_1hy1y","icon_triangle_down":"neptune_icon_triangle_down_1hy1y","icon_triangle_up":"neptune_icon_triangle_up_1hy1y","icon_x_icon":"neptune_icon_x_icon_1hy1y","icon_right_arrow":"neptune_icon_right_arrow_1hy1y","MIS-BLUE-FONT":"neptune_MIS-BLUE-FONT_1hy1y","MIS-BLUE-BG":"neptune_MIS-BLUE-BG_1hy1y","MIS-BLUE-BORDER":"neptune_MIS-BLUE-BORDER_1hy1y","MA-BLUE-FONT":"neptune_MA-BLUE-FONT_1hy1y","MA-BLUE-BG":"neptune_MA-BLUE-BG_1hy1y","MA-BLUE-BORDER":"neptune_MA-BLUE-BORDER_1hy1y","MOODYS-BLUE-FONT":"neptune_MOODYS-BLUE-FONT_1hy1y","MOODYS-BLUE-BG":"neptune_MOODYS-BLUE-BG_1hy1y","MOODYS-BLUE-BORDER":"neptune_MOODYS-BLUE-BORDER_1hy1y","HIGHLIGHT-BLUE-FONT":"neptune_HIGHLIGHT-BLUE-FONT_1hy1y","HIGHLIGHT-BLUE-BG":"neptune_HIGHLIGHT-BLUE-BG_1hy1y","HIGHLIGHT-BLUE-BORDER":"neptune_HIGHLIGHT-BLUE-BORDER_1hy1y","GOLD-FONT":"neptune_GOLD-FONT_1hy1y","GOLD-BG":"neptune_GOLD-BG_1hy1y","GOLD-BORDER":"neptune_GOLD-BORDER_1hy1y","GREY-1-FONT":"neptune_GREY-1-FONT_1hy1y","GREY-1-BG":"neptune_GREY-1-BG_1hy1y","GREY-1-BORDER":"neptune_GREY-1-BORDER_1hy1y","GREY-2-FONT":"neptune_GREY-2-FONT_1hy1y","GREY-2-BG":"neptune_GREY-2-BG_1hy1y","GREY-2-BORDER":"neptune_GREY-2-BORDER_1hy1y","GREY-3-FONT":"neptune_GREY-3-FONT_1hy1y","GREY-3-BG":"neptune_GREY-3-BG_1hy1y","GREY-3-BORDER":"neptune_GREY-3-BORDER_1hy1y","GREY-4-FONT":"neptune_GREY-4-FONT_1hy1y","GREY-4-BG":"neptune_GREY-4-BG_1hy1y","GREY-4-BORDER":"neptune_GREY-4-BORDER_1hy1y","BLACK-FONT":"neptune_BLACK-FONT_1hy1y","BLACK-BG":"neptune_BLACK-BG_1hy1y","BLACK-BORDER":"neptune_BLACK-BORDER_1hy1y","RED-FONT":"neptune_RED-FONT_1hy1y","RED-BG":"neptune_RED-BG_1hy1y","RED-BORDER":"neptune_RED-BORDER_1hy1y","GREEN-FONT":"neptune_GREEN-FONT_1hy1y","GREEN-BG":"neptune_GREEN-BG_1hy1y","GREEN-BORDER":"neptune_GREEN-BORDER_1hy1y","pager":"neptune_pager_1hy1y","active":"neptune_active_1hy1y","omit":"neptune_omit_1hy1y","info":"neptune_info_1hy1y"}
},{}],170:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _mdcClassnames = require('mdc-classnames');

var _Panel = require('../Panel');

var _Panel2 = _interopRequireDefault(_Panel);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var styles = require('./style.less');

var PanelGroup = function (_React$Component) {
    _inherits(PanelGroup, _React$Component);

    function PanelGroup(props) {
        _classCallCheck(this, PanelGroup);

        return _possibleConstructorReturn(this, (PanelGroup.__proto__ || Object.getPrototypeOf(PanelGroup)).call(this, props));
    }

    _createClass(PanelGroup, [{
        key: 'render',
        value: function render() {
            var className = (0, _mdcClassnames.setCssModule)('panel-group', this.props.className);
            return React.createElement(
                'div',
                { className: styles[className] },
                this.getGroupPanels()
            );
        }
    }, {
        key: 'getGroupPanels',
        value: function getGroupPanels() {
            if (!this.props.children) {
                throw new Error('PanelGroup must contain at least one Panel');
            }
            if (!Array.isArray(this.props.children)) {
                this.props.children = [this.props.children];
            }
            var $groupPanels = this.props.children.map(function (panel, index) {
                return React.createElement(
                    _Panel2.default,
                    { key: index, title: panel.props.title, className: panel.props.className, subTitle: panel.props.subTitle },
                    panel.props.children
                );
            });
            return $groupPanels;
        }
    }]);

    return PanelGroup;
}(React.Component);

exports.default = PanelGroup;

PanelGroup.propTypes = {
    children: React.PropTypes.array.isRequired,
    className: React.PropTypes.string
};

},{"../Panel":172,"./style.less":171,"mdc-classnames":"mdc-classnames","react":"react"}],171:[function(require,module,exports){
module.exports = {"panel-group":"neptune_panel-group_17i32","panel-group-item":"neptune_panel-group-item_17i32"}
},{}],172:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _mdcClassnames = require('mdc-classnames');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var styles = require('./style.less');

var Panel = function (_React$Component) {
    _inherits(Panel, _React$Component);

    function Panel(props, defaultProps) {
        _classCallCheck(this, Panel);

        var _this = _possibleConstructorReturn(this, (Panel.__proto__ || Object.getPrototypeOf(Panel)).call(this, props, defaultProps));

        _this.onExpandCollapseClick = _this.onExpandCollapseClick.bind(_this);
        return _this;
    }

    _createClass(Panel, [{
        key: '_renderTitle',
        value: function _renderTitle() {
            var iconClassName = this.props.collapsible ? this.props.expanded ? 'icon-up' : 'icon-down' : 'hidden'; // eslint-disable-line no-nested-ternary
            if (this.props.collapsible) {
                return React.createElement(
                    'div',
                    null,
                    React.createElement(
                        'div',
                        { className: styles['pull-left'] },
                        React.createElement('span', { className: styles[iconClassName] })
                    ),
                    React.createElement(
                        'div',
                        { className: styles['pull-left'] },
                        this.props.title
                    )
                );
            } else {
                return React.createElement(
                    'div',
                    null,
                    this.props.title
                );
            }
        }
    }, {
        key: '_renderSubTitle',
        value: function _renderSubTitle() {
            if (this.props.subTitle) {
                return React.createElement(
                    'div',
                    null,
                    this.props.subTitle
                );
            } else {
                return null;
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var classes = (0, _mdcClassnames.setCssModule)('panel', this.props.className);
            var accordianContentClassName = this.props.expanded ? 'panel-content-expand' : 'panel-content-collapse';
            var panelTitleClassName = this.props.collapsible && this.props.disabled !== true ? 'collapsible-panel-title' : 'panel-title';
            var panelTitleClassName1 = this.props.disabled === true ? 'filter-disabled' : '';
            var panelTitleClassNameFull = panelTitleClassName1.length > 0 ? styles[panelTitleClassName] + ' ' + styles[panelTitleClassName1] : styles[panelTitleClassName];
            return React.createElement(
                'div',
                { className: styles[classes] },
                React.createElement(
                    'div',
                    { className: panelTitleClassNameFull, onClick: this.onExpandCollapseClick },
                    this._renderTitle(),
                    this._renderSubTitle()
                ),
                React.createElement(
                    'div',
                    { className: styles[accordianContentClassName] },
                    this.props.children
                )
            );
        }
    }, {
        key: 'onExpandCollapseClick',
        value: function onExpandCollapseClick() /*event*/{
            if (this.props.onExpandCollapseClick) {
                this.props.onExpandCollapseClick(this, this.props.panelId);
            }
            if (this.props.onExpandCollapseAccordionClick) {
                this.props.onExpandCollapseAccordionClick(this, this.props.panelId);
            }
        }
    }]);

    return Panel;
}(React.Component);

exports.default = Panel;


Panel.propTypes = {
    children: React.PropTypes.any,
    className: React.PropTypes.string,
    collapsible: React.PropTypes.bool,
    disabled: React.PropTypes.bool,
    expanded: React.PropTypes.bool,
    onExpandCollapseAccordionClick: React.PropTypes.func,
    onExpandCollapseClick: React.PropTypes.func,
    panelId: React.PropTypes.number,
    subTitle: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.object]),
    title: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.object])
};

Panel.defaultProps = {
    collapsible: false,
    expanded: true,
    disabled: false
};

},{"./style.less":173,"mdc-classnames":"mdc-classnames","react":"react"}],173:[function(require,module,exports){
module.exports = {"Title-Page":"neptune_Title-Page_teo0z","Title-Page-Light":"neptune_Title-Page-Light_teo0z","Title-Section-Primary":"neptune_Title-Section-Primary_teo0z","Title-Section-Primary-Light":"neptune_Title-Section-Primary-Light_teo0z","TITLE-SUBTITLE":"neptune_TITLE-SUBTITLE_teo0z","Title-Section-Secondary":"neptune_Title-Section-Secondary_teo0z","TITLE-MODULE":"neptune_TITLE-MODULE_teo0z","LABEL-STANDARD":"neptune_LABEL-STANDARD_teo0z","LABEL-STANDARD-SEMIBOLD":"neptune_LABEL-STANDARD-SEMIBOLD_teo0z","LABEL-ATTRIBUTION":"neptune_LABEL-ATTRIBUTION_teo0z","LABEL-ATTRIBUTION-MA":"neptune_LABEL-ATTRIBUTION-MA_teo0z","LABEL-ATTRIBUTION-MIS":"neptune_LABEL-ATTRIBUTION-MIS_teo0z","Label-Footnote":"neptune_Label-Footnote_teo0z","Rating":"neptune_Rating_teo0z","Header-Primary":"neptune_Header-Primary_teo0z","Body-Primary":"neptune_Body-Primary_teo0z","Header-Secondary":"neptune_Header-Secondary_teo0z","Header-Secondary-Bold":"neptune_Header-Secondary-Bold_teo0z","Body-Secondary":"neptune_Body-Secondary_teo0z","TABLE-SECTION":"neptune_TABLE-SECTION_teo0z","Header-Tertiary":"neptune_Header-Tertiary_teo0z","Header-Tertiary-Bold":"neptune_Header-Tertiary-Bold_teo0z","Body-Tertiary":"neptune_Body-Tertiary_teo0z","Body-Tertiary-Med":"neptune_Body-Tertiary-Med_teo0z","Body-Text-Prompt":"neptune_Body-Text-Prompt_teo0z","Link-DkBlue":"neptune_Link-DkBlue_teo0z","LINK-GOLD":"neptune_LINK-GOLD_teo0z","LINK-GREY":"neptune_LINK-GREY_teo0z","LABEL-SIDENAV-TITLE":"neptune_LABEL-SIDENAV-TITLE_teo0z","MIS-BLUE":"neptune_MIS-BLUE_teo0z","MA-BLUE":"neptune_MA-BLUE_teo0z","MOODYS-BLUE":"neptune_MOODYS-BLUE_teo0z","HIGHLIGHT-BLUE":"neptune_HIGHLIGHT-BLUE_teo0z","GOLD":"neptune_GOLD_teo0z","GREY-1":"neptune_GREY-1_teo0z","GREY-2":"neptune_GREY-2_teo0z","GREY-3":"neptune_GREY-3_teo0z","GREY-4":"neptune_GREY-4_teo0z","BLACK":"neptune_BLACK_teo0z","RED":"neptune_RED_teo0z","GREEN":"neptune_GREEN_teo0z","icon_down_arrow":"neptune_icon_down_arrow_teo0z","icon_up_arrow":"neptune_icon_up_arrow_teo0z","icon_warning_icon":"neptune_icon_warning_icon_teo0z","icon_select_arrows":"neptune_icon_select_arrows_teo0z","icon_triangle_down":"neptune_icon_triangle_down_teo0z","icon_triangle_up":"neptune_icon_triangle_up_teo0z","icon_x_icon":"neptune_icon_x_icon_teo0z","icon_right_arrow":"neptune_icon_right_arrow_teo0z","MIS-BLUE-FONT":"neptune_MIS-BLUE-FONT_teo0z","MIS-BLUE-BG":"neptune_MIS-BLUE-BG_teo0z","MIS-BLUE-BORDER":"neptune_MIS-BLUE-BORDER_teo0z","MA-BLUE-FONT":"neptune_MA-BLUE-FONT_teo0z","MA-BLUE-BG":"neptune_MA-BLUE-BG_teo0z","MA-BLUE-BORDER":"neptune_MA-BLUE-BORDER_teo0z","MOODYS-BLUE-FONT":"neptune_MOODYS-BLUE-FONT_teo0z","MOODYS-BLUE-BG":"neptune_MOODYS-BLUE-BG_teo0z","MOODYS-BLUE-BORDER":"neptune_MOODYS-BLUE-BORDER_teo0z","HIGHLIGHT-BLUE-FONT":"neptune_HIGHLIGHT-BLUE-FONT_teo0z","HIGHLIGHT-BLUE-BG":"neptune_HIGHLIGHT-BLUE-BG_teo0z","HIGHLIGHT-BLUE-BORDER":"neptune_HIGHLIGHT-BLUE-BORDER_teo0z","GOLD-FONT":"neptune_GOLD-FONT_teo0z","GOLD-BG":"neptune_GOLD-BG_teo0z","GOLD-BORDER":"neptune_GOLD-BORDER_teo0z","GREY-1-FONT":"neptune_GREY-1-FONT_teo0z","GREY-1-BG":"neptune_GREY-1-BG_teo0z","GREY-1-BORDER":"neptune_GREY-1-BORDER_teo0z","GREY-2-FONT":"neptune_GREY-2-FONT_teo0z","GREY-2-BG":"neptune_GREY-2-BG_teo0z","GREY-2-BORDER":"neptune_GREY-2-BORDER_teo0z","GREY-3-FONT":"neptune_GREY-3-FONT_teo0z","GREY-3-BG":"neptune_GREY-3-BG_teo0z","GREY-3-BORDER":"neptune_GREY-3-BORDER_teo0z","GREY-4-FONT":"neptune_GREY-4-FONT_teo0z","GREY-4-BG":"neptune_GREY-4-BG_teo0z","GREY-4-BORDER":"neptune_GREY-4-BORDER_teo0z","BLACK-FONT":"neptune_BLACK-FONT_teo0z","BLACK-BG":"neptune_BLACK-BG_teo0z","BLACK-BORDER":"neptune_BLACK-BORDER_teo0z","RED-FONT":"neptune_RED-FONT_teo0z","RED-BG":"neptune_RED-BG_teo0z","RED-BORDER":"neptune_RED-BORDER_teo0z","GREEN-FONT":"neptune_GREEN-FONT_teo0z","GREEN-BG":"neptune_GREEN-BG_teo0z","GREEN-BORDER":"neptune_GREEN-BORDER_teo0z","panel":"neptune_panel_teo0z","icon-dim":"neptune_icon-dim_teo0z","panel-title":"neptune_panel-title_teo0z","icon-down":"neptune_icon-down_teo0z","icon-up":"neptune_icon-up_teo0z","collapsible-panel-title":"neptune_collapsible-panel-title_teo0z","panel-content-collapse":"neptune_panel-content-collapse_teo0z","panel-content-expand":"neptune_panel-content-expand_teo0z","pull-left":"neptune_pull-left_teo0z","filter-disabled":"neptune_filter-disabled_teo0z"}
},{}],174:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Content = function (_React$Component) {
    _inherits(Content, _React$Component);

    function Content() {
        _classCallCheck(this, Content);

        return _possibleConstructorReturn(this, (Content.__proto__ || Object.getPrototypeOf(Content)).call(this));
    }

    _createClass(Content, [{
        key: 'render',
        value: function render() {
            return React.createElement(
                'div',
                null,
                this.props.children
            );
        }
    }], [{
        key: 'getName',
        value: function getName() {
            return 'content';
        }
    }]);

    return Content;
}(React.Component);

Content.propTypes = {
    children: React.PropTypes.any
};
exports.default = Content;

},{"react":"react"}],175:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.EventListener = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var on = function on(target, eventName, callback, capture) {
    if (target.addEventListener) {
        target.addEventListener(eventName, callback, capture);
    } else if (target.attachEvent) {
        target.attachEvent('on' + eventName, function () {
            callback.call(target);
        });
    }
};

var off = function off(target, eventName, callback, capture) {
    if (target.removeEventListener) {
        target.removeEventListener(eventName, callback, capture);
    } else if (target.detachEvent) {
        target.detachEvent('on' + eventName, callback);
    }
};

var EventListener = exports.EventListener = function (_React$Component) {
    _inherits(EventListener, _React$Component);

    function EventListener() {
        _classCallCheck(this, EventListener);

        return _possibleConstructorReturn(this, (EventListener.__proto__ || Object.getPrototypeOf(EventListener)).apply(this, arguments));
    }

    _createClass(EventListener, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            this._target = this.getTarget();
            setTimeout(function () {
                _this2.addListeners();
            }, 200);
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            this.removeListeners();
        }
    }, {
        key: 'render',
        value: function render() {
            return null;
        }
    }, {
        key: 'getTarget',
        value: function getTarget() {
            var target = this.props.target;
            if (!target) {
                return window;
            }
            if (typeof target === 'string') {
                return window[target];
            }
            if (typeof target === 'function') {
                return target();
            }
            return target;
        }
    }, {
        key: 'addListeners',
        value: function addListeners() {
            on(this._target, this.props.eventName, this.props.onEvent, null);
        }
    }, {
        key: 'removeListeners',
        value: function removeListeners() {
            off(this._target, this.props.eventName, this.props.onEvent, null);
        }
    }]);

    return EventListener;
}(React.Component);

EventListener.propTypes = {
    eventName: React.PropTypes.string.isRequired,
    onEvent: React.PropTypes.func,
    target: React.PropTypes.any
};

},{"react":"react"}],176:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Trigger = function (_React$Component) {
    _inherits(Trigger, _React$Component);

    function Trigger() {
        _classCallCheck(this, Trigger);

        return _possibleConstructorReturn(this, (Trigger.__proto__ || Object.getPrototypeOf(Trigger)).call(this));
    }

    _createClass(Trigger, [{
        key: 'render',
        value: function render() {
            return React.createElement(
                'div',
                null,
                this.props.children
            );
        }
    }], [{
        key: 'getName',
        value: function getName() {
            return 'trigger';
        }
    }]);

    return Trigger;
}(React.Component);

Trigger.propTypes = {
    children: React.PropTypes.any
};
exports.default = Trigger;

},{"react":"react"}],177:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _reactDom = require('react-dom');

var ReactDOM = _interopRequireWildcard(_reactDom);

var _Index = require('../Label/Index');

var _Index2 = _interopRequireDefault(_Index);

var _EventListener = require('./EventListener');

var _mdcClassnames = require('mdc-classnames');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _ = require('lodash');
var styles = require('./style.less');

var cx = _mdcClassnames.setCssModule.bind(styles);

var isText = function isText(child) {
    if (child && child.type) {
        return false;
    }
    return true;
};

var matchElement = function matchElement(name, el) {
    var className = styles[name];
    return el.getElementsByClassName(className) ? el.getElementsByClassName(className)[0] : undefined;
};

var setContainerPosition = function setContainerPosition(align, toolTips, el, container) {
    // eslint-disable-line complexity, max-statements
    var containerElement = matchElement('container', el);
    var contentElement = matchElement('content', el);
    if (toolTips) {
        //const circleElement = matchElement('circle', el);
        var titleElement = matchElement('toolTipsTitle', el);
        var className = 'pos_' + align.replace('-', '_');
        var leftPadding = 16;
        var topPadding = 21;
        contentElement.classList.add(styles[className]);
        var titleWidth = titleElement.offsetWidth;
        var titleHeight = titleElement.offsetHeight;
        var popInWindows = document.getElementById('popoverTest').children[0];
        contentElement.style.width = popInWindows.offsetWidth + 'px';
        if (popInWindows.remove) {
            popInWindows.remove();
        } else {
            popInWindows.removeNode(true);
        }
        var contentHeight = contentElement.offsetHeight;
        var contentWidth = contentElement.offsetWidth;
        var overlayHeight = contentElement.offsetHeight - 2 * topPadding;
        var overlayWidth = contentElement.offsetWidth - 2 * leftPadding;
        switch (align) {
            case 'top-right':
                contentElement.style.top = '-' + (contentHeight + 6 + 3) + 'px';
                contentElement.style.left = titleWidth / 2 - 24 + 'px';
                contentElement.classList.add(styles.triangle);
                break;
            case 'top-left':
                contentElement.style.top = '-' + (contentHeight + 6 + 3) + 'px';
                contentElement.style.left = '-' + (overlayWidth + 2 * leftPadding - 24 - titleWidth / 2) + 'px';
                contentElement.classList.add(styles.pos_top_left);
                break;
            case 'bottom-right':
                contentElement.style.left = titleWidth / 2 - 24 + 'px';
                contentElement.style.top = titleHeight + 6 + 3 + 'px';
                contentElement.classList.add(styles.pos_bottom_right);
                break;
            case 'bottom-left':
                contentElement.style.left = '-' + (overlayWidth + 2 * leftPadding - 24 - titleWidth / 2) + 'px';
                contentElement.style.top = titleHeight + 6 + 3 + 'px';
                contentElement.classList.add(styles.pos_bottom_left);
                break;
            case 'right':
                contentElement.style.left = titleWidth + 7 + 4 + 'px';
                contentElement.style.top = '-' + (titleHeight + 6 - 9) + 'px';
                contentElement.classList.add(styles.pos_right);
                break;
            case 'left':
                contentElement.style.left = '-' + (contentWidth + 7 + 5) + 'px';
                contentElement.style.top = '-' + (titleHeight + 6 - 9) + 'px';
                contentElement.classList.add(styles.pos_left);
                break;
            case 'left-bottom':
                contentElement.style.left = '-' + (contentWidth + 7 + 5) + 'px';
                contentElement.style.top = '-' + (titleHeight + 6 - 9) + 'px';
                contentElement.classList.add(styles.pos_left_bottom);
                break;
            case 'right-bottom':
                contentElement.style.left = titleWidth + 7 + 4 + 'px';
                contentElement.style.top = '-' + (titleHeight + 6 - 9) + 'px';
                contentElement.classList.add(styles.pos_right_bottom);
                break;
            case 'left-top':
                contentElement.style.left = '-' + (contentWidth + 7 + 5) + 'px';
                contentElement.style.top = '-' + (overlayHeight + topPadding - titleHeight) + 'px';
                contentElement.classList.add(styles.pos_left_top);
                break;
            case 'right-top':
                contentElement.style.left = titleWidth + 7 + 4 + 'px';
                contentElement.style.top = '-' + (overlayHeight + topPadding - titleHeight) + 'px';
                contentElement.classList.add(styles.pos_right_top);
                break;
            default:
                break;
        }
    } else {
        el.style.padding = '0px';
    }
    if (container && !toolTips) {
        if (containerElement) {
            if (toolTips) {
                containerElement.style.padding = '0px';
            }
            contentElement.style.top = containerElement.clientHeight + 1 + 'px';
            if (align === 'left') {
                contentElement.style.left = '-' + (contentElement.clientWidth - containerElement.clientWidth) + 'px';
            }
        }
    }
};

var isOneOf = function isOneOf(one, of) {
    return of.indexOf(one) > -1;
};

var contain = function contain(container, el) {
    do {
        if (el.nodeName === container.nodeName && el.nodeName === 'path') {
            return true;
        }
        container = container && container.children && container.children[0];
    } while (container);
    return false;
};

var contains = function () {
    var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
    var root = canUseDOM && document.documentElement;
    if (root && root.contains) {
        return function (context, node) {
            return context.contains(node);
        };
    } else if (root && root.compareDocumentPosition) {
        return function (context, node) {
            return context === node || context.compareDocumentPosition(node) === 16;
        };
    } else {
        return function (context, node) {
            if (node) {
                do {
                    if (node === context) {
                        return true;
                    }
                } while (node === node.parentNode);
            }
            return false;
        };
    }
}();

var Popover = function (_React$Component) {
    _inherits(Popover, _React$Component);

    function Popover(props) {
        _classCallCheck(this, Popover);

        var _this = _possibleConstructorReturn(this, (Popover.__proto__ || Object.getPrototypeOf(Popover)).call(this, props));

        _this.state = { isOverlayShown: false };
        _this.toggle = _this.toggle.bind(_this);
        _this.handleMouseOver = function (e) {
            return _this.handleMouseOverOut(e, true);
        };
        _this.handleMouseOut = function (e) {
            return _this.handleMouseOverOut(e, false);
        };
        return _this;
    }

    _createClass(Popover, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.componentDidUpdate();
            if (Popover.registry.indexOf(this) === -1) {
                Popover.registry.push(this);
            }
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            if (Popover.registry.indexOf(this) !== -1) {
                Popover.registry.splice(Popover.registry.indexOf(this), 1);
            }
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate() {
            this.domHandle();
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            //eslint-disable-line max-statements
            var _props = this.props;
            var trigger = _props.trigger;
            var children = _props.children;

            var child = children;
            var content = null;
            if (_react.Children.count(children) > 1) {
                child = _.filter(_react.Children.toArray(children), function (item) {
                    return item.type.getName() === 'trigger';
                })[0];
                child = child.props.children;
                content = _.filter(_react.Children.toArray(children), function (item) {
                    return item.type.getName() === 'content';
                })[0];
                content = content.props.children;
            }
            var props = {};
            if (isOneOf('click', trigger)) {
                props.onClick = this.toggle;
            }
            if (isOneOf('hover', trigger)) {
                props.onMouseOver = this.handleMouseOver;
                props.onMouseOut = this.handleMouseOut;
            }
            var component = React.createElement('div', null, child);
            return React.cloneElement(component, Object.assign(props, {
                children: this.renderChildren(component, content),
                className: cx({ overlayShown: this.state.isOverlayShown }, styles.component, this.props.className),
                ref: function ref(ctrl) {
                    _this2._rootControl = ctrl;
                }
            }));
        }
    }, {
        key: 'toggle',
        value: function toggle(e) {
            if (this.state.isOverlayShown) {
                if (!contains(matchElement('content', this._rootControl), e.target)) {
                    this.hide();
                }
            } else if (!this.props.disable) {
                var onTriggered = this.props.onTriggered;
                if (onTriggered) {
                    onTriggered();
                }
                this.show();
            }
        }
    }, {
        key: 'show',
        value: function show() {
            var that = this; //eslint-disable-line consistent-this
            Popover.registry.map(function (popover) {
                if (popover !== that) {
                    popover.hide();
                }
            });
            this.setState({ isOverlayShown: true });
        }
    }, {
        key: 'hide',
        value: function hide() {
            var duration = 250;
            var refs = this.refs;
            var that = this; //eslint-disable-line consistent-this
            var onClosed = this.props.onClosed;
            if (refs.overlay) {
                setTimeout(function () {
                    that.setState({ isOverlayShown: false });
                    if (onClosed) {
                        onClosed();
                    }
                }, duration);
                refs.overlay.style.opacity = 0;
                if (refs.title) {
                    refs.overlay.style.borderTopColor = '#F1F1F1';
                    refs.title.style.opacity = 0;
                }
            } else {
                this.setState({ isOverlayShown: false });
                if (onClosed) {
                    onClosed();
                }
            }
        }
    }, {
        key: 'renderChildren',
        value: function renderChildren(component, content) {
            //eslint-disable-line max-statements
            var _props2 = this.props;
            var toolTips = _props2.toolTips;
            var additionalContentClassName = _props2.additionalContentClassName;
            var additionalCircleClassName = _props2.additionalCircleClassName;
            var trigger = _props2.trigger;

            var that = this; //eslint-disable-line consistent-this
            var overlay = this.props.overlay;
            if (content) {
                overlay = content;
            }
            var children = React.createElement(
                'div',
                { className: cx(styles.title) },
                component
            );
            var compChildren = component.props.children;
            if (toolTips) {
                children = isText(compChildren) ? React.createElement(
                    'div',
                    { className: styles.toolTipsTitle },
                    React.createElement(
                        _Index2.default,
                        null,
                        compChildren
                    )
                ) : React.createElement(
                    'div',
                    { className: styles.toolTipsTitle },
                    compChildren
                );
            }
            if (this.state.isOverlayShown) {
                var eventListener = React.createElement(_EventListener.EventListener, { eventName: trigger, onEvent: function onEvent(e) {
                        that.rootClose(e);
                    } });
                var titleStyle = _defineProperty({
                    opacity: 0,
                    transition: 'opacity 250ms'
                }, 'transition-timing-function', 'cubic-bezier (0.25,0.21,0.25,1)');
                var addOn = React.createElement(
                    'div',
                    null,
                    React.createElement(
                        'div',
                        { className: cx(styles.title, styles.container), style: titleStyle, ref: 'title' },
                        component
                    )
                );
                var showTextStyle = {
                    position: 'absolute',
                    top: '0'
                };
                var showText = React.createElement(
                    'div',
                    null,
                    React.createElement(
                        'div',
                        { className: cx(styles.title), style: showTextStyle },
                        compChildren
                    )
                );
                var overlayTransition = _defineProperty({
                    borderTopColor: toolTips ? '#ABABAB' : '#F1F1F1',
                    opacity: 0,
                    transition: 'opacity 250ms'
                }, 'transition-timing-function', 'cubic-bezier (0.25,0.21,0.25,1)');
                var overlayAddOn = React.createElement(
                    'div',
                    { className: cx(styles.content, additionalContentClassName), style: overlayTransition, ref: 'overlay' },
                    overlay
                );
                if (toolTips) {
                    var contentStyle = Object.assign({ height: 'auto', width: 'auto' }, overlayTransition);
                    overlayAddOn = React.createElement(
                        'div',
                        { className: cx(additionalContentClassName, styles.content, styles.tootips), style: contentStyle, ref: 'overlay' },
                        React.createElement(
                            'div',
                            { className: cx(additionalCircleClassName, styles.circle, styles.icon) },
                            '\xA0 '
                        ),
                        overlay
                    );
                    var div = document.getElementById('popoverTest');
                    div = div ? div : document.createElement('div');
                    div.setAttribute('id', 'popoverTest');
                    if (trigger === 'hover') {
                        div.style.maxWidth = '400px';
                    }
                    document.body.appendChild(div);
                    ReactDOM.render(overlayAddOn, document.getElementById('popoverTest'));
                    children = _([]).union([children, overlayAddOn, eventListener]).flatten().filter(undefined).value();
                } else {
                    children = _([]).union([showText, addOn, overlayAddOn, eventListener]).flatten().filter(undefined).value();
                }
            }
            return children;
        }
    }, {
        key: 'rootClose',
        value: function rootClose(e) {
            if (this._rootControl && !contains(this._rootControl, e.target) && !contain(this._rootControl, e.target)) {
                this.hide();
            }
        }
    }, {
        key: 'handleMouseOver',
        value: function handleMouseOver(e) {
            var onTriggered = this.props.onTriggered;
            if (onTriggered) {
                onTriggered();
            }
            this.handleMouseOverOut(e, true);
        }
    }, {
        key: 'handleMouseOut',
        value: function handleMouseOut(e) {
            this.handleMouseOverOut(e, false);
        }
    }, {
        key: 'handleMouseOverOut',
        value: function handleMouseOverOut(e, isShow) {
            var target = e.currentTarget;
            var related = e.relatedTarget || e.nativeEvent.toElement;
            if (!related || related !== target && !contains(target, related)) {
                if (isShow) {
                    this.handleDelayedShow();
                } else {
                    this.handleDelayedHide();
                }
            }
        }
    }, {
        key: 'handleDelayedShow',
        value: function handleDelayedShow() {
            var _this3 = this;

            if (this._hoverHideDelay) {
                clearTimeout(this._hoverHideDelay);
                this._hoverHideDelay = null;
                return;
            }
            if (this.state.isOverlayShown || this._hoverShowDelay) {
                return;
            }
            var delay = 100;
            this._hoverShowDelay = setTimeout(function () {
                _this3._hoverShowDelay = null;
                _this3.show();
            }, delay);
        }
    }, {
        key: 'handleDelayedHide',
        value: function handleDelayedHide() {
            var _this4 = this;

            if (this._hoverShowDelay) {
                clearTimeout(this._hoverShowDelay);
                this._hoverShowDelay = null;
                return;
            }
            if (!this.state.isOverlayShown || this._hoverHideDelay) {
                return;
            }
            var delay = 100;
            this._hoverHideDelay = setTimeout(function () {
                _this4._hoverHideDelay = null;
                _this4.hide();
            }, delay);
        }
    }, {
        key: 'domHandle',
        value: function domHandle() {
            var _this5 = this;

            if (this.state.isOverlayShown) {
                (function () {
                    setContainerPosition(_this5.props.align, _this5.props.toolTips, _this5._rootControl, _this5._container);
                    var refs = _this5.refs;
                    if (refs.overlay) {
                        refs.overlay.style.opacity = 1;
                    }
                    if (refs.title) {
                        refs.title.style.opacity = 1;
                        var duration = 150;
                        setTimeout(function () {
                            refs.overlay.style.borderTopColor = '#AbABAB';
                        }, duration);
                    }
                })();
            } else {
                this._container = this._rootControl;
            }
        }
    }]);

    return Popover;
}(React.Component);

exports.default = Popover;

Popover.propTypes = {
    additionalCircleClassName: React.PropTypes.string,
    additionalContentClassName: React.PropTypes.string,
    align: React.PropTypes.oneOf(['top-right', 'top-left', 'right', 'left', 'bottom-right', 'bottom-left', 'right-top', 'left-top', 'right-bottom', 'left-bottom']),
    children: React.PropTypes.node.isRequired,
    className: React.PropTypes.string,
    disable: React.PropTypes.bool,
    height: React.PropTypes.number,
    overlay: React.PropTypes.node.isRequired,
    toolTips: React.PropTypes.bool,
    trigger: React.PropTypes.oneOf(['click', 'hover']),
    width: React.PropTypes.number
};
Popover.registry = [];
Popover.defaultProps = {
    align: 'top-right',
    disable: false,
    toolTips: true
};

},{"../Label/Index":135,"./EventListener":175,"./style.less":178,"lodash":"lodash","mdc-classnames":"mdc-classnames","react":"react","react-dom":"react-dom"}],178:[function(require,module,exports){
module.exports = {"Title-Page":"neptune_Title-Page_1suds","Title-Page-Light":"neptune_Title-Page-Light_1suds","Title-Section-Primary":"neptune_Title-Section-Primary_1suds","Title-Section-Primary-Light":"neptune_Title-Section-Primary-Light_1suds","TITLE-SUBTITLE":"neptune_TITLE-SUBTITLE_1suds","Title-Section-Secondary":"neptune_Title-Section-Secondary_1suds","TITLE-MODULE":"neptune_TITLE-MODULE_1suds","LABEL-STANDARD":"neptune_LABEL-STANDARD_1suds","LABEL-STANDARD-SEMIBOLD":"neptune_LABEL-STANDARD-SEMIBOLD_1suds","LABEL-ATTRIBUTION":"neptune_LABEL-ATTRIBUTION_1suds","LABEL-ATTRIBUTION-MA":"neptune_LABEL-ATTRIBUTION-MA_1suds","LABEL-ATTRIBUTION-MIS":"neptune_LABEL-ATTRIBUTION-MIS_1suds","Label-Footnote":"neptune_Label-Footnote_1suds","Rating":"neptune_Rating_1suds","Header-Primary":"neptune_Header-Primary_1suds","Body-Primary":"neptune_Body-Primary_1suds","Header-Secondary":"neptune_Header-Secondary_1suds","Header-Secondary-Bold":"neptune_Header-Secondary-Bold_1suds","Body-Secondary":"neptune_Body-Secondary_1suds","TABLE-SECTION":"neptune_TABLE-SECTION_1suds","Header-Tertiary":"neptune_Header-Tertiary_1suds","Header-Tertiary-Bold":"neptune_Header-Tertiary-Bold_1suds","Body-Tertiary":"neptune_Body-Tertiary_1suds","Body-Tertiary-Med":"neptune_Body-Tertiary-Med_1suds","Body-Text-Prompt":"neptune_Body-Text-Prompt_1suds","Link-DkBlue":"neptune_Link-DkBlue_1suds","LINK-GOLD":"neptune_LINK-GOLD_1suds","LINK-GREY":"neptune_LINK-GREY_1suds","LABEL-SIDENAV-TITLE":"neptune_LABEL-SIDENAV-TITLE_1suds","MIS-BLUE":"neptune_MIS-BLUE_1suds","MA-BLUE":"neptune_MA-BLUE_1suds","MOODYS-BLUE":"neptune_MOODYS-BLUE_1suds","HIGHLIGHT-BLUE":"neptune_HIGHLIGHT-BLUE_1suds","GOLD":"neptune_GOLD_1suds","GREY-1":"neptune_GREY-1_1suds","GREY-2":"neptune_GREY-2_1suds","GREY-3":"neptune_GREY-3_1suds","GREY-4":"neptune_GREY-4_1suds","BLACK":"neptune_BLACK_1suds","RED":"neptune_RED_1suds","GREEN":"neptune_GREEN_1suds","icon_down_arrow":"neptune_icon_down_arrow_1suds","icon_up_arrow":"neptune_icon_up_arrow_1suds","icon_warning_icon":"neptune_icon_warning_icon_1suds","icon_select_arrows":"neptune_icon_select_arrows_1suds","icon_triangle_down":"neptune_icon_triangle_down_1suds","icon_triangle_up":"neptune_icon_triangle_up_1suds","icon_x_icon":"neptune_icon_x_icon_1suds","icon_right_arrow":"neptune_icon_right_arrow_1suds","MIS-BLUE-FONT":"neptune_MIS-BLUE-FONT_1suds","MIS-BLUE-BG":"neptune_MIS-BLUE-BG_1suds","MIS-BLUE-BORDER":"neptune_MIS-BLUE-BORDER_1suds","MA-BLUE-FONT":"neptune_MA-BLUE-FONT_1suds","MA-BLUE-BG":"neptune_MA-BLUE-BG_1suds","MA-BLUE-BORDER":"neptune_MA-BLUE-BORDER_1suds","MOODYS-BLUE-FONT":"neptune_MOODYS-BLUE-FONT_1suds","MOODYS-BLUE-BG":"neptune_MOODYS-BLUE-BG_1suds","MOODYS-BLUE-BORDER":"neptune_MOODYS-BLUE-BORDER_1suds","HIGHLIGHT-BLUE-FONT":"neptune_HIGHLIGHT-BLUE-FONT_1suds","HIGHLIGHT-BLUE-BG":"neptune_HIGHLIGHT-BLUE-BG_1suds","HIGHLIGHT-BLUE-BORDER":"neptune_HIGHLIGHT-BLUE-BORDER_1suds","GOLD-FONT":"neptune_GOLD-FONT_1suds","GOLD-BG":"neptune_GOLD-BG_1suds","GOLD-BORDER":"neptune_GOLD-BORDER_1suds","GREY-1-FONT":"neptune_GREY-1-FONT_1suds","GREY-1-BG":"neptune_GREY-1-BG_1suds","GREY-1-BORDER":"neptune_GREY-1-BORDER_1suds","GREY-2-FONT":"neptune_GREY-2-FONT_1suds","GREY-2-BG":"neptune_GREY-2-BG_1suds","GREY-2-BORDER":"neptune_GREY-2-BORDER_1suds","GREY-3-FONT":"neptune_GREY-3-FONT_1suds","GREY-3-BG":"neptune_GREY-3-BG_1suds","GREY-3-BORDER":"neptune_GREY-3-BORDER_1suds","GREY-4-FONT":"neptune_GREY-4-FONT_1suds","GREY-4-BG":"neptune_GREY-4-BG_1suds","GREY-4-BORDER":"neptune_GREY-4-BORDER_1suds","BLACK-FONT":"neptune_BLACK-FONT_1suds","BLACK-BG":"neptune_BLACK-BG_1suds","BLACK-BORDER":"neptune_BLACK-BORDER_1suds","RED-FONT":"neptune_RED-FONT_1suds","RED-BG":"neptune_RED-BG_1suds","RED-BORDER":"neptune_RED-BORDER_1suds","GREEN-FONT":"neptune_GREEN-FONT_1suds","GREEN-BG":"neptune_GREEN-BG_1suds","GREEN-BORDER":"neptune_GREEN-BORDER_1suds","component":"neptune_component_1suds","additional_content":"neptune_additional_content_1suds","additional_component":"neptune_additional_component_1suds","additional_circle":"neptune_additional_circle_1suds","title":"neptune_title_1suds","toolTipsTitle":"neptune_toolTipsTitle_1suds","container":"neptune_container_1suds","content":"neptune_content_1suds","tootips":"neptune_tootips_1suds","circle":"neptune_circle_1suds","angle_top":"neptune_angle_top_1suds","angle_bottom":"neptune_angle_bottom_1suds","angle_left":"neptune_angle_left_1suds","angle_right":"neptune_angle_right_1suds","pos_top_left":"neptune_pos_top_left_1suds","icon":"neptune_icon_1suds","pos_top_right":"neptune_pos_top_right_1suds","pos_bottom_left":"neptune_pos_bottom_left_1suds","pos_bottom_right":"neptune_pos_bottom_right_1suds","pos_left":"neptune_pos_left_1suds","pos_right":"neptune_pos_right_1suds","pos_left_bottom":"neptune_pos_left_bottom_1suds","pos_right_bottom":"neptune_pos_right_bottom_1suds","pos_left_top":"neptune_pos_left_top_1suds","pos_right_top":"neptune_pos_right_top_1suds"}
},{}],179:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var styles = require('./style.less');

var RadioGroup = function (_React$Component) {
    _inherits(RadioGroup, _React$Component);

    function RadioGroup() {
        _classCallCheck(this, RadioGroup);

        return _possibleConstructorReturn(this, (RadioGroup.__proto__ || Object.getPrototypeOf(RadioGroup)).apply(this, arguments));
    }

    _createClass(RadioGroup, [{
        key: 'render',
        value: function render() {
            var children = React.Children.map(this.props.children, function (el) {
                return React.cloneElement(el, { className: styles.radioGroupItem }, el.props.children);
            });
            return React.createElement(
                'div',
                { className: styles.radioGroup, role: 'group' },
                children
            );
        }
    }]);

    return RadioGroup;
}(React.Component);

exports.default = RadioGroup;

},{"./style.less":180,"react":"react"}],180:[function(require,module,exports){
arguments[4][3][0].apply(exports,arguments)
},{"dup":3}],181:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _mdcClassnames = require('mdc-classnames');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var styles = require('./style.less');
var cx = _mdcClassnames.setCssModule.bind(styles);

var Radio = function (_React$Component) {
    _inherits(Radio, _React$Component);

    function Radio(props) {
        _classCallCheck(this, Radio);

        return _possibleConstructorReturn(this, (Radio.__proto__ || Object.getPrototypeOf(Radio)).call(this, props));
    }

    _createClass(Radio, [{
        key: 'render',
        value: function render() {
            var elemProps = {};
            if (this.props.disabled) {
                elemProps.disabled = true;
            }
            if (this.props.name) {
                elemProps.name = this.props.name;
            }
            if (this.props.checked) {
                elemProps.defaultChecked = true;
            }
            var classes = cx(this.props.className, {
                disabled: this.props.disabled,
                radio: true,
                radioText: true
            });
            return React.createElement(
                'div',
                null,
                React.createElement('input', _extends({ type: 'radio', className: classes }, elemProps, { onChange: this.props.onChange })),
                React.createElement(
                    'span',
                    { className: styles.content },
                    this.props.children
                )
            );
        }
    }]);

    return Radio;
}(React.Component);

exports.default = Radio;

},{"./style.less":182,"mdc-classnames":"mdc-classnames","react":"react"}],182:[function(require,module,exports){
module.exports = {"radio":"neptune_radio_vb5us","content":"neptune_content_vb5us"}
},{}],183:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require("react");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Column = function (_Component) {
    _inherits(Column, _Component);

    function Column() {
        _classCallCheck(this, Column);

        return _possibleConstructorReturn(this, (Column.__proto__ || Object.getPrototypeOf(Column)).apply(this, arguments));
    }

    return Column;
}(_react.Component);

exports.default = Column;


Column.propTypes = {
    className: _react.PropTypes.string,
    colSpan: _react.PropTypes.number,
    title: _react.PropTypes.node,
    dataIndex: _react.PropTypes.string,
    width: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
    fixed: _react.PropTypes.oneOf([true, "left", "right"]),
    render: _react.PropTypes.func,
    onCellClick: _react.PropTypes.func
};

},{"react":"react"}],184:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require("react");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ColumnGroup = function (_Component) {
    _inherits(ColumnGroup, _Component);

    function ColumnGroup() {
        _classCallCheck(this, ColumnGroup);

        return _possibleConstructorReturn(this, (ColumnGroup.__proto__ || Object.getPrototypeOf(ColumnGroup)).apply(this, arguments));
    }

    return ColumnGroup;
}(_react.Component);

exports.default = ColumnGroup;


ColumnGroup.propTypes = {
    title: _react.PropTypes.node
};

},{"react":"react"}],185:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Column = require("./Column");

var _Column2 = _interopRequireDefault(_Column);

var _ColumnGroup = require("./ColumnGroup");

var _ColumnGroup2 = _interopRequireDefault(_ColumnGroup);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ColumnManager = function () {
    function ColumnManager(columns, elements) {
        _classCallCheck(this, ColumnManager);

        this.columns = columns || this.normalize(elements);
        this._cached = {};
    }

    _createClass(ColumnManager, [{
        key: "isAnyColumnsFixed",
        value: function isAnyColumnsFixed() {
            var _this = this;

            return this._cache("isAnyColumnsFixed", function () {
                return _this.columns.some(function (column) {
                    return !!column.fixed;
                });
            });
        }
    }, {
        key: "isAnyColumnsLeftFixed",
        value: function isAnyColumnsLeftFixed() {
            var _this2 = this;

            return this._cache("isAnyColumnsLeftFixed", function () {
                return _this2.columns.some(function (column) {
                    return column.fixed === "left" || column.fixed === true;
                });
            });
        }
    }, {
        key: "isAnyColumnsRightFixed",
        value: function isAnyColumnsRightFixed() {
            var _this3 = this;

            return this._cache("isAnyColumnsRightFixed", function () {
                return _this3.columns.some(function (column) {
                    return column.fixed === "right";
                });
            });
        }
    }, {
        key: "leftColumns",
        value: function leftColumns() {
            var _this4 = this;

            return this._cache("leftColumns", function () {
                return _this4.groupedColumns().filter(function (column) {
                    return column.fixed === "left" || column.fixed === true;
                });
            });
        }
    }, {
        key: "rightColumns",
        value: function rightColumns() {
            var _this5 = this;

            return this._cache("rightColumns", function () {
                return _this5.groupedColumns().filter(function (column) {
                    return column.fixed === "right";
                });
            });
        }
    }, {
        key: "leafColumns",
        value: function leafColumns() {
            var _this6 = this;

            return this._cache("leafColumns", function () {
                return _this6._leafColumns(_this6.groupedWithoutFixedColumns());
            });
        }
    }, {
        key: "leftLeafColumns",
        value: function leftLeafColumns() {
            var _this7 = this;

            return this._cache("leftLeafColumns", function () {
                return _this7._leafColumns(_this7.leftColumns());
            });
        }
    }, {
        key: "rightLeafColumns",
        value: function rightLeafColumns() {
            var _this8 = this;

            return this._cache("rightLeafColumns", function () {
                return _this8._leafColumns(_this8.rightColumns());
            });
        }

        // add appropriate rowspan and colspan to column

    }, {
        key: "groupedColumns",
        value: function groupedColumns() {
            var _this9 = this;

            return this._cache("groupedColumns", function () {
                var _groupColumns = function _groupColumns(columns) {
                    var currentRow = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
                    var parentColumn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
                    var rows = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];

                    // track how many rows we got
                    rows[currentRow] = rows[currentRow] || [];
                    var grouped = [];
                    var setRowSpan = function setRowSpan(column) {
                        var rowSpan = rows.length - currentRow;
                        if (column && !column.children && // parent columns are supposed to be one row
                        rowSpan > 1 && (!column.rowSpan || column.rowSpan < rowSpan)) {
                            column.rowSpan = rowSpan;
                        }
                    };
                    columns.forEach(function (column, index) {
                        var newColumn = Object.assign({}, column);
                        rows[currentRow].push(newColumn);
                        parentColumn.colSpan = parentColumn.colSpan || 0;
                        if (newColumn.children && newColumn.children.length > 0) {
                            newColumn.children = _groupColumns(newColumn.children, currentRow + 1, newColumn, rows);
                            parentColumn.colSpan += newColumn.colSpan;
                        } else {
                            parentColumn.colSpan++;
                        }
                        // update rowspan to all same row columns
                        for (var i = 0; i < rows[currentRow].length - 1; ++i) {
                            setRowSpan(rows[currentRow][i]);
                        }
                        // last column, update rowspan immediately
                        if (index + 1 === columns.length) {
                            setRowSpan(newColumn);
                        }
                        grouped.push(newColumn);
                    });
                    return grouped;
                };
                return _groupColumns(_this9.columns);
            });
        }
    }, {
        key: "groupedWithoutFixedColumns",
        value: function groupedWithoutFixedColumns() {
            var _this10 = this;

            return this._cache("groupedWithoutFixedColumns", function () {
                return _this10._groupedWithoutFixedColumns();
            });
        }
    }, {
        key: "_groupedWithoutFixedColumns",
        value: function _groupedWithoutFixedColumns() {
            var leftColumns = this.leftColumns();
            var rightColumns = this.rightColumns();
            var groupedColumns = this.groupedColumns();

            var contains = function contains(columns, key) {
                for (var i = 0, len = columns.length; i < len; i++) {
                    var col = columns[i];
                    if (col.key === key) {
                        return true;
                    }
                }
                return false;
            };

            if (leftColumns && leftColumns.length > 0) {
                groupedColumns = groupedColumns.filter(function (column) {
                    return !contains(leftColumns, column.key);
                });
            }

            if (rightColumns && rightColumns.length > 0) {
                groupedColumns = groupedColumns.filter(function (column) {
                    return !contains(rightColumns, column.key);
                });
            }

            return groupedColumns;
        }
    }, {
        key: "normalize",
        value: function normalize(elements) {
            var _this11 = this;

            var columns = [];
            elements.forEach(function (element) {
                if (!_this11.isColumnElement(element)) {
                    return;
                }
                var column = Object.assign({}, element.props);
                if (element.key) {
                    column.key = element.key;
                }
                if (element.type === _ColumnGroup2.default) {
                    column.children = _this11.normalize(column.children);
                }
                columns.push(column);
            });
            return columns;
        }
    }, {
        key: "isColumnElement",
        value: function isColumnElement(element) {
            return element && (element.type === _Column2.default || element.type === _ColumnGroup2.default);
        }
    }, {
        key: "reset",
        value: function reset(columns, elements) {
            this.columns = columns || this.normalize(elements);
            this._cached = {};
        }
    }, {
        key: "_cache",
        value: function _cache(name, fn) {
            if (name in this._cached) {
                return this._cached[name];
            }
            this._cached[name] = fn();
            return this._cached[name];
        }
    }, {
        key: "_leafColumns",
        value: function _leafColumns(columns) {
            var _this12 = this;

            var leafColumns = [];
            columns.forEach(function (column) {
                if (!column.children) {
                    leafColumns.push(column);
                } else {
                    leafColumns.push.apply(leafColumns, _toConsumableArray(_this12._leafColumns(column.children)));
                }
            });
            return leafColumns;
        }
    }]);

    return ColumnManager;
}();

exports.default = ColumnManager;

},{"./Column":183,"./ColumnGroup":184}],186:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _shallowequal = require("./toRemove/shallowequal");

var _shallowequal2 = _interopRequireDefault(_shallowequal);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ExpandIcon = function (_React$Component) {
    _inherits(ExpandIcon, _React$Component);

    function ExpandIcon(props) {
        _classCallCheck(this, ExpandIcon);

        var _this = _possibleConstructorReturn(this, (ExpandIcon.__proto__ || Object.getPrototypeOf(ExpandIcon)).call(this, props));

        _this.handleOnClick = _this.handleOnClick.bind(_this);
        return _this;
    }

    _createClass(ExpandIcon, [{
        key: "shouldComponentUpdate",
        value: function shouldComponentUpdate(nextProps) {
            return !(0, _shallowequal2.default)(nextProps, this.props);
        }
    }, {
        key: "handleOnClick",
        value: function handleOnClick(e) {
            var _props = this.props;
            var onExpand = _props.onExpand;
            var expanded = _props.expanded;
            var record = _props.record;

            onExpand(!expanded, record, e);
        }
    }, {
        key: "render",
        value: function render() {
            var _props2 = this.props;
            var expandable = _props2.expandable;
            var prefixCls = _props2.prefixCls;
            var needIndentSpaced = _props2.needIndentSpaced;
            var expanded = _props2.expanded;

            if (expandable) {
                var expandClassName = expanded ? "expanded" : "collapsed";
                return _react2.default.createElement("span", {
                    className: prefixCls + "-expand-icon " + prefixCls + "-" + expandClassName,
                    onClick: this.handleOnClick
                });
            } else if (needIndentSpaced) {
                return _react2.default.createElement("span", { className: prefixCls + "-expand-icon " + prefixCls + "-spaced" });
            }
            return null;
        }
    }]);

    return ExpandIcon;
}(_react2.default.Component);

ExpandIcon.propTypes = {
    record: _react.PropTypes.object,
    prefixCls: _react.PropTypes.string,
    expandable: _react.PropTypes.any,
    expanded: _react.PropTypes.bool,
    needIndentSpaced: _react.PropTypes.bool,
    onExpand: _react.PropTypes.func
};

exports.default = ExpandIcon;

},{"./toRemove/shallowequal":199,"react":"react"}],187:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _TableRow = require("./TableRow");

var _TableRow2 = _interopRequireDefault(_TableRow);

var _TableHeader = require("./TableHeader");

var _TableHeader2 = _interopRequireDefault(_TableHeader);

var _utils = require("./utils");

var _ColumnManager = require("./ColumnManager");

var _ColumnManager2 = _interopRequireDefault(_ColumnManager);

var _createStore = require("./createStore");

var _createStore2 = _interopRequireDefault(_createStore);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
// import * as ReactDOM from "react-dom";


// import { debounce } from "./utils";

var FixTableHeader = function (_Component) {
    _inherits(FixTableHeader, _Component);

    function FixTableHeader(props) {
        _classCallCheck(this, FixTableHeader);

        var _this = _possibleConstructorReturn(this, (FixTableHeader.__proto__ || Object.getPrototypeOf(FixTableHeader)).call(this, props));

        _this.columnManager = new _ColumnManager2.default(props.columns, props.children);
        _this.bindContext();
        _this.store = (0, _createStore2.default)({ currentHoverKey: null });
        return _this;
    }

    _createClass(FixTableHeader, [{
        key: "bindContext",
        value: function bindContext() {
            this.handleTableMouseDown = this.handleTableMouseDown.bind(this);
            this.handleFixTableScroll = this.handleFixTableScroll.bind(this);
            this.handleTableScroll = this.handleTableScroll.bind(this);
        }
    }, {
        key: "componentDidMount",
        value: function componentDidMount() {
            this.resetScrollY();
        }
    }, {
        key: "componentWillReceiveProps",
        value: function componentWillReceiveProps(nextProps) {
            if (nextProps.columns && nextProps.columns !== this.props.columns) {
                this.columnManager.reset(nextProps.columns);
            } else if (nextProps.children !== this.props.children) {
                this.columnManager.reset(null, nextProps.children);
            }
        }
    }, {
        key: "getRowKey",
        value: function getRowKey(record, index) {
            var rowKey = this.props.rowKey;
            if (typeof rowKey === "function") {
                return rowKey(record, index);
            }
            return typeof record[rowKey] !== "undefined" ? record[rowKey] : index;
        }
    }, {
        key: "getExpandedRows",
        value: function getExpandedRows() {
            return this.props.expandedRowKeys || this.props.defaultState.expandedRowKeys;
        }
    }, {
        key: "getHeader",
        value: function getHeader(columns, fixed) {
            var _props = this.props;
            var showHeader = _props.showHeader;
            var expandIconAsCell = _props.expandIconAsCell;
            var prefixCls = _props.prefixCls;
            var sortColumns = _props.sortColumns;
            var sortOrder = _props.sortOrder;

            var rows = this.getHeaderRows(columns);
            var isExpandCellHeader = this.columnManager.isAnyColumnsFixed() ? expandIconAsCell && fixed === "left" : expandIconAsCell;

            if (isExpandCellHeader) {
                rows[0].unshift({
                    key: "rc-table-expandIconAsCell",
                    className: prefixCls + "-expand-icon-th",
                    title: "",
                    rowSpan: rows.length
                });
            }

            var trStyle = fixed ? this.getHeaderRowStyle(columns, rows) : null;

            return showHeader ? _react2.default.createElement(_TableHeader2.default, {
                prefixCls: prefixCls,
                rows: rows,
                rowStyle: trStyle,
                sortColumns: sortColumns,
                sortOrder: sortOrder
            }) : null;
        }
    }, {
        key: "getHeaderRows",
        value: function getHeaderRows(columns) {
            var _this2 = this;

            var currentRow = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
            var rows = arguments[2];

            rows = rows || [];
            rows[currentRow] = rows[currentRow] || [];

            columns.forEach(function (column) {
                if (column.rowSpan && rows.length < column.rowSpan) {
                    while (rows.length < column.rowSpan) {
                        rows.push([]);
                    }
                }
                var cell = {
                    key: column.key,
                    className: column.className || "",
                    children: column.title
                };
                if (column.children) {
                    _this2.getHeaderRows(column.children, currentRow + 1, rows);
                }
                if ("colSpan" in column) {
                    cell.colSpan = column.colSpan;
                }
                if ("rowSpan" in column) {
                    cell.rowSpan = column.rowSpan;
                }
                if (cell.colSpan !== 0) {
                    rows[currentRow].push(cell);
                }
            });
            return rows.filter(function (row) {
                return row.length > 0;
            });
        }
    }, {
        key: "getExpandedRow",
        value: function getExpandedRow(key, content, visible, className, fixed) {
            var _props2 = this.props;
            var prefixCls = _props2.prefixCls;
            var expandIconAsCell = _props2.expandIconAsCell;

            var colCount = void 0;
            if (fixed === "left") {
                colCount = this.columnManager.leftLeafColumns().length;
            } else if (fixed === "right") {
                colCount = this.columnManager.rightLeafColumns().length;
            } else {
                colCount = this.columnManager.leafColumns().length;
            }
            var columns = [{
                key: "extra-row",
                render: function render() {
                    return {
                        props: {
                            colSpan: colCount
                        },
                        children: fixed !== "right" ? content : "&nbsp;"
                    };
                }
            }];
            if (expandIconAsCell && fixed !== "right") {
                columns.unshift({
                    key: "expand-icon-placeholder",
                    render: function render() {
                        return null;
                    }
                });
            }
            return _react2.default.createElement(_TableRow2.default, {
                columns: columns,
                visible: visible,
                className: className,
                key: key + "-extra-row",
                prefixCls: prefixCls + "-expanded-row",
                indent: 1,
                expandable: false,
                store: this.store
            });
        }
    }, {
        key: "createRow",
        value: function createRow(options) {
            var record = options.record;
            var props = options.props;
            var index = options.index;
            var indent = options.indent;
            var fixed = options.fixed;
            var needIndentSpaced = options.needIndentSpaced;
            var isRowExpanded = options.isRowExpanded;
            var expandIconAsCell = options.expandIconAsCell;
            var visible = options.visible;
            var expandIconColumnIndex = options.expandIconColumnIndex;
            var key = options.key;
            var childrenColumn = options.childrenColumn;
            var childrenColumnName = props.childrenColumnName;
            var expandedRowRender = props.expandedRowRender;
            var expandRowByClick = props.expandRowByClick;
            var rowClassName = props.rowClassName;
            var rowRef = props.rowRef;
            var onRowClick = props.onRowClick;
            var onRowDoubleClick = props.onRowDoubleClick;
            var fixedColumnsBodyRowsHeight = this.props.defaultState.fixedColumnsBodyRowsHeight;

            var className = rowClassName(record, index, indent);

            var height = fixed && fixedColumnsBodyRowsHeight[index] ? fixedColumnsBodyRowsHeight[index] : null;

            var leafColumns = this.columnManager.leafColumns();
            if (fixed === "left") {
                leafColumns = this.columnManager.leftLeafColumns();
            } else if (fixed === "right") {
                leafColumns = this.columnManager.rightLeafColumns();
            }

            return _react2.default.createElement(_TableRow2.default, {
                indent: indent,
                indentSize: props.indentSize,
                needIndentSpaced: needIndentSpaced,
                className: className,
                record: record,
                expandIconAsCell: expandIconAsCell,
                index: index,
                visible: visible,
                expandRowByClick: expandRowByClick,
                expandable: childrenColumn || expandedRowRender,
                expanded: isRowExpanded,
                prefixCls: props.prefixCls + "-row",
                childrenColumnName: childrenColumnName,
                columns: leafColumns,
                expandIconColumnIndex: expandIconColumnIndex,
                onRowClick: onRowClick,
                onRowDoubleClick: onRowDoubleClick,
                height: height,
                key: key,
                hoverKey: key,
                ref: rowRef(record, index, indent),
                store: this.store
            });
        }
    }, {
        key: "getExpandedRelatedParam",
        value: function getExpandedRelatedParam(options) {
            var childrenColumnName = options.childrenColumnName;
            var data = options.data;
            var fixed = options.fixed;
            var expandIconAsCell = options.expandIconAsCell;
            var expandIconColumnIndex = options.expandIconColumnIndex;

            var needIndentSpaced = data.some(function (record) {
                return record[childrenColumnName];
            });
            var isExpandIconAsCell = fixed === "left" ? expandIconAsCell : false;
            var expandIconAsCellAdjusted = this.columnManager.isAnyColumnsFixed() ? isExpandIconAsCell : expandIconAsCell;
            var nonExpandIconColumnIndex = -1;
            var expandIconColumnIndexTemp = fixed === "left" ? expandIconColumnIndex : nonExpandIconColumnIndex;
            var expandIconColumnIndexAdjusted = this.columnManager.isAnyColumnsFixed() ? expandIconColumnIndexTemp : expandIconColumnIndex;

            return {
                needIndentSpaced: needIndentSpaced,
                expandIconAsCellAdjusted: expandIconAsCellAdjusted,
                expandIconColumnIndexAdjusted: expandIconColumnIndexAdjusted
            };
        }
    }, {
        key: "concatExpandedAndChildRows",
        value: function concatExpandedAndChildRows(params, rows) {
            var expandedRowRender = params.expandedRowRender;
            var isRowExpanded = params.isRowExpanded;
            var record = params.record;
            var fixed = params.fixed;
            var childrenColumn = params.childrenColumn;
            var columns = params.columns;
            var index = params.index;
            var indent = params.indent;
            var visible = params.visible;
            var key = params.key;
            var expandedRowClassName = params.expandedRowClassName;

            var expandedRowContent = void 0;
            if (expandedRowRender && isRowExpanded) {
                expandedRowContent = expandedRowRender(record, index, indent);
            }
            var subVisible = visible && isRowExpanded;

            if (expandedRowContent && isRowExpanded) {
                rows.push(this.getExpandedRow(key, expandedRowContent, subVisible, expandedRowClassName(record, index, indent), fixed));
            }
            if (childrenColumn) {
                rows = rows.concat(this.getRowsByData(childrenColumn, subVisible, indent + 1, columns, fixed));
            }
        }

        /* eslint "prefer-const": 0 */

    }, {
        key: "getRowsByData",
        value: function getRowsByData(data, visible, indent, columns, fixed) {
            var props = this.props;
            var childrenColumnName = props.childrenColumnName;
            var expandedRowRender = props.expandedRowRender;
            var expandedRowClassName = props.expandedRowClassName;
            var expandIconAsCell = props.expandIconAsCell;
            var expandIconColumnIndex = props.expandIconColumnIndex;

            var rows = [];

            var _getExpandedRelatedPa = this.getExpandedRelatedParam({
                childrenColumnName: childrenColumnName,
                data: data,
                fixed: fixed,
                expandIconAsCell: expandIconAsCell,
                expandIconColumnIndex: expandIconColumnIndex
            });

            var needIndentSpaced = _getExpandedRelatedPa.needIndentSpaced;
            var expandIconAsCellAdjusted = _getExpandedRelatedPa.expandIconAsCellAdjusted;
            var expandIconColumnIndexAdjusted = _getExpandedRelatedPa.expandIconColumnIndexAdjusted;


            for (var index = 0; index < data.length; index++) {
                var record = data[index];
                var isRowExpanded = this.isRowExpanded(record);
                var key = this.getRowKey(record, index);
                var childrenColumn = record[childrenColumnName];
                var options = { record: record, props: props, index: index, indent: indent, fixed: fixed, needIndentSpaced: needIndentSpaced, isRowExpanded: isRowExpanded,
                    expandIconAsCellAdjusted: expandIconAsCellAdjusted, visible: visible, expandIconColumnIndexAdjusted: expandIconColumnIndexAdjusted, key: key, childrenColumn: childrenColumn };

                rows.push(this.createRow(options));

                this.concatExpandedAndChildRows({ expandedRowRender: expandedRowRender, isRowExpanded: isRowExpanded, record: record, fixed: fixed, childrenColumn: childrenColumn, columns: columns,
                    index: index, indent: indent, visible: visible, key: key, expandedRowClassName: expandedRowClassName }, rows);
            }

            return rows;
        }
    }, {
        key: "getRows",
        value: function getRows(columns, fixed) {
            return this.getRowsByData(this.props.defaultState.data, true, 0, columns, fixed);
        }
    }, {
        key: "getColGroup",
        value: function getColGroup(columns, fixed) {
            var cols = [];
            if (this.props.expandIconAsCell && fixed !== "right") {
                cols.push(_react2.default.createElement("col", {
                    className: this.props.prefixCls + "-expand-icon-col",
                    key: "rc-table-expand-icon-col"
                }));
            }
            var leafColumns = void 0;
            if (fixed === "left") {
                leafColumns = this.columnManager.leftLeafColumns();
            } else if (fixed === "right") {
                leafColumns = this.columnManager.rightLeafColumns();
            } else {
                leafColumns = this.columnManager.leafColumns();
            }
            cols = cols.concat(leafColumns.map(function (c) {
                return _react2.default.createElement("col", { key: c.key, style: { width: c.width, minWidth: c.width } });
            }));
            return _react2.default.createElement(
                "colgroup",
                null,
                cols
            );
        }
    }, {
        key: "getLeftFixedTable",
        value: function getLeftFixedTable() {
            return this.getTable({
                columns: this.columnManager.leftColumns(),
                fixed: "left",
                leftFixedTableWidth: this.props.defaultState.leftFixedTableWidth
            });
        }
    }, {
        key: "getRightFixedTable",
        value: function getRightFixedTable() {
            return this.getTable({
                columns: this.columnManager.rightColumns(),
                fixed: "right"
            });
        }
    }, {
        key: "getTable",
        value: function getTable() {
            var _this3 = this;

            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
            var columns = options.columns;
            var fixed = options.fixed;
            var leftFixedTableWidth = options.leftFixedTableWidth;
            var originalTableWidth = options.originalTableWidth;
            var _props3 = this.props;
            var prefixCls = _props3.prefixCls;
            var _props3$scroll = _props3.scroll;
            var scroll = _props3$scroll === undefined ? {} : _props3$scroll;
            var getBodyWrapper = _props3.getBodyWrapper;
            var useFixedHeader = this.props.useFixedHeader;

            var bodyStyle = Object.assign({}, this.props.bodyStyle);
            var headStyle = {};

            var tableClassName = "";

            var getBodyStyle = function getBodyStyle() {
                if (scroll.x || fixed) {
                    tableClassName = prefixCls + "-fixed";
                    bodyStyle.overflowX = bodyStyle.overflowX || "auto";
                }

                var bodyStyleOfScrollY = function bodyStyleOfScrollY() {
                    bodyStyle.overflowY = bodyStyle.overflowY || "scroll";
                    bodyStyle.overflowX = "hidden";
                    useFixedHeader = true;

                    // Add negative margin bottom for scroll bar overflow bug
                    var scrollbarWidth = (0, _utils.measureScrollbar)();
                    if (scrollbarWidth > 0) {
                        (fixed ? bodyStyle : headStyle).marginBottom = "0px"; //`-${scrollbarWidth}px`;
                        (fixed ? bodyStyle : headStyle).paddingBottom = "0px";
                        if (!fixed) {
                            headStyle.width = originalTableWidth;
                        }
                    }

                    // maxHeight will make fixed-Table scrolling not working
                    // so we only set maxHeight to body-Table here
                    if (fixed) {
                        bodyStyle.height = bodyStyle.height || scroll.y;
                    } else {
                        bodyStyle.maxHeight = bodyStyle.maxHeight || scroll.y;
                        bodyStyle.width = originalTableWidth;
                    }
                };

                if (scroll.y) {
                    bodyStyleOfScrollY();
                }
            };

            getBodyStyle();

            var renderTable = function renderTable() {
                var hasHead = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
                var hasBody = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

                var tableStyle = {};
                if (!fixed && scroll.x) {
                    // not set width, then use content fixed width
                    if (scroll.x === true) {
                        tableStyle.tableLayout = "fixed";
                    } else {
                        tableStyle.width = scroll.x;
                    }
                }

                if (fixed && leftFixedTableWidth) {
                    tableStyle.width = leftFixedTableWidth;
                }

                var tableBody = hasBody ? getBodyWrapper(_react2.default.createElement(
                    "tbody",
                    { ref: "rcHideTable", className: prefixCls + "-tbody", style: { visibility: "hidden", display: "none", height: "1px", overflow: "hidden" } },
                    _this3.getRows(columns, fixed)
                )) : null;
                return _react2.default.createElement(
                    "table",
                    { ref: fixed && leftFixedTableWidth ? "leftFixedTable" : "",
                        className: tableClassName, style: tableStyle
                    },
                    _this3.getColGroup(columns, fixed),
                    hasHead ? _this3.getHeader(columns, fixed) : null,
                    tableBody
                );
            };

            var headTable = void 0;

            if (useFixedHeader) {
                headTable = _react2.default.createElement(
                    "div",
                    {
                        className: prefixCls + "-header",
                        ref: fixed ? null : "headTable",
                        style: headStyle
                    },
                    renderTable(true, false)
                );
            }

            var getBodyTable = function getBodyTable() {
                var BodyTable = _react2.default.createElement(
                    "div",
                    {
                        className: prefixCls + "-body",
                        style: bodyStyle,
                        ref: "bodyTable"
                    },
                    renderTable(!useFixedHeader)
                );

                if (fixed && columns.length) {
                    var refName = columns[0].fixed === "left" || columns[0].fixed === true ? "fixedColumnsBodyLeft" : "fixedColumnsBodyRight";
                    delete bodyStyle.overflowX;
                    delete bodyStyle.overflowY;
                    var style = Object.assign({}, bodyStyle);
                    BodyTable = _react2.default.createElement(
                        "div",
                        {
                            className: prefixCls + "-body-outer",
                            style: style
                        },
                        _react2.default.createElement(
                            "div",
                            {
                                className: prefixCls + "-body-inner",
                                ref: refName
                            },
                            renderTable(!useFixedHeader)
                        )
                    );
                }

                return BodyTable;
            };

            var bodyTable = getBodyTable();

            return _react2.default.createElement(
                "span",
                null,
                headTable,
                bodyTable
            );
        }
    }, {
        key: "getTitle",
        value: function getTitle() {
            var _props4 = this.props;
            var title = _props4.title;
            var prefixCls = _props4.prefixCls;

            return title ? _react2.default.createElement(
                "div",
                { className: prefixCls + "-title" },
                title(this.props.defaultState.data)
            ) : null;
        }
    }, {
        key: "getFooter",
        value: function getFooter() {
            var _props5 = this.props;
            var footer = _props5.footer;
            var prefixCls = _props5.prefixCls;

            return footer ? _react2.default.createElement(
                "div",
                { className: prefixCls + "-footer" },
                footer(this.props.defaultState.data)
            ) : null;
        }
    }, {
        key: "getEmptyText",
        value: function getEmptyText() {
            var _props6 = this.props;
            var emptyText = _props6.emptyText;
            var prefixCls = _props6.prefixCls;
            var data = _props6.data;

            return !data.length ? _react2.default.createElement(
                "div",
                { className: prefixCls + "-placeholder" },
                emptyText()
            ) : null;
        }
    }, {
        key: "getHeaderRowStyle",
        value: function getHeaderRowStyle(columns, rows) {
            var fixedColumnsHeadRowsHeight = this.props.defaultState.fixedColumnsHeadRowsHeight;

            var headerHeight = fixedColumnsHeadRowsHeight[0];
            if (headerHeight && columns) {
                if (headerHeight === "auto") {
                    return { height: "auto" };
                }
                return { height: headerHeight / rows.length };
            }
            return null;
        }
    }, {
        key: "resetScrollY",
        value: function resetScrollY() {
            if (this.refs.headTable) {
                this.refs.headTable.scrollLeft = 0;
            }
            if (this.refs.bodyTable) {
                this.refs.bodyTable.scrollLeft = 0;
            }
        }
    }, {
        key: "findExpandedRow",
        value: function findExpandedRow(record) {
            var _this4 = this;

            var rows = this.getExpandedRows().filter(function (i) {
                return i === _this4.getRowKey(record);
            });
            return rows[0];
        }
    }, {
        key: "isRowExpanded",
        value: function isRowExpanded(record) {
            return typeof this.findExpandedRow(record) !== "undefined";
        }
    }, {
        key: "getScrollPanelStyle",
        value: function getScrollPanelStyle() {
            return {
                width: this.props.defaultState.fixedColumnsScrollableTableWidth,
                left: this.props.defaultState.fixedColumnsScrollableTableLeftPosition
            };
        }
    }, {
        key: "handleTableMouseDown",
        value: function handleTableMouseDown(event) {
            this.props.onTableDown(event);
        }
    }, {
        key: "getClassName",
        value: function getClassName(props) {
            var className = props.prefixCls;

            if (props.className) {
                className += " " + props.className;
            }
            if (props.useFixedHeader || props.scroll && props.scroll.y) {
                className += " " + props.prefixCls + "-fixed-header";
            }
            className += " " + props.prefixCls + "-scroll-position-" + this.props.defaultState.scrollPosition;

            if (this.props.defaultState.moveBegin) {
                className += " drag";
            }

            return className;
        }
    }, {
        key: "handleFixTableScroll",
        value: function handleFixTableScroll(e) {
            this.props.onHeaderScroll(e, true);
        }
    }, {
        key: "handleTableScroll",
        value: function handleTableScroll(event) {
            this.props.onHeaderWheel(event);
        }
    }, {
        key: "render",
        value: function render() {
            var props = this.props;
            var prefixCls = props.prefixCls;
            var className = this.getClassName(props);
            var isTableScroll = this.columnManager.isAnyColumnsFixed() || props.scroll.x || props.scroll.y;
            var scrollPanelStyle = this.getScrollPanelStyle();
            return _react2.default.createElement(
                "div",
                { className: className, style: props.style, ref: "rcTable", onWheel: this.handleTableScroll },
                this.getTitle(),
                _react2.default.createElement(
                    "div",
                    { className: prefixCls + "-content" },
                    this.columnManager.isAnyColumnsLeftFixed() && _react2.default.createElement(
                        "div",
                        { ref: "fixLeft", className: prefixCls + "-fixed-left",
                            style: { width: this.props.defaultState.leftFixedTableContainerWidth }
                        },
                        this.getLeftFixedTable(),
                        props.enableColumnDraggable && _react2.default.createElement(
                            "div",
                            null,
                            _react2.default.createElement("div", { onMouseDown: this.handleTableMouseDown, className: "split",
                                style: { height: props.height }
                            }),
                            _react2.default.createElement("div", { onMouseDown: this.handleTableMouseDown, className: "split_area" })
                        )
                    ),
                    _react2.default.createElement(
                        "div",
                        { ref: "tableWapper", className: isTableScroll ? prefixCls + "-scroll" : "",
                            style: scrollPanelStyle, onScroll: this.handleFixTableScroll
                        },
                        this.getTable({
                            columns: this.columnManager.groupedWithoutFixedColumns(),
                            originalTableWidth: this.props.defaultState.originalTableWidth
                        }),
                        this.getEmptyText(),
                        this.getFooter()
                    ),
                    this.columnManager.isAnyColumnsRightFixed() && _react2.default.createElement(
                        "div",
                        { className: prefixCls + "-fixed-right" },
                        this.getRightFixedTable()
                    )
                )
            );
        }
    }]);

    return FixTableHeader;
}(_react.Component);

FixTableHeader.propTypes = {
    data: _react.PropTypes.array,
    expandIconAsCell: _react.PropTypes.bool,
    defaultExpandAllRows: _react.PropTypes.bool,
    expandedRowKeys: _react.PropTypes.array,
    defaultExpandedRowKeys: _react.PropTypes.array,
    useFixedHeader: _react.PropTypes.bool,
    columns: _react.PropTypes.array,
    prefixCls: _react.PropTypes.string,
    bodyStyle: _react.PropTypes.object,
    style: _react.PropTypes.object,
    rowKey: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.func]),
    rowClassName: _react.PropTypes.func,
    expandedRowClassName: _react.PropTypes.func,
    childrenColumnName: _react.PropTypes.string,
    onExpand: _react.PropTypes.func,
    onExpandedRowsChange: _react.PropTypes.func,
    indentSize: _react.PropTypes.number,
    onRowClick: _react.PropTypes.func,
    onRowDoubleClick: _react.PropTypes.func,
    expandIconColumnIndex: _react.PropTypes.number,
    showHeader: _react.PropTypes.bool,
    title: _react.PropTypes.func,
    footer: _react.PropTypes.func,
    emptyText: _react.PropTypes.func,
    scroll: _react.PropTypes.object,
    rowRef: _react.PropTypes.func,
    getBodyWrapper: _react.PropTypes.func,
    children: _react.PropTypes.node,
    sortColumns: _react.PropTypes.array,
    sortOrder: _react.PropTypes.func,
    onTableMove: _react.PropTypes.func,
    onTableUp: _react.PropTypes.func,
    onTableDown: _react.PropTypes.func,
    onHeaderScroll: _react.PropTypes.func,
    defaultState: _react.PropTypes.object,
    height: _react.PropTypes.number,
    onHeaderWheel: _react.PropTypes.func
};

FixTableHeader.defaultProps = {
    data: [],
    useFixedHeader: false,
    expandIconAsCell: false,
    defaultExpandAllRows: false,
    defaultExpandedRowKeys: [],
    rowKey: "key",
    rowClassName: function rowClassName() {
        return "";
    },
    expandedRowClassName: function expandedRowClassName() {
        return "";
    },
    onExpand: function onExpand() {},
    onExpandedRowsChange: function onExpandedRowsChange() {},
    onRowClick: function onRowClick() {},
    onRowDoubleClick: function onRowDoubleClick() {},

    prefixCls: "rc-table",
    bodyStyle: {},
    style: {},
    childrenColumnName: "children",
    indentSize: 15,
    expandIconColumnIndex: 0,
    showHeader: true,
    scroll: {},
    rowRef: function rowRef() {
        return null;
    },
    getBodyWrapper: function getBodyWrapper(body) {
        return body;
    },
    emptyText: function emptyText() {
        return "No Data";
    },
    enableColumnDraggable: false,
    sortColumns: []
};

exports.default = FixTableHeader;

},{"./ColumnManager":185,"./TableHeader":190,"./TableRow":191,"./createStore":192,"./utils":200,"react":"react"}],188:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _reactDom = require("react-dom");

var ReactDOM = _interopRequireWildcard(_reactDom);

var _TableRow = require("./TableRow");

var _TableRow2 = _interopRequireDefault(_TableRow);

var _TableHeader = require("./TableHeader");

var _TableHeader2 = _interopRequireDefault(_TableHeader);

var _utils = require("./utils");

var _shallowequal = require("./toRemove/shallowequal");

var _shallowequal2 = _interopRequireDefault(_shallowequal);

var _addEventListener = require("./toRemove/addEventListener");

var _addEventListener2 = _interopRequireDefault(_addEventListener);

var _ColumnManager = require("./ColumnManager");

var _ColumnManager2 = _interopRequireDefault(_ColumnManager);

var _createStore = require("./createStore");

var _createStore2 = _interopRequireDefault(_createStore);

var _FixedTableHeader = require("./FixedTableHeader");

var _FixedTableHeader2 = _interopRequireDefault(_FixedTableHeader);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Table = function (_Component) {
    _inherits(Table, _Component);

    function Table(props) {
        _classCallCheck(this, Table);

        var _this = _possibleConstructorReturn(this, (Table.__proto__ || Object.getPrototypeOf(Table)).call(this, props));

        _this.columnManager = new _ColumnManager2.default(props.columns, props.children);
        _this.bindContext();
        _this.store = (0, _createStore2.default)({ currentHoverKey: null });
        var expandedRowKeys = _this.getExpandedRowKeys(props);
        _this.tableHeaderHeight = -999;
        _this.tableHeaderWith = "100%";
        _this.tableHeaderScollLeft = 0;
        _this.moveBegin = false;
        _this.state = {
            expandedRowKeys: expandedRowKeys,
            fixedTop: false,
            data: props.data,
            currentHoverKey: null,
            scrollPosition: "left",
            fixedColumnsHeadRowsHeight: [],
            fixedColumnsBodyRowsHeight: [],
            fixedColumnsScrollableTableLeftPosition: 0,
            fixedColumnsScrollableTableWidth: "100%",
            hasSetFixedColumnsScrollableTableWidth: false,
            leftFixedTableWidth: undefined,
            originalTableWidth: undefined,
            originalLeftFixedTableWidth: undefined,
            leftFixedTableContainerWidth: undefined
        };
        return _this;
    }

    _createClass(Table, [{
        key: "getExpandedRowKeys",
        value: function getExpandedRowKeys(props) {
            var expandedRowKeys = [];
            var rows = [].concat(_toConsumableArray(props.data));
            if (props.defaultExpandAllRows) {
                for (var i = 0; i < rows.length; i++) {
                    var row = rows[i];
                    expandedRowKeys.push(this.getRowKey(row));
                    rows = rows.concat(row[props.childrenColumnName] || []);
                }
            } else {
                expandedRowKeys = props.expandedRowKeys || props.defaultExpandedRowKeys;
            }
            return expandedRowKeys;
        }
    }, {
        key: "bindContext",
        value: function bindContext() {
            this.handleRowHover = this.handleRowHover.bind(this);
            this.handleTableMouseDown = this.handleTableMouseDown.bind(this);
            this.handleTableMouseUp = this.handleTableMouseUp.bind(this);
            this.handleTableMouseMove = this.handleTableMouseMove.bind(this);
            this.syncFixedTableRowHeight = this.syncFixedTableRowHeight.bind(this);
            this.syncFixedTableHeader = this.syncFixedTableHeader.bind(this);
            this.handleBodyScroll = this.handleBodyScroll.bind(this);
            this.handleDetectScrollTarget = this.handleDetectScrollTarget.bind(this);
            this.handleFixTableScroll = this.handleFixTableScroll.bind(this);
            this.handleRowDestroy = this.handleRowDestroy.bind(this);
            this.handleExpanded = this.handleExpanded.bind(this);
            this.handleHeaderWheel = this.handleHeaderWheel.bind(this);
        }
    }, {
        key: "componentDidMount",
        value: function componentDidMount() {
            this.resetScrollY();
            this.tableHeaderHeight = this.refs.tableHeader ? ReactDOM.findDOMNode(this.refs.tableHeader).getBoundingClientRect().height : 0;
            this.tableHeaderWith = this.refs.rcTable ? ReactDOM.findDOMNode(this.refs.rcTable).getBoundingClientRect().width : "100%";
            this.tableHeaderScollLeft = 0;
            if (this.columnManager.isAnyColumnsFixed()) {
                this.syncFixedTableRowHeight();
                var resizeEventWait = 150;
                this.resizeEvent = (0, _addEventListener2.default)(window, "resize", (0, _utils.debounce)(this.syncFixedTableRowHeight, resizeEventWait));
            }

            var scrollEventWait = 10;
            var scrollObj = document.getElementById(this.props.wrapperScrollBarIdName) || document.getElementsByClassName("neptune_navContent_1ge5r")[0];
            this.scrollEvent = (0, _addEventListener2.default)(scrollObj, "scroll", (0, _utils.debounce)(this.syncFixedTableHeader, scrollEventWait));
        }
    }, {
        key: "componentWillReceiveProps",
        value: function componentWillReceiveProps(nextProps) {
            if ("data" in nextProps) {
                this.setState({
                    data: nextProps.data
                });
                if (!nextProps.data || nextProps.data.length === 0) {
                    this.resetScrollY();
                }
            }
            if ("expandedRowKeys" in nextProps) {
                this.setState({
                    expandedRowKeys: nextProps.expandedRowKeys
                });
            }
            if (nextProps.columns && nextProps.columns !== this.props.columns) {
                this.columnManager.reset(nextProps.columns);
            } else if (nextProps.children !== this.props.children) {
                this.columnManager.reset(null, nextProps.children);
            }
        }
    }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate() {
            this.syncFixedTableRowHeight();
        }
    }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
            if (this.resizeEvent) {
                this.resizeEvent.remove();
            }
            if (this.scrollEvent) {
                this.scrollEvent.remove();
            }
        }
    }, {
        key: "onExpandedRowsChange",
        value: function onExpandedRowsChange(expandedRowKeys) {
            if (!this.props.expandedRowKeys) {
                this.setState({ expandedRowKeys: expandedRowKeys });
            }
            this.props.onExpandedRowsChange(expandedRowKeys);
        }
    }, {
        key: "handleExpanded",
        value: function handleExpanded(expanded, record, e) {
            if (e) {
                e.preventDefault();
                e.stopPropagation();
            }
            var info = this.findExpandedRow(record);
            if (typeof info !== "undefined" && !expanded) {
                this.handleRowDestroy(record);
            } else if (!info && expanded) {
                var expandedRows = this.getExpandedRows().concat();
                expandedRows.push(this.getRowKey(record));
                this.onExpandedRowsChange(expandedRows);
            }
            this.props.onExpand(expanded, record);
        }
    }, {
        key: "handleRowDestroy",
        value: function handleRowDestroy(record) {
            var expandedRows = this.getExpandedRows().concat();
            var rowKey = this.getRowKey(record);
            var notExistIndex = -1;
            var index = -1;
            expandedRows.forEach(function (r, i) {
                if (r === rowKey) {
                    index = i;
                }
            });
            if (index !== notExistIndex) {
                expandedRows.splice(index, 1);
            }
            this.onExpandedRowsChange(expandedRows);
        }
    }, {
        key: "getRowKey",
        value: function getRowKey(record, index) {
            var rowKey = this.props.rowKey;
            if (typeof rowKey === "function") {
                return rowKey(record, index);
            }
            return typeof record[rowKey] !== "undefined" ? record[rowKey] : index;
        }
    }, {
        key: "getExpandedRows",
        value: function getExpandedRows() {
            return this.props.expandedRowKeys || this.state.expandedRowKeys;
        }
    }, {
        key: "getHeader",
        value: function getHeader(columns, fixed) {
            var _props = this.props;
            var showHeader = _props.showHeader;
            var expandIconAsCell = _props.expandIconAsCell;
            var prefixCls = _props.prefixCls;
            var sortColumns = _props.sortColumns;
            var sortOrder = _props.sortOrder;

            var rows = this.getHeaderRows(columns);
            var isExpandCellHeader = this.columnManager.isAnyColumnsFixed() ? expandIconAsCell && fixed === "left" : expandIconAsCell;

            if (isExpandCellHeader) {
                rows[0].unshift({
                    key: "rc-table-expandIconAsCell",
                    className: prefixCls + "-expand-icon-th",
                    title: "",
                    rowSpan: rows.length
                });
            }

            var trStyle = fixed ? this.getHeaderRowStyle(columns, rows) : null;
            var tableHeaderRef = fixed ? "tableHeader" + fixed : "tableHeader";
            return showHeader ? _react2.default.createElement(_TableHeader2.default, {
                ref: tableHeaderRef,
                prefixCls: prefixCls,
                rows: rows,
                rowStyle: trStyle,
                sortColumns: sortColumns,
                sortOrder: sortOrder
            }) : null;
        }
    }, {
        key: "getHeaderRows",
        value: function getHeaderRows(columns) {
            var _this2 = this;

            var currentRow = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
            var rows = arguments[2];

            rows = rows || [];
            rows[currentRow] = rows[currentRow] || [];

            columns.forEach(function (column) {
                if (column.rowSpan && rows.length < column.rowSpan) {
                    while (rows.length < column.rowSpan) {
                        rows.push([]);
                    }
                }
                var cell = {
                    key: column.key,
                    className: column.className || "",
                    children: column.title
                };
                if (column.children) {
                    _this2.getHeaderRows(column.children, currentRow + 1, rows);
                }
                if ("colSpan" in column) {
                    cell.colSpan = column.colSpan;
                }
                if ("rowSpan" in column) {
                    cell.rowSpan = column.rowSpan;
                }
                if (cell.colSpan !== 0) {
                    rows[currentRow].push(cell);
                }
            });
            return rows.filter(function (row) {
                return row.length > 0;
            });
        }
    }, {
        key: "getExpandedRow",
        value: function getExpandedRow(key, content, visible, className, fixed) {
            var _props2 = this.props;
            var prefixCls = _props2.prefixCls;
            var expandIconAsCell = _props2.expandIconAsCell;

            var colCount = void 0;
            if (fixed === "left") {
                colCount = this.columnManager.leftLeafColumns().length;
            } else if (fixed === "right") {
                colCount = this.columnManager.rightLeafColumns().length;
            } else {
                colCount = this.columnManager.leafColumns().length;
            }
            var columns = [{
                key: "extra-row",
                render: function render() {
                    return {
                        props: {
                            colSpan: colCount
                        },
                        children: fixed !== "right" ? content : "&nbsp;"
                    };
                }
            }];
            if (expandIconAsCell && fixed !== "right") {
                columns.unshift({
                    key: "expand-icon-placeholder",
                    render: function render() {
                        return null;
                    }
                });
            }
            return _react2.default.createElement(_TableRow2.default, {
                columns: columns,
                visible: visible,
                className: className,
                key: key + "-extra-row",
                prefixCls: prefixCls + "-expanded-row",
                indent: 1,
                expandable: false,
                store: this.store
            });
        }
    }, {
        key: "createRow",
        value: function createRow(options) {
            var record = options.record;
            var props = options.props;
            var index = options.index;
            var indent = options.indent;
            var fixed = options.fixed;
            var needIndentSpaced = options.needIndentSpaced;
            var isRowExpanded = options.isRowExpanded;
            var expandIconAsCellAdjusted = options.expandIconAsCellAdjusted;
            var visible = options.visible;
            var expandIconColumnIndexAdjusted = options.expandIconColumnIndexAdjusted;
            var key = options.key;
            var childrenColumn = options.childrenColumn;
            var childrenColumnName = props.childrenColumnName;
            var expandedRowRender = props.expandedRowRender;
            var expandRowByClick = props.expandRowByClick;
            var rowClassName = props.rowClassName;
            var rowRef = props.rowRef;
            var onRowClick = props.onRowClick;
            var onRowDoubleClick = props.onRowDoubleClick;
            var fixedColumnsBodyRowsHeight = this.state.fixedColumnsBodyRowsHeight;

            var className = rowClassName(record, index, indent);

            var onHoverProps = {};
            if (this.columnManager.isAnyColumnsFixed()) {
                onHoverProps.onHover = this.handleRowHover;
            }

            var height = fixed && fixedColumnsBodyRowsHeight[index] ? fixedColumnsBodyRowsHeight[index] : null;

            var leafColumns = this.columnManager.leafColumns();
            if (fixed === "left") {
                leafColumns = this.columnManager.leftLeafColumns();
            } else if (fixed === "right") {
                leafColumns = this.columnManager.rightLeafColumns();
            }

            return _react2.default.createElement(_TableRow2.default, _extends({
                indent: indent,
                indentSize: props.indentSize,
                needIndentSpaced: needIndentSpaced,
                className: className,
                record: record,
                expandIconAsCell: expandIconAsCellAdjusted,
                onDestroy: this.handleRowDestroy,
                index: index,
                visible: visible,
                expandRowByClick: expandRowByClick,
                onExpand: this.handleExpanded,
                expandable: childrenColumn || expandedRowRender,
                expanded: isRowExpanded,
                prefixCls: props.prefixCls + "-row",
                childrenColumnName: childrenColumnName,
                columns: leafColumns,
                expandIconColumnIndex: expandIconColumnIndexAdjusted,
                onRowClick: onRowClick,
                onRowDoubleClick: onRowDoubleClick,
                height: height
            }, onHoverProps, {
                key: key,
                hoverKey: key,
                ref: rowRef(record, index, indent),
                store: this.store
            }));
        }
    }, {
        key: "getExpandedRelatedParam",
        value: function getExpandedRelatedParam(options) {
            var childrenColumnName = options.childrenColumnName;
            var data = options.data;
            var fixed = options.fixed;
            var expandIconAsCell = options.expandIconAsCell;
            var expandIconColumnIndex = options.expandIconColumnIndex;

            var needIndentSpaced = data.some(function (record) {
                return record[childrenColumnName];
            });
            var isExpandIconAsCell = fixed === "left" ? expandIconAsCell : false;
            var expandIconAsCellAdjusted = this.columnManager.isAnyColumnsFixed() ? isExpandIconAsCell : expandIconAsCell;
            var nonExpandIconColumnIndex = -1;
            var expandIconColumnIndexTemp = fixed === "left" ? expandIconColumnIndex : nonExpandIconColumnIndex;
            var expandIconColumnIndexAdjusted = this.columnManager.isAnyColumnsFixed() ? expandIconColumnIndexTemp : expandIconColumnIndex;

            return {
                needIndentSpaced: needIndentSpaced,
                expandIconAsCellAdjusted: expandIconAsCellAdjusted,
                expandIconColumnIndexAdjusted: expandIconColumnIndexAdjusted
            };
        }

        /* eslint "prefer-const": 0 */
        /* eslint "max-statements": 0 */

    }, {
        key: "getRowsByData",
        value: function getRowsByData(data, visible, indent, columns, fixed) {
            var props = this.props;
            var childrenColumnName = props.childrenColumnName;
            var expandedRowRender = props.expandedRowRender;
            var expandedRowClassName = props.expandedRowClassName;
            var expandIconAsCell = props.expandIconAsCell;
            var expandIconColumnIndex = props.expandIconColumnIndex;

            var rows = [];

            var _getExpandedRelatedPa = this.getExpandedRelatedParam({
                childrenColumnName: childrenColumnName,
                data: data,
                fixed: fixed,
                expandIconAsCell: expandIconAsCell,
                expandIconColumnIndex: expandIconColumnIndex
            });

            var needIndentSpaced = _getExpandedRelatedPa.needIndentSpaced;
            var expandIconAsCellAdjusted = _getExpandedRelatedPa.expandIconAsCellAdjusted;
            var expandIconColumnIndexAdjusted = _getExpandedRelatedPa.expandIconColumnIndexAdjusted;


            for (var index = 0; index < data.length; index++) {
                var record = data[index];
                var isRowExpanded = this.isRowExpanded(record);
                var key = this.getRowKey(record, index);
                var childrenColumn = record[childrenColumnName];
                var options = { record: record, props: props, index: index, indent: indent, fixed: fixed, needIndentSpaced: needIndentSpaced, isRowExpanded: isRowExpanded,
                    expandIconAsCellAdjusted: expandIconAsCellAdjusted, visible: visible, expandIconColumnIndexAdjusted: expandIconColumnIndexAdjusted, key: key, childrenColumn: childrenColumn };

                rows.push(this.createRow(options));

                var expandedRowContent = void 0;
                if (expandedRowRender && isRowExpanded) {
                    expandedRowContent = expandedRowRender(record, index, indent);
                }
                var subVisible = visible && isRowExpanded;

                if (expandedRowContent && isRowExpanded) {
                    rows.push(this.getExpandedRow(key, expandedRowContent, subVisible, expandedRowClassName(record, index, indent), fixed));
                }
                if (childrenColumn) {
                    rows = rows.concat(this.getRowsByData(childrenColumn, subVisible, indent + 1, columns, fixed));
                }
            }

            return rows;
        }
    }, {
        key: "getRows",
        value: function getRows(columns, fixed) {
            return this.getRowsByData(this.state.data, true, 0, columns, fixed);
        }
    }, {
        key: "getColGroup",
        value: function getColGroup(columns, fixed) {
            var cols = [];
            if (this.props.expandIconAsCell && fixed !== "right") {
                cols.push(_react2.default.createElement("col", {
                    className: this.props.prefixCls + "-expand-icon-col",
                    key: "rc-table-expand-icon-col"
                }));
            }
            var leafColumns = void 0;
            if (fixed === "left") {
                leafColumns = this.columnManager.leftLeafColumns();
            } else if (fixed === "right") {
                leafColumns = this.columnManager.rightLeafColumns();
            } else {
                leafColumns = this.columnManager.leafColumns();
            }
            cols = cols.concat(leafColumns.map(function (c) {
                return _react2.default.createElement("col", { key: c.key, style: { width: c.width, minWidth: c.width } });
            }));
            return _react2.default.createElement(
                "colgroup",
                null,
                cols
            );
        }
    }, {
        key: "getLeftFixedTable",
        value: function getLeftFixedTable() {
            return this.getTable({
                columns: this.columnManager.leftColumns(),
                fixed: "left",
                leftFixedTableWidth: this.state.leftFixedTableWidth
            });
        }
    }, {
        key: "getRightFixedTable",
        value: function getRightFixedTable() {
            return this.getTable({
                columns: this.columnManager.rightColumns(),
                fixed: "right"
            });
        }
    }, {
        key: "getTable",
        value: function getTable() {
            var _this3 = this;

            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
            var columns = options.columns;
            var fixed = options.fixed;
            var leftFixedTableWidth = options.leftFixedTableWidth;
            var originalTableWidth = options.originalTableWidth;
            var _props3 = this.props;
            var prefixCls = _props3.prefixCls;
            var _props3$scroll = _props3.scroll;
            var scroll = _props3$scroll === undefined ? {} : _props3$scroll;
            var getBodyWrapper = _props3.getBodyWrapper;
            var useFixedHeader = this.props.useFixedHeader;

            var bodyStyle = Object.assign({}, this.props.bodyStyle);
            var headStyle = {};

            var tableClassName = "";

            var getBodyStyle = function getBodyStyle() {
                if (scroll.x || fixed) {
                    tableClassName = prefixCls + "-fixed";
                    bodyStyle.overflowX = bodyStyle.overflowX || "auto";
                }

                var bodyStyleOfScrollY = function bodyStyleOfScrollY() {
                    bodyStyle.overflowY = bodyStyle.overflowY || "scroll";
                    bodyStyle.overflowX = "hidden";
                    useFixedHeader = true;

                    // Add negative margin bottom for scroll bar overflow bug
                    var scrollbarWidth = (0, _utils.measureScrollbar)();
                    if (scrollbarWidth > 0) {
                        (fixed ? bodyStyle : headStyle).marginBottom = "0px"; //`-${scrollbarWidth}px`;
                        (fixed ? bodyStyle : headStyle).paddingBottom = "0px";
                        if (!fixed) {
                            headStyle.width = originalTableWidth;
                        }
                    }

                    // maxHeight will make fixed-Table scrolling not working
                    // so we only set maxHeight to body-Table here
                    if (fixed) {
                        bodyStyle.height = bodyStyle.height || scroll.y;
                    } else {
                        bodyStyle.maxHeight = bodyStyle.maxHeight || scroll.y;
                        bodyStyle.width = originalTableWidth;
                    }
                };

                if (scroll.y) {
                    bodyStyleOfScrollY();
                }
            };

            getBodyStyle();

            var renderTable = function renderTable() {
                var hasHead = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
                var hasBody = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

                var tableStyle = {};
                if (!fixed && scroll.x) {
                    // not set width, then use content fixed width
                    if (scroll.x === true) {
                        tableStyle.tableLayout = "fixed";
                    } else {
                        tableStyle.width = scroll.x;
                    }
                }

                if (fixed && leftFixedTableWidth) {
                    tableStyle.width = leftFixedTableWidth;
                }

                var tableBody = hasBody ? getBodyWrapper(_react2.default.createElement(
                    "tbody",
                    { className: prefixCls + "-tbody" },
                    _this3.getRows(columns, fixed)
                )) : null;
                return _react2.default.createElement(
                    "table",
                    { ref: fixed && leftFixedTableWidth ? "leftFixedTable" : "",
                        className: tableClassName, style: tableStyle
                    },
                    _this3.getColGroup(columns, fixed),
                    hasHead ? _this3.getHeader(columns, fixed) : null,
                    tableBody
                );
            };

            var headTable = void 0;

            if (useFixedHeader) {
                headTable = _react2.default.createElement(
                    "div",
                    {
                        className: prefixCls + "-header",
                        ref: fixed ? null : "headTable",
                        style: headStyle,
                        onMouseOver: this.handleDetectScrollTarget,
                        onTouchStart: this.handleDetectScrollTarget,
                        onScroll: this.handleBodyScroll
                    },
                    renderTable(true, false)
                );
            }

            var getBodyTable = function getBodyTable() {
                var BodyTable = _react2.default.createElement(
                    "div",
                    {
                        className: prefixCls + "-body",
                        style: bodyStyle,
                        ref: "bodyTable",
                        onMouseOver: _this3.handleDetectScrollTarget,
                        onTouchStart: _this3.handleDetectScrollTarget,
                        onScroll: _this3.handleBodyScroll
                    },
                    renderTable(!useFixedHeader)
                );

                if (fixed && columns.length) {
                    var refName = columns[0].fixed === "left" || columns[0].fixed === true ? "fixedColumnsBodyLeft" : "fixedColumnsBodyRight";
                    delete bodyStyle.overflowX;
                    delete bodyStyle.overflowY;
                    var style = Object.assign({}, bodyStyle);
                    BodyTable = _react2.default.createElement(
                        "div",
                        {
                            className: prefixCls + "-body-outer",
                            style: style
                        },
                        _react2.default.createElement(
                            "div",
                            {
                                className: prefixCls + "-body-inner",
                                ref: refName,
                                onMouseOver: _this3.handleDetectScrollTarget,
                                onTouchStart: _this3.handleDetectScrollTarget,
                                onScroll: _this3.handleBodyScroll
                            },
                            renderTable(!useFixedHeader)
                        )
                    );
                }

                return BodyTable;
            };

            var bodyTable = getBodyTable();

            return _react2.default.createElement(
                "span",
                null,
                headTable,
                bodyTable
            );
        }
    }, {
        key: "getTitle",
        value: function getTitle() {
            var _props4 = this.props;
            var title = _props4.title;
            var prefixCls = _props4.prefixCls;

            return title ? _react2.default.createElement(
                "div",
                { className: prefixCls + "-title" },
                title(this.state.data)
            ) : null;
        }
    }, {
        key: "getFooter",
        value: function getFooter() {
            var _props5 = this.props;
            var footer = _props5.footer;
            var prefixCls = _props5.prefixCls;

            return footer ? _react2.default.createElement(
                "div",
                { className: prefixCls + "-footer" },
                footer(this.state.data)
            ) : null;
        }
    }, {
        key: "getEmptyText",
        value: function getEmptyText() {
            var _props6 = this.props;
            var emptyText = _props6.emptyText;
            var prefixCls = _props6.prefixCls;
            var data = _props6.data;

            return !data.length ? _react2.default.createElement(
                "div",
                { className: prefixCls + "-placeholder" },
                emptyText()
            ) : null;
        }
    }, {
        key: "getHeaderRowStyle",
        value: function getHeaderRowStyle(columns, rows) {
            var fixedColumnsHeadRowsHeight = this.state.fixedColumnsHeadRowsHeight;

            var headerHeight = fixedColumnsHeadRowsHeight[0];
            if (headerHeight && columns) {
                if (headerHeight === "auto") {
                    return { height: "auto" };
                }
                return { height: headerHeight / rows.length };
            }
            return null;
        }
    }, {
        key: "syncFixedTableRowHeight",
        value: function syncFixedTableRowHeight() {
            var prefixCls = this.props.prefixCls;

            var headRows = this.refs.headTable ? this.refs.headTable.querySelectorAll("thead") : this.refs.bodyTable.querySelectorAll("thead");
            var bodyRows = this.refs.bodyTable.querySelectorAll("." + prefixCls + "-row") || [];
            var fixedColumnsHeadRowsHeight = [].map.call(headRows, function (row) {
                return row.getBoundingClientRect().height || "auto";
            });
            var fixedColumnsBodyRowsHeight = [].map.call(bodyRows, function (row) {
                if (row.getBoundingClientRect().height < 51) {
                    row.style.height = "51px";
                }
                return row.getBoundingClientRect().height || "auto";
            });
            if ((0, _shallowequal2.default)(this.state.fixedColumnsHeadRowsHeight, fixedColumnsHeadRowsHeight) && (0, _shallowequal2.default)(this.state.fixedColumnsBodyRowsHeight, fixedColumnsBodyRowsHeight)) {
                return;
            }

            if (!this.state.hasSetFixedColumnsScrollableTableWidth) {
                var scrollTableBody = this.refs.bodyTable.parentElement.parentElement;
                var tableWidth = this.refs.bodyTable.children[0].clientWidth;
                var leftFixedColumnWidth = this.refs.fixedColumnsBodyLeft ? this.refs.fixedColumnsBodyLeft.offsetWidth : 0;
                var rightFixedColumnWidth = this.refs.fixedColumnsBodyRight ? this.refs.fixedColumnsBodyRight.clientWidth : 0;
                var width = scrollTableBody.clientWidth - leftFixedColumnWidth - rightFixedColumnWidth;

                this.originalLeftFixedTableWidth = leftFixedColumnWidth;
                this.fixedColumnsScrollableTableWidth = width;
                this.leftFixedTableWidth = leftFixedColumnWidth;
                this.leftFixedTableContainerWidth = this.state.leftFixedTableContainerWidth;
                this.fixedColumnsScrollableTableLeftPosition = leftFixedColumnWidth;

                this.setState({
                    fixedColumnsHeadRowsHeight: fixedColumnsHeadRowsHeight,
                    fixedColumnsBodyRowsHeight: fixedColumnsBodyRowsHeight,
                    hasSetFixedColumnsScrollableTableWidth: true,
                    leftFixedTableWidth: leftFixedColumnWidth,
                    fixedColumnsScrollableTableLeftPosition: leftFixedColumnWidth,
                    fixedColumnsScrollableTableWidth: width,
                    originalTableWidth: tableWidth,
                    originalLeftFixedTableWidth: leftFixedColumnWidth
                });
            } else {
                this.setState({
                    fixedColumnsHeadRowsHeight: fixedColumnsHeadRowsHeight,
                    fixedColumnsBodyRowsHeight: fixedColumnsBodyRowsHeight
                });
            }
        }
    }, {
        key: "syncFixedTableHeader",
        value: function syncFixedTableHeader(event) {
            var _refs = this.refs;
            var rcTable = _refs.rcTable;
            var hideTableHeader = _refs.hideTableHeader;

            var offsetTop = this.state.rcTableOffsetTop ? this.state.rcTableOffsetTop : rcTable.offsetTop;
            var prefixCls = this.props.prefixCls;
            if (offsetTop <= event.target.scrollTop && event.target.className !== prefixCls + "-scroll") {
                if (offsetTop + rcTable.getBoundingClientRect().height - this.tableHeaderHeight <= event.target.scrollTop) {
                    hideTableHeader.refs.rcTable.style.display = "none";
                } else if (hideTableHeader.refs.rcTable.style.display !== "") {
                    hideTableHeader.refs.rcTable.style.display = "";
                    hideTableHeader.refs.rcTable.style.height = this.tableHeaderHeight + "px";
                    hideTableHeader.refs.rcTable.style.width = this.tableHeaderWith === "100%" ? this.tableHeaderWith : this.tableHeaderWith + "px";
                    hideTableHeader.refs.rcTable.style.left = this.refs.rcTable.getClientRects()[0].left + "px";
                    hideTableHeader.refs.tableWapper.scrollLeft = this.tableHeaderScollLeft;
                } else {
                    return;
                }
            } else if (hideTableHeader.refs.rcTable.style.display === "" && event.target.className !== prefixCls + "-scroll") {
                hideTableHeader.refs.rcTable.style.display = "none";
            } else if (event.target.className === prefixCls + "-scroll") {
                // this.handleBodyScroll(event);
            } else {
                return;
            }
        }
    }, {
        key: "resetScrollY",
        value: function resetScrollY() {
            if (this.refs.headTable) {
                this.refs.headTable.scrollLeft = 0;
            }
            if (this.refs.bodyTable) {
                this.refs.bodyTable.scrollLeft = 0;
            }
        }
    }, {
        key: "findExpandedRow",
        value: function findExpandedRow(record) {
            var _this4 = this;

            var rows = this.getExpandedRows().filter(function (i) {
                return i === _this4.getRowKey(record);
            });
            return rows[0];
        }
    }, {
        key: "isRowExpanded",
        value: function isRowExpanded(record) {
            return typeof this.findExpandedRow(record) !== "undefined";
        }
    }, {
        key: "handleDetectScrollTarget",
        value: function handleDetectScrollTarget(e) {
            if (this.scrollTarget !== e.currentTarget) {
                this.scrollTarget = e.currentTarget;
            }
        }
    }, {
        key: "setBodyScrollY",
        value: function setBodyScrollY(e, fixedColumnsBodyLeft, fixedColumnsBodyRight, bodyTable) {
            if (fixedColumnsBodyLeft && e.target !== fixedColumnsBodyLeft) {
                fixedColumnsBodyLeft.scrollTop = e.target.scrollTop;
            }
            if (fixedColumnsBodyRight && e.target !== fixedColumnsBodyRight) {
                fixedColumnsBodyRight.scrollTop = e.target.scrollTop;
            }
            if (bodyTable && e.target !== bodyTable) {
                bodyTable.scrollTop = e.target.scrollTop;
            }
        }
    }, {
        key: "handleBodyScroll",
        value: function handleBodyScroll(e) {
            if (e.target !== this.scrollTarget) {
                return;
            }
            var _props$scroll = this.props.scroll;
            var scroll = _props$scroll === undefined ? {} : _props$scroll;
            var _refs2 = this.refs;
            var bodyTable = _refs2.bodyTable;
            var fixedColumnsBodyLeft = _refs2.fixedColumnsBodyLeft;
            var fixedColumnsBodyRight = _refs2.fixedColumnsBodyRight;

            if (scroll.y) {
                this.setBodyScrollY(e, fixedColumnsBodyLeft, fixedColumnsBodyRight, bodyTable);
            }
            // Remember last scrollLeft for scroll direction detecting.
            this.lastScrollLeft = e.target.scrollLeft;
        }
    }, {
        key: "handleFixTableScroll",
        value: function handleFixTableScroll(e, isFromFixHeader) {
            if (this.tableHeaderScollLeft !== e.target.scrollLeft) {
                this.tableHeaderScollLeft = e.target.scrollLeft;
                if (!isFromFixHeader) {
                    ReactDOM.findDOMNode(this.refs.hideTableHeader.refs.tableWapper).scrollLeft = e.target.scrollLeft;
                } else {
                    ReactDOM.findDOMNode(this.refs.tableWapper).scrollLeft = e.target.scrollLeft;
                }
            }
        }
    }, {
        key: "handleRowHover",
        value: function handleRowHover(isHover, key) {
            this.store.setState({
                currentHoverKey: isHover ? key : null
            });
        }
    }, {
        key: "getScrollPanelStyle",
        value: function getScrollPanelStyle() {
            return {
                width: this.state.fixedColumnsScrollableTableWidth,
                left: this.state.fixedColumnsScrollableTableLeftPosition
            };
        }
    }, {
        key: "handleTableMouseDown",
        value: function handleTableMouseDown(event) {
            this.moveBegin = true;
            this.refs.hideTableHeader.refs.tableWapper.scrollLeft = this.tableHeaderScollLeft;
            this.refs.rcTableDragbar.style.left = event.clientX - this.refs.rcTable.getClientRects()[0].left + "px";
            this.refs.rcTable.className = this.getClassName(this.props);
        }
    }, {
        key: "handleTableMouseUp",
        value: function handleTableMouseUp(event) {
            this.updateDraggedWidth(event.clientX - this.refs.rcTable.getClientRects()[0].left);
        }
    }, {
        key: "handleTableMouseMove",
        value: function handleTableMouseMove(event) {
            if (this.moveBegin) {
                this.refs.rcTableDragbar.style.left = event.clientX - this.refs.rcTable.getClientRects()[0].left + "px";
            }
        }
    }, {
        key: "updateDraggedWidth",
        value: function updateDraggedWidth(width) {
            if (this.moveBegin) {
                this.moveBegin = false;
                this.refs.rcTableDragbar.style.left = "-9999px";
                this.refs.rcTable.className = this.getClassName(this.props);

                var moveLeft = width <= this.fixedColumnsScrollableTableLeftPosition;
                var stateObj = {
                    leftFixedTableContainerWidth: width, // 4
                    fixedColumnsScrollableTableLeftPosition: width // 5
                };

                if (moveLeft) {
                    var scrollableTableWidth = this.leftFixedTableContainerWidth ? this.leftFixedTableContainerWidth - width : this.leftFixedTableWidth - width;
                    stateObj.fixedColumnsScrollableTableWidth = this.fixedColumnsScrollableTableWidth + scrollableTableWidth; // 2
                    stateObj.leftFixedTableWidth = width < this.originalLeftFixedTableWidth ? this.originalLeftFixedTableWidth : width; //3
                } else {
                    if (width > this.leftFixedTableWidth) {
                        stateObj.leftFixedTableWidth = width; // 3
                    }

                    var _scrollableTableWidth = this.leftFixedTableContainerWidth ? width - this.leftFixedTableContainerWidth : width - this.leftFixedTableWidth;
                    stateObj.fixedColumnsScrollableTableWidth = this.fixedColumnsScrollableTableWidth - _scrollableTableWidth; // 2
                }
                // this.setState(stateObj);
                this.updateDraggedWidthToTable(stateObj);
                this.refs.tableWapper.style.width = stateObj.fixedColumnsScrollableTableWidth + "px"; // 2
                this.refs.hideTableHeader.refs.tableWapper.style.width = stateObj.fixedColumnsScrollableTableWidth + "px"; //2
                this.refs.leftFixedTable.style.width = stateObj.leftFixedTableWidth + "px"; // 3
                this.refs.hideTableHeader.refs.leftFixedTable.style.width = stateObj.leftFixedTableWidth + "px"; // 3

                this.refs.fixLeft.style.width = stateObj.leftFixedTableContainerWidth + "px"; // 4
                this.refs.hideTableHeader.refs.fixLeft.style.width = stateObj.leftFixedTableContainerWidth + "px"; // 4

                this.refs.hideTableHeader.refs.tableWapper.style.left = this.fixedColumnsScrollableTableLeftPosition + "px"; //5
                this.refs.tableWapper.style.left = this.fixedColumnsScrollableTableLeftPosition + "px"; // 5
            }
        }
    }, {
        key: "updateDraggedWidthToTable",
        value: function updateDraggedWidthToTable(stateObj) {
            this.fixedColumnsScrollableTableWidth = stateObj.fixedColumnsScrollableTableWidth;
            this.leftFixedTableWidth = stateObj.leftFixedTableWidth;
            this.leftFixedTableContainerWidth = stateObj.leftFixedTableContainerWidth;
            this.fixedColumnsScrollableTableLeftPosition = stateObj.fixedColumnsScrollableTableLeftPosition;
        }
    }, {
        key: "getClassName",
        value: function getClassName(props) {
            var className = props.prefixCls;

            if (props.className) {
                className += " " + props.className;
            }
            if (props.useFixedHeader || props.scroll && props.scroll.y) {
                className += " " + props.prefixCls + "-fixed-header";
            }
            className += " " + props.prefixCls + "-scroll-position-" + this.state.scrollPosition;

            if (this.moveBegin) {
                className += " drag";
            }

            return className;
        }
    }, {
        key: "handleHeaderWheel",
        value: function handleHeaderWheel(event) {
            var scrollObj = document.getElementById(this.props.wrapperScrollBarIdName) || document.getElementsByClassName("neptune_navContent_1ge5r")[0];
            scrollObj.scrollTop += event.deltaY;
        }
    }, {
        key: "getFixTopHeader",
        value: function getFixTopHeader() {
            var props = this.props;
            return _react2.default.createElement(_FixedTableHeader2.default, _extends({ ref: "hideTableHeader" }, props, {
                onTableMove: this.handleTableMouseMove,
                onTableUp: this.handleTableMouseUp,
                onTableDown: this.handleTableMouseDown,
                onHeaderScroll: this.handleFixTableScroll,
                onHeaderWheel: this.handleHeaderWheel,
                defaultState: this.state,
                height: this.tableHeaderHeight,
                style: { display: this.state.fixedTop ? "" : "none",
                    position: "fixed",
                    top: 89,
                    left: this.refs.rcTable ? this.refs.rcTable.getClientRects()[0].left : "-999px",
                    zIndex: 9,
                    width: this.tableHeaderWith,
                    height: this.tableHeaderHeight }
            }));
        }
    }, {
        key: "render",
        value: function render() {
            var props = this.props;
            var prefixCls = props.prefixCls;
            var className = this.getClassName(props);
            var isTableScroll = this.columnManager.isAnyColumnsFixed() || props.scroll.x || props.scroll.y;
            var scrollPanelStyle = this.getScrollPanelStyle();

            return _react2.default.createElement(
                "div",
                { className: className, style: props.style, ref: "rcTable",
                    onMouseMove: this.handleTableMouseMove, onMouseUp: this.handleTableMouseUp
                },
                this.getTitle(),
                props.enableTableFixTop && this.getFixTopHeader(),
                _react2.default.createElement(
                    "div",
                    { className: prefixCls + "-content" },
                    this.columnManager.isAnyColumnsLeftFixed() && _react2.default.createElement(
                        "div",
                        { ref: "fixLeft", className: prefixCls + "-fixed-left",
                            style: { width: this.state.leftFixedTableContainerWidth }
                        },
                        this.getLeftFixedTable(),
                        props.enableColumnDraggable && _react2.default.createElement(
                            "div",
                            null,
                            _react2.default.createElement("div", { onMouseDown: this.handleTableMouseDown,
                                className: "split", style: { height: this.tableHeaderHeight + 1 }
                            }),
                            _react2.default.createElement("div", { onMouseDown: this.handleTableMouseDown, className: "split_area" }),
                            _react2.default.createElement("div", { className: "scroll_blank" })
                        )
                    ),
                    _react2.default.createElement(
                        "div",
                        { ref: "tableWapper", className: isTableScroll ? prefixCls + "-scroll" : "",
                            style: scrollPanelStyle, onScroll: this.handleFixTableScroll
                        },
                        this.getTable({
                            columns: this.columnManager.groupedWithoutFixedColumns(),
                            originalTableWidth: this.state.originalTableWidth
                        }),
                        this.getEmptyText(),
                        this.getFooter()
                    ),
                    this.columnManager.isAnyColumnsRightFixed() && _react2.default.createElement(
                        "div",
                        { className: prefixCls + "-fixed-right" },
                        this.getRightFixedTable()
                    ),
                    props.enableColumnDraggable && _react2.default.createElement(
                        "div",
                        null,
                        _react2.default.createElement("div", { ref: "rcTableDragbar", className: "x-grid-resize-marker" })
                    )
                )
            );
        }
    }]);

    return Table;
}(_react.Component);

Table.propTypes = {
    data: _react.PropTypes.array,
    expandIconAsCell: _react.PropTypes.bool,
    defaultExpandAllRows: _react.PropTypes.bool,
    expandedRowKeys: _react.PropTypes.array,
    defaultExpandedRowKeys: _react.PropTypes.array,
    useFixedHeader: _react.PropTypes.bool,
    columns: _react.PropTypes.array,
    prefixCls: _react.PropTypes.string,
    bodyStyle: _react.PropTypes.object,
    style: _react.PropTypes.object,
    rowKey: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.func]),
    rowClassName: _react.PropTypes.func,
    expandedRowClassName: _react.PropTypes.func,
    childrenColumnName: _react.PropTypes.string,
    onExpand: _react.PropTypes.func,
    onExpandedRowsChange: _react.PropTypes.func,
    indentSize: _react.PropTypes.number,
    onRowClick: _react.PropTypes.func,
    onRowDoubleClick: _react.PropTypes.func,
    expandIconColumnIndex: _react.PropTypes.number,
    showHeader: _react.PropTypes.bool,
    title: _react.PropTypes.func,
    footer: _react.PropTypes.func,
    emptyText: _react.PropTypes.func,
    scroll: _react.PropTypes.object,
    rowRef: _react.PropTypes.func,
    getBodyWrapper: _react.PropTypes.func,
    children: _react.PropTypes.node,
    enableColumnDraggable: _react.PropTypes.bool,
    wrapperScrollBarIdName: _react.PropTypes.string,
    enableTableFixTop: _react.PropTypes.bool,
    sortColumns: _react.PropTypes.array,
    sortOrder: _react.PropTypes.func
};

Table.defaultProps = {
    data: [],
    useFixedHeader: false,
    expandIconAsCell: false,
    defaultExpandAllRows: false,
    defaultExpandedRowKeys: [],
    rowKey: "key",
    rowClassName: function rowClassName() {
        return "";
    },
    expandedRowClassName: function expandedRowClassName() {
        return "";
    },
    onExpand: function onExpand() {},
    onExpandedRowsChange: function onExpandedRowsChange() {},
    onRowClick: function onRowClick() {},
    onRowDoubleClick: function onRowDoubleClick() {},

    prefixCls: "rc-table",
    bodyStyle: {},
    style: {},
    childrenColumnName: "children",
    indentSize: 15,
    expandIconColumnIndex: 0,
    showHeader: true,
    scroll: {},
    rowRef: function rowRef() {
        return null;
    },
    getBodyWrapper: function getBodyWrapper(body) {
        return body;
    },
    emptyText: function emptyText() {
        return "No Data";
    },
    enableColumnDraggable: false,
    wrapperScrollBarIdName: "",
    enableTableFixTop: true,
    sortColumns: []
};

exports.default = Table;

},{"./ColumnManager":185,"./FixedTableHeader":187,"./TableHeader":190,"./TableRow":191,"./createStore":192,"./toRemove/addEventListener":196,"./toRemove/shallowequal":199,"./utils":200,"react":"react","react-dom":"react-dom"}],189:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _objectPath = require("./toRemove/object-path");

var _objectPath2 = _interopRequireDefault(_objectPath);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TableCell = function (_React$Component) {
    _inherits(TableCell, _React$Component);

    function TableCell(props) {
        _classCallCheck(this, TableCell);

        var _this = _possibleConstructorReturn(this, (TableCell.__proto__ || Object.getPrototypeOf(TableCell)).call(this, props));

        _this.handleClick = _this.handleClick.bind(_this);
        return _this;
    }

    _createClass(TableCell, [{
        key: "isInvalidRenderCellText",
        value: function isInvalidRenderCellText(text) {
            return text && !_react2.default.isValidElement(text) && Object.prototype.toString.call(text) === "[object Object]";
        }
    }, {
        key: "handleClick",
        value: function handleClick(e) {
            var _props = this.props;
            var record = _props.record;
            var onCellClick = _props.column.onCellClick;

            if (onCellClick) {
                onCellClick(record, e);
            }
        }
    }, {
        key: "calculateRowAndColSpan",
        value: function calculateRowAndColSpan(render, record, index, text) {
            var tdProps = void 0;
            var colSpan = void 0;
            var rowSpan = void 0;

            if (render) {
                text = render(text, record, index);
                if (this.isInvalidRenderCellText(text)) {
                    tdProps = text.props || {};
                    rowSpan = tdProps.rowSpan;
                    colSpan = tdProps.colSpan;
                    text = text.children;
                }
            }

            return { rowSpan: rowSpan, colSpan: colSpan, text: text };
        }
    }, {
        key: "render",
        value: function render() {
            var _props2 = this.props;
            var record = _props2.record;
            var indentSize = _props2.indentSize;
            var prefixCls = _props2.prefixCls;
            var indent = _props2.indent;
            var index = _props2.index;
            var expandIcon = _props2.expandIcon;
            var column = _props2.column;
            var dataIndex = column.dataIndex;
            var render = column.render;
            var _column$className = column.className;
            var className = _column$className === undefined ? "" : _column$className;


            var text = _objectPath2.default.get(record, dataIndex);

            var result = this.calculateRowAndColSpan(render, record, index, text);
            var rowSpan = result.rowSpan;
            var colSpan = result.colSpan;

            text = result.text;

            if (this.isInvalidRenderCellText(text)) {
                text = null;
            }

            var indentText = expandIcon ? _react2.default.createElement("span", {
                style: { paddingLeft: indentSize * indent + "px" },
                className: prefixCls + "-indent indent-level-" + indent
            }) : null;

            if (rowSpan === 0 || colSpan === 0) {
                return null;
            }

            return _react2.default.createElement(
                "td",
                {
                    colSpan: colSpan,
                    rowSpan: rowSpan,
                    className: className,
                    onClick: this.handleClick
                },
                indentText,
                expandIcon,
                text
            );
        }
    }]);

    return TableCell;
}(_react2.default.Component);

TableCell.propTypes = {
    record: _react.PropTypes.object,
    prefixCls: _react.PropTypes.string,
    index: _react.PropTypes.number,
    indent: _react.PropTypes.number,
    indentSize: _react.PropTypes.number,
    column: _react.PropTypes.object,
    expandIcon: _react.PropTypes.node
};

exports.default = TableCell;

},{"./toRemove/object-path":198,"react":"react"}],190:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _shallowequal = require("./toRemove/shallowequal");

var _shallowequal2 = _interopRequireDefault(_shallowequal);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TableHeader = function (_React$Component) {
    _inherits(TableHeader, _React$Component);

    function TableHeader(props) {
        _classCallCheck(this, TableHeader);

        var _this = _possibleConstructorReturn(this, (TableHeader.__proto__ || Object.getPrototypeOf(TableHeader)).call(this, props));

        var sortColumns = props.sortColumns;
        if (sortColumns) {
            if (!sortColumns.sortOrderOptions) {
                sortColumns.sortOrderOptions = [{ sortOrder: "asc", icon: null }, { sortOrder: "desc", icon: null }];
            }
            if (!sortColumns.currSortOrder) {
                sortColumns.currSortOrder = "asc";
            }
            _this.state = {
                sortColumns: sortColumns
            };
            _this.order = _this.order.bind(_this);
            _this.sortOrderChange = _this.sortOrderChange.bind(_this);
            _this.orderAddIcon = _this.orderAddIcon.bind(_this);
        }
        return _this;
    }

    _createClass(TableHeader, [{
        key: "shouldComponentUpdate",
        value: function shouldComponentUpdate(nextProps, nextState) {
            var isPropsChanged = !(0, _shallowequal2.default)(nextProps, this.props);
            var isStateChanged = !(0, _shallowequal2.default)(nextState, this.state);
            return isStateChanged || isPropsChanged;
        }
    }, {
        key: "order",
        value: function order(cellProps, e) {
            if (this.state.sortColumns && this.state.sortColumns.length > 0) {
                var columnIndex = this.state.sortColumns.findIndex(function (item) {
                    return item.columnName.toLowerCase() === cellProps.key;
                });
                if (columnIndex >= 0) {
                    this.sortOrderChange(columnIndex);
                    var column = this.state.sortColumns[columnIndex];
                    this.props.sortOrder(column.columnName, column.currSortOrder, e);
                }
            }
            return;
        }
    }, {
        key: "sortOrderChange",
        value: function sortOrderChange(colunmIndex) {
            var columns = Object.assign([], this.state.sortColumns);
            var column = columns[colunmIndex];
            var len = column.sortOrderOptions.length;
            var index = column.currSortOrder ? column.sortOrderOptions.findIndex(function (item) {
                return item.sortOrder === column.currSortOrder;
            }) + 1 : 1;
            index = index < len ? index : 0;
            column.currSortOrder = column.sortOrderOptions[index].sortOrder;
            this.setState({ sortColumns: columns });
        }
    }, {
        key: "orderAddIcon",
        value: function orderAddIcon(cellProps) {
            var _this2 = this;

            if (this.state.sortColumns && this.state.sortColumns.length > 0) {
                var columnIndex = this.state.sortColumns.findIndex(function (item) {
                    return item.columnName.toLowerCase() === cellProps.key;
                });
                if (columnIndex >= 0) {
                    (function () {
                        var column = _this2.state.sortColumns[columnIndex];
                        var icon = column.sortOrderOptions.find(function (item) {
                            return item.sortOrder === column.currSortOrder;
                        }).icon;
                        icon = icon ? icon : _react2.default.createElement(
                            "span",
                            null,
                            column.currSortOrder
                        );
                        cellProps.children = _react2.default.createElement(
                            "div",
                            null,
                            _react2.default.createElement(
                                "div",
                                { style: { "display": "inline-block" } },
                                column.columnName
                            ),
                            _react2.default.createElement(
                                "div",
                                { style: { "display": "inline-block" } },
                                icon
                            )
                        );
                    })();
                }
            }
            return cellProps;
        }
    }, {
        key: "render",
        value: function render() {
            var _this3 = this;

            var _props = this.props;
            var prefixCls = _props.prefixCls;
            var rowStyle = _props.rowStyle;
            var rows = _props.rows;
            var sortColumns = _props.sortColumns;

            return _react2.default.createElement(
                "thead",
                { className: prefixCls + "-thead" },
                rows.map(function (row, index) {
                    return _react2.default.createElement(
                        "tr",
                        { key: index, style: rowStyle },
                        row.map(function (cellProps, i) {
                            if (sortColumns) {
                                cellProps = _this3.orderAddIcon(cellProps);
                                return _react2.default.createElement("th", _extends({}, cellProps, { key: i, onClick: function onClick(e) {
                                        return _this3.order(cellProps, e);
                                    } }));
                            }
                            return _react2.default.createElement("th", _extends({}, cellProps, { key: i }));
                        })
                    );
                })
            );
        }
    }]);

    return TableHeader;
}(_react2.default.Component);

TableHeader.propTypes = {
    prefixCls: _react.PropTypes.string,
    rowStyle: _react.PropTypes.object,
    rows: _react.PropTypes.array,
    sortColumns: _react.PropTypes.array,
    sortOrder: _react.PropTypes.func
};

exports.default = TableHeader;

},{"./toRemove/shallowequal":199,"react":"react"}],191:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _TableCell = require("./TableCell");

var _TableCell2 = _interopRequireDefault(_TableCell);

var _ExpandIcon = require("./ExpandIcon");

var _ExpandIcon2 = _interopRequireDefault(_ExpandIcon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TableRow = function (_React$Component) {
    _inherits(TableRow, _React$Component);

    function TableRow(props) {
        _classCallCheck(this, TableRow);

        var _this = _possibleConstructorReturn(this, (TableRow.__proto__ || Object.getPrototypeOf(TableRow)).call(this, props));

        _this.handleRowClick = _this.handleRowClick.bind(_this);
        _this.handleRowDoubleClick = _this.handleRowDoubleClick.bind(_this);
        _this.handleMouseEnter = _this.handleMouseEnter.bind(_this);
        _this.handleMouseLeave = _this.handleMouseLeave.bind(_this);
        // this.setState({
        //     hovered: false
        // });
        _this.state = {
            hovered: false
        };
        return _this;
    }

    _createClass(TableRow, [{
        key: "componentDidMountEvent",
        value: function componentDidMountEvent() {
            var _this2 = this;

            var _props = this.props;
            var store = _props.store;
            var hoverKey = _props.hoverKey;

            this.unsubscribe = store.subscribe(function () {
                if (store.getState().currentHoverKey === hoverKey) {
                    _this2.setState({ hovered: true });
                } else if (_this2.state.hovered === true) {
                    _this2.setState({ hovered: false });
                }
            });
        }
    }, {
        key: "componentDidMount",
        value: function componentDidMount() {
            this.componentDidMountEvent();
        }
    }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
            this.props.onDestroy(this.props.record);
            if (this.unsubscribe) {
                this.unsubscribe();
            }
        }
    }, {
        key: "handleRowClick",
        value: function handleRowClick() {
            var _props2 = this.props;
            var record = _props2.record;
            var index = _props2.index;
            var onRowClick = _props2.onRowClick;
            var expandable = _props2.expandable;
            var expandRowByClick = _props2.expandRowByClick;
            var expanded = _props2.expanded;
            var onExpand = _props2.onExpand;

            if (expandable && expandRowByClick) {
                onExpand(!expanded, record);
            }
            onRowClick(record, index, event);
        }
    }, {
        key: "handleRowDoubleClick",
        value: function handleRowDoubleClick() {
            var _props3 = this.props;
            var record = _props3.record;
            var index = _props3.index;
            var onRowDoubleClick = _props3.onRowDoubleClick;

            onRowDoubleClick(record, index, event);
        }
    }, {
        key: "handleMouseEnter",
        value: function handleMouseEnter() {
            var _props4 = this.props;
            var onHover = _props4.onHover;
            var hoverKey = _props4.hoverKey;

            onHover(true, hoverKey);
        }
    }, {
        key: "handleMouseLeave",
        value: function handleMouseLeave() {
            var _props5 = this.props;
            var onHover = _props5.onHover;
            var hoverKey = _props5.hoverKey;

            onHover(false, hoverKey);
        }
    }, {
        key: "render",
        value: function render() {
            var _props6 = this.props;
            var prefixCls = _props6.prefixCls;
            var columns = _props6.columns;
            var record = _props6.record;
            var height = _props6.height;
            var visible = _props6.visible;
            var index = _props6.index;
            var expandIconColumnIndex = _props6.expandIconColumnIndex;
            var expandIconAsCell = _props6.expandIconAsCell;
            var expanded = _props6.expanded;
            var expandRowByClick = _props6.expandRowByClick;
            var expandable = _props6.expandable;
            var onExpand = _props6.onExpand;
            var needIndentSpaced = _props6.needIndentSpaced;
            var indent = _props6.indent;
            var indentSize = _props6.indentSize;
            var className = this.props.className;


            if (this.state.hovered) {
                className += " " + prefixCls + "-hover";
            }

            var cells = [];

            var expandIcon = _react2.default.createElement(_ExpandIcon2.default, {
                expandable: expandable,
                prefixCls: prefixCls,
                onExpand: onExpand,
                needIndentSpaced: needIndentSpaced,
                expanded: expanded,
                record: record
            });

            for (var i = 0; i < columns.length; i++) {
                if (expandIconAsCell && i === 0) {
                    cells.push(_react2.default.createElement(
                        "td",
                        {
                            className: prefixCls + "-expand-icon-cell",
                            key: "rc-table-expand-icon-cell"
                        },
                        expandIcon
                    ));
                }
                var isColumnHaveExpandIcon = expandIconAsCell || expandRowByClick ? false : i === expandIconColumnIndex;
                cells.push(_react2.default.createElement(_TableCell2.default, {
                    prefixCls: prefixCls,
                    record: record,
                    indentSize: indentSize,
                    indent: indent,
                    index: index,
                    column: columns[i],
                    key: columns[i].key,
                    expandIcon: isColumnHaveExpandIcon ? expandIcon : null
                }));
            }
            var style = { height: height };
            if (!visible) {
                style.display = "none";
            }

            return _react2.default.createElement(
                "tr",
                {
                    onClick: this.handleRowClick,
                    onDoubleClick: this.handleRowDoubleClick,
                    onMouseEnter: this.handleMouseEnter,
                    onMouseLeave: this.handleMouseLeave,
                    className: prefixCls + " " + className + " " + prefixCls + "-level-" + indent,
                    style: style
                },
                cells
            );
        }
    }]);

    return TableRow;
}(_react2.default.Component);

TableRow.propTypes = {
    onDestroy: _react.PropTypes.func,
    onRowClick: _react.PropTypes.func,
    onRowDoubleClick: _react.PropTypes.func,
    record: _react.PropTypes.object,
    prefixCls: _react.PropTypes.string,
    expandIconColumnIndex: _react.PropTypes.number,
    onHover: _react.PropTypes.func,
    columns: _react.PropTypes.array,
    height: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
    visible: _react.PropTypes.bool,
    index: _react.PropTypes.number,
    hoverKey: _react.PropTypes.any,
    expanded: _react.PropTypes.bool,
    expandable: _react.PropTypes.any,
    onExpand: _react.PropTypes.func,
    needIndentSpaced: _react.PropTypes.bool,
    className: _react.PropTypes.string,
    indent: _react.PropTypes.number,
    indentSize: _react.PropTypes.number,
    expandIconAsCell: _react.PropTypes.bool,
    expandRowByClick: _react.PropTypes.bool,
    store: _react.PropTypes.object.isRequired
};

TableRow.defaultProps = {
    onRowClick: function onRowClick() {},
    onRowDoubleClick: function onRowDoubleClick() {},
    onDestroy: function onDestroy() {},

    expandIconColumnIndex: 0,
    expandRowByClick: false,
    onHover: function onHover() {}
};

exports.default = TableRow;

},{"./ExpandIcon":186,"./TableCell":189,"react":"react"}],192:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = createStore;
function createStore(initialState) {
    var state = initialState;
    var listeners = [];

    var setState = function setState(partial) {
        state = Object.assign({}, state, partial);
        for (var i = 0; i < listeners.length; i++) {
            listeners[i]();
        }
    };

    var getState = function getState() {
        return state;
    };

    var subscribe = function subscribe(listener) {
        listeners.push(listener);

        return function unsubscribe() {
            var index = listeners.indexOf(listener);
            listeners.splice(index, 1);
        };
    };

    return {
        setState: setState,
        getState: getState,
        subscribe: subscribe
    };
}

},{}],193:[function(require,module,exports){
"use strict";

var Table = require("./Table");
var Column = require("./Column");
var ColumnGroup = require("./ColumnGroup");

Table.Column = Column;
Table.ColumnGroup = ColumnGroup;

module.exports = Table;

},{"./Column":183,"./ColumnGroup":184,"./Table":188}],194:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
/* eslint-disable */
function returnFalse() {
    return false;
}

function returnTrue() {
    return true;
}

function EventBaseObject() {
    // this.timeStamp = Date.now();
    // this.target = undefined;
    // this.currentTarget = undefined;
}

EventBaseObject.prototype = {
    isEventObject: 1,

    constructor: function constructor() {
        undefined.timeStamp = Date.now();
        undefined.target = undefined;
        undefined.currentTarget = undefined;
    },

    isDefaultPrevented: returnFalse,

    isPropagationStopped: returnFalse,

    isImmediatePropagationStopped: returnFalse,

    preventDefault: function preventDefault() {
        this.isDefaultPrevented = returnTrue;
    },
    stopPropagation: function stopPropagation() {
        this.isPropagationStopped = returnTrue;
    },
    stopImmediatePropagation: function stopImmediatePropagation() {
        this.isImmediatePropagationStopped = returnTrue;
        // fixed 1.2
        // call stopPropagation implicitly
        this.stopPropagation();
    },
    halt: function halt(immediate) {
        if (immediate) {
            this.stopImmediatePropagation();
        } else {
            this.stopPropagation();
        }
        this.preventDefault();
    }
};

exports.default = EventBaseObject;

},{}],195:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _EventBaseObject = require('./EventBaseObject');

var _EventBaseObject2 = _interopRequireDefault(_EventBaseObject);

var _objectAssign = require('./object-assign');

var _objectAssign2 = _interopRequireDefault(_objectAssign);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable */
var TRUE = true;
var FALSE = false;
var commonProps = ['altKey', 'bubbles', 'cancelable', 'ctrlKey', 'currentTarget', 'eventPhase', 'metaKey', 'shiftKey', 'target', 'timeStamp', 'view', 'type'];

var isNullOrUndefined = function isNullOrUndefined(w) {
    return w === null || w === undefined;
};

var eventNormalizers = [{
    reg: /^key/,
    props: ['char', 'charCode', 'key', 'keyCode', 'which'],
    fix: function fix(event, nativeEvent) {
        if (isNullOrUndefined(event.which)) {
            event.which = !isNullOrUndefined(nativeEvent.charCode) ? nativeEvent.charCode : nativeEvent.keyCode;
        }

        // add metaKey to non-Mac browsers (use ctrl for PC 's and Meta for Macs)
        if (event.metaKey === undefined) {
            event.metaKey = event.ctrlKey;
        }
    }
}, {
    reg: /^touch/,
    props: ['touches', 'changedTouches', 'targetTouches']
}, {
    reg: /^hashchange$/,
    props: ['newURL', 'oldURL']
}, {
    reg: /^gesturechange$/i,
    props: ['rotation', 'scale']
}, {
    reg: /^(mousewheel|DOMMouseScroll)$/,
    props: [],
    fix: function fix(event, nativeEvent) {
        var deltaX = void 0;
        var deltaY = void 0;
        var delta = void 0;
        var wheelDelta = nativeEvent.wheelDelta;
        var axis = nativeEvent.axis;
        var wheelDeltaY = nativeEvent.wheelDeltaY;
        var wheelDeltaX = nativeEvent.wheelDeltaX;
        var detail = nativeEvent.detail;

        // ie/webkit
        if (wheelDelta) {
            delta = wheelDelta / 120;
        }

        // gecko
        if (detail) {
            // press control e.detail == 1 else e.detail == 3
            delta = 0 - (detail % 3 === 0 ? detail / 3 : detail);
        }

        // Gecko
        if (axis !== undefined) {
            if (axis === event.HORIZONTAL_AXIS) {
                deltaY = 0;
                deltaX = 0 - delta;
            } else if (axis === event.VERTICAL_AXIS) {
                deltaX = 0;
                deltaY = delta;
            }
        }

        // Webkit
        if (wheelDeltaY !== undefined) {
            deltaY = wheelDeltaY / 120;
        }
        if (wheelDeltaX !== undefined) {
            deltaX = -1 * wheelDeltaX / 120;
        }

        // 默认 deltaY (ie)
        if (!deltaX && !deltaY) {
            deltaY = delta;
        }

        if (deltaX !== undefined) {
            /**
             * deltaX of mousewheel event
             * @property deltaX
             * @member Event.DomEvent.Object
             */
            event.deltaX = deltaX;
        }

        if (deltaY !== undefined) {
            /**
             * deltaY of mousewheel event
             * @property deltaY
             * @member Event.DomEvent.Object
             */
            event.deltaY = deltaY;
        }

        if (delta !== undefined) {
            /**
             * delta of mousewheel event
             * @property delta
             * @member Event.DomEvent.Object
             */
            event.delta = delta;
        }
    }
}, {
    reg: /^mouse|contextmenu|click|mspointer|(^DOMMouseScroll$)/i,
    props: ['buttons', 'clientX', 'clientY', 'button', 'offsetX', 'relatedTarget', 'which', 'fromElement', 'toElement', 'offsetY', 'pageX', 'pageY', 'screenX', 'screenY'],
    fix: function fix(event, nativeEvent) {
        var eventDoc = void 0;
        var doc = void 0;
        var body = void 0;
        var target = event.target;
        var button = nativeEvent.button;

        // Calculate pageX/Y if missing and clientX/Y available
        if (target && isNullOrUndefined(event.pageX) && !isNullOrUndefined(nativeEvent.clientX)) {
            eventDoc = target.ownerDocument || document;
            doc = eventDoc.documentElement;
            body = eventDoc.body;
            event.pageX = nativeEvent.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);
            event.pageY = nativeEvent.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);
        }

        // which for click: 1 === left; 2 === middle; 3 === right
        // do not use button
        if (!event.which && button !== undefined) {
            if (button & 1) {
                event.which = 1;
            } else if (button & 2) {
                event.which = 3;
            } else if (button & 4) {
                event.which = 2;
            } else {
                event.which = 0;
            }
        }

        // add relatedTarget, if necessary
        if (!event.relatedTarget && event.fromElement) {
            event.relatedTarget = event.fromElement === target ? event.toElement : event.fromElement;
        }

        return event;
    }
}];

var retTrue = function retTrue() {
    return TRUE;
};

var retFalse = function retFalse() {
    return FALSE;
};

function DomEventObject(nativeEvent) {
    var type = nativeEvent.type;

    var isNative = typeof nativeEvent.stopPropagation === 'function' || typeof nativeEvent.cancelBubble === 'boolean';

    _EventBaseObject2.default.call(this);

    this.nativeEvent = nativeEvent;

    // in case dom event has been mark as default prevented by lower dom node
    var isDefaultPrevented = retFalse;
    if ('defaultPrevented' in nativeEvent) {
        isDefaultPrevented = nativeEvent.defaultPrevented ? retTrue : retFalse;
    } else if ('getPreventDefault' in nativeEvent) {
        // https://bugzilla.mozilla.org/show_bug.cgi?id=691151
        isDefaultPrevented = nativeEvent.getPreventDefault() ? retTrue : retFalse;
    } else if ('returnValue' in nativeEvent) {
        isDefaultPrevented = nativeEvent.returnValue === FALSE ? retTrue : retFalse;
    }

    this.isDefaultPrevented = isDefaultPrevented;

    var fixFns = [];
    var fixFn = void 0;
    var l = void 0;
    var prop = void 0;
    var props = commonProps.concat();

    eventNormalizers.forEach(function (normalizer) {
        if (type.match(normalizer.reg)) {
            props = props.concat(normalizer.props);
            if (normalizer.fix) {
                fixFns.push(normalizer.fix);
            }
        }
    });

    l = props.length;

    // clone properties of the original event object
    while (l) {
        prop = props[--l];
        this[prop] = nativeEvent[prop];
    }

    // fix target property, if necessary
    if (!this.target && isNative) {
        this.target = nativeEvent.srcElement || document; // srcElement might not be defined either
    }

    // check if target is a text node (safari)
    if (this.target && this.target.nodeType === 3) {
        this.target = this.target.parentNode;
    }

    l = fixFns.length;

    while (l) {
        fixFn = fixFns[--l];
        fixFn(this, nativeEvent);
    }

    this.timeStamp = nativeEvent.timeStamp || Date.now();
};

var EventBaseObjectProto = _EventBaseObject2.default.prototype;

(0, _objectAssign2.default)(DomEventObject.prototype, EventBaseObjectProto, {
    constructor: DomEventObject,

    preventDefault: function preventDefault() {
        var e = this.nativeEvent;

        // if preventDefault exists run it on the original event
        if (e.preventDefault) {
            e.preventDefault();
        } else {
            // otherwise set the returnValue property of the original event to FALSE (IE)
            e.returnValue = FALSE;
        }

        EventBaseObjectProto.preventDefault.call(this);
    },
    stopPropagation: function stopPropagation() {
        var e = this.nativeEvent;

        // if stopPropagation exists run it on the original event
        if (e.stopPropagation) {
            e.stopPropagation();
        } else {
            // otherwise set the cancelBubble property of the original event to TRUE (IE)
            e.cancelBubble = TRUE;
        }

        EventBaseObjectProto.stopPropagation.call(this);
    }
});

exports.default = DomEventObject;

},{"./EventBaseObject":194,"./object-assign":197}],196:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _EventObject = require('./EventObject');

var _EventObject2 = _interopRequireDefault(_EventObject);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable */
var addDOMEventListener = function addDOMEventListener(target, eventType, callback) {
    function wrapCallback(e) {
        var ne = new _EventObject2.default(e);
        callback.call(target, ne);
    }

    if (target.addEventListener) {
        target.addEventListener(eventType, wrapCallback, false);
        return {
            remove: function remove() {
                target.removeEventListener(eventType, wrapCallback, false);
            }
        };
    } else if (target.attachEvent) {
        target.attachEvent('on' + eventType, wrapCallback);
        return {
            remove: function remove() {
                target.detachEvent('on' + eventType, wrapCallback);
            }
        };
    }
};

var addEventListener = function addEventListener(target, eventType, cb) {
    var callback = _reactDom2.default.unstable_batchedUpdates ? function run(e) {
        _reactDom2.default.unstable_batchedUpdates(cb, e);
    } : cb;
    return addDOMEventListener(target, eventType, callback);
};

exports.default = addEventListener;

},{"./EventObject":195,"react-dom":"react-dom"}],197:[function(require,module,exports){
'use strict';

/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;
/* eslint-disable */
function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc'); // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};

},{}],198:[function(require,module,exports){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/* eslint-disable */
(function (root, factory) {
    'use strict';

    /*istanbul ignore next:cant test*/

    if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) === 'object' && _typeof(module.exports) === 'object') {
        module.exports = factory();
    } else if (typeof define === 'function' && define.amd) {
        // AMD. Register as an anonymous module.
        define([], factory);
    } else {
        // Browser globals
        root.objectPath = factory();
    }
})(undefined, function () {
    'use strict';

    var toStr = Object.prototype.toString;
    function hasOwnProperty(obj, prop) {
        if (obj == null) {
            return false;
        }
        //to handle objects with null prototypes (too edge case?)
        return Object.prototype.hasOwnProperty.call(obj, prop);
    }

    function isEmpty(value) {
        if (!value) {
            return true;
        }
        if (isArray(value) && value.length === 0) {
            return true;
        } else if (typeof value !== 'string') {
            for (var i in value) {
                if (hasOwnProperty(value, i)) {
                    return false;
                }
            }
            return true;
        }
        return false;
    }

    function toString(type) {
        return toStr.call(type);
    }

    function isObject(obj) {
        return (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && toString(obj) === "[object Object]";
    }

    var isArray = Array.isArray || function (obj) {
        /*istanbul ignore next:cant test*/
        return toStr.call(obj) === '[object Array]';
    };

    function isBoolean(obj) {
        return typeof obj === 'boolean' || toString(obj) === '[object Boolean]';
    }

    function getKey(key) {
        var intKey = parseInt(key);
        if (intKey.toString() === key) {
            return intKey;
        }
        return key;
    }

    function factory(options) {
        options = options || {};

        var objectPath = function objectPath(obj) {
            return Object.keys(objectPath).reduce(function (proxy, prop) {
                if (prop === 'create') {
                    return proxy;
                }

                /*istanbul ignore else*/
                if (typeof objectPath[prop] === 'function') {
                    proxy[prop] = objectPath[prop].bind(objectPath, obj);
                }

                return proxy;
            }, {});
        };

        function getShallowProperty(obj, prop) {
            if (options.includeInheritedProps || typeof prop === 'number' && Array.isArray(obj) || hasOwnProperty(obj, prop)) {
                return obj[prop];
            }
        }

        function set(obj, path, value, doNotReplace) {
            if (typeof path === 'number') {
                path = [path];
            }
            if (!path || path.length === 0) {
                return obj;
            }
            if (typeof path === 'string') {
                return set(obj, path.split('.').map(getKey), value, doNotReplace);
            }
            var currentPath = path[0];
            var currentValue = getShallowProperty(obj, currentPath);
            if (path.length === 1) {
                if (currentValue === void 0 || !doNotReplace) {
                    obj[currentPath] = value;
                }
                return currentValue;
            }

            if (currentValue === void 0) {
                //check if we assume an array
                if (typeof path[1] === 'number') {
                    obj[currentPath] = [];
                } else {
                    obj[currentPath] = {};
                }
            }

            return set(obj[currentPath], path.slice(1), value, doNotReplace);
        }

        objectPath.has = function (obj, path) {
            if (typeof path === 'number') {
                path = [path];
            } else if (typeof path === 'string') {
                path = path.split('.');
            }

            if (!path || path.length === 0) {
                return !!obj;
            }

            for (var i = 0; i < path.length; i++) {
                var j = getKey(path[i]);

                if (typeof j === 'number' && isArray(obj) && j < obj.length || (options.includeInheritedProps ? j in Object(obj) : hasOwnProperty(obj, j))) {
                    obj = obj[j];
                } else {
                    return false;
                }
            }

            return true;
        };

        objectPath.ensureExists = function (obj, path, value) {
            return set(obj, path, value, true);
        };

        objectPath.set = function (obj, path, value, doNotReplace) {
            return set(obj, path, value, doNotReplace);
        };

        objectPath.insert = function (obj, path, value, at) {
            var arr = objectPath.get(obj, path);
            at = ~~at;
            if (!isArray(arr)) {
                arr = [];
                objectPath.set(obj, path, arr);
            }
            arr.splice(at, 0, value);
        };

        objectPath.empty = function (obj, path) {
            if (isEmpty(path)) {
                return void 0;
            }
            if (obj == null) {
                return void 0;
            }

            var value, i;
            if (!(value = objectPath.get(obj, path))) {
                return void 0;
            }

            if (typeof value === 'string') {
                return objectPath.set(obj, path, '');
            } else if (isBoolean(value)) {
                return objectPath.set(obj, path, false);
            } else if (typeof value === 'number') {
                return objectPath.set(obj, path, 0);
            } else if (isArray(value)) {
                value.length = 0;
            } else if (isObject(value)) {
                for (i in value) {
                    if (hasOwnProperty(value, i)) {
                        delete value[i];
                    }
                }
            } else {
                return objectPath.set(obj, path, null);
            }
        };

        objectPath.push = function (obj, path /*, values */) {
            var arr = objectPath.get(obj, path);
            if (!isArray(arr)) {
                arr = [];
                objectPath.set(obj, path, arr);
            }

            arr.push.apply(arr, Array.prototype.slice.call(arguments, 2));
        };

        objectPath.coalesce = function (obj, paths, defaultValue) {
            var value;

            for (var i = 0, len = paths.length; i < len; i++) {
                if ((value = objectPath.get(obj, paths[i])) !== void 0) {
                    return value;
                }
            }

            return defaultValue;
        };

        objectPath.get = function (obj, path, defaultValue) {
            if (typeof path === 'number') {
                path = [path];
            }
            if (!path || path.length === 0) {
                return obj;
            }
            if (obj == null) {
                return defaultValue;
            }
            if (typeof path === 'string') {
                return objectPath.get(obj, path.split('.'), defaultValue);
            }

            var currentPath = getKey(path[0]);
            var nextObj = getShallowProperty(obj, currentPath);
            if (nextObj === void 0) {
                return defaultValue;
            }

            if (path.length === 1) {
                return nextObj;
            }

            return objectPath.get(obj[currentPath], path.slice(1), defaultValue);
        };

        objectPath.del = function del(obj, path) {
            if (typeof path === 'number') {
                path = [path];
            }

            if (obj == null) {
                return obj;
            }

            if (isEmpty(path)) {
                return obj;
            }
            if (typeof path === 'string') {
                return objectPath.del(obj, path.split('.'));
            }

            var currentPath = getKey(path[0]);
            var currentVal = getShallowProperty(obj, currentPath);
            if (currentVal == null) {
                return currentVal;
            }

            if (path.length === 1) {
                if (isArray(obj)) {
                    obj.splice(currentPath, 1);
                } else {
                    delete obj[currentPath];
                }
            } else {
                if (obj[currentPath] !== void 0) {
                    return objectPath.del(obj[currentPath], path.slice(1));
                }
            }

            return obj;
        };

        return objectPath;
    }

    var mod = factory();
    mod.create = factory;
    mod.withInheritedProps = factory({ includeInheritedProps: true });
    return mod;
});

},{}],199:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/* eslint-disable */
var fetchKeys = require('lodash.keys');

var shallowEqual = function shallowEqual(objA, objB, compare, compareContext) {
    var ret = compare ? compare.call(compareContext, objA, objB) : void 0;

    if (ret !== void 0) {
        return !!ret;
    }

    if (objA === objB) {
        return true;
    }

    if ((typeof objA === 'undefined' ? 'undefined' : _typeof(objA)) !== 'object' || objA === null || (typeof objB === 'undefined' ? 'undefined' : _typeof(objB)) !== 'object' || objB === null) {
        return false;
    }

    var keysA = fetchKeys(objA);
    var keysB = fetchKeys(objB);

    var len = keysA.length;
    if (len !== keysB.length) {
        return false;
    }

    compareContext = compareContext || null;

    // Test for A's keys different from B.
    var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);
    for (var i = 0; i < len; i++) {
        var key = keysA[i];
        if (!bHasOwnProperty(key)) {
            return false;
        }
        var valueA = objA[key];
        var valueB = objB[key];

        var _ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;
        if (_ret === false || _ret === void 0 && valueA !== valueB) {
            return false;
        }
    }

    return true;
};

exports.default = shallowEqual;

},{"lodash.keys":73}],200:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
var scrollbarWidth = void 0;

// Measure scrollbar width for padding body during modal show/hide
var scrollbarMeasure = {
    position: "absolute",
    top: "-9999px",
    width: "50px",
    height: "50px",
    overflow: "scroll"
};

var measureScrollbar = exports.measureScrollbar = function measureScrollbar() {
    if (typeof document === "undefined" || typeof window === "undefined") {
        return 0;
    }
    if (scrollbarWidth) {
        return scrollbarWidth;
    }
    var scrollDiv = document.createElement("div");
    for (var scrollProp in scrollbarMeasure) {
        if (scrollbarMeasure.hasOwnProperty(scrollProp)) {
            scrollDiv.style[scrollProp] = scrollbarMeasure[scrollProp];
        }
    }
    document.body.appendChild(scrollDiv);
    var width = scrollDiv.offsetWidth - scrollDiv.clientWidth;
    document.body.removeChild(scrollDiv);
    scrollbarWidth = width;
    return scrollbarWidth;
};

/* eslint "consistent-this": 0 */
/* eslint "no-invalid-this": 0 */
var debounce = exports.debounce = function debounce(func, wait, immediate) {
    var timeout = void 0;
    return function debounceFunc() {
        var context = this;
        var args = arguments;
        if (args[0] && args[0].persist) {
            args[0].persist();
        }
        var later = function later() {
            timeout = null;
            if (!immediate) {
                func.apply(context, args);
            }
        };
        var callNow = immediate && !timeout;
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
        if (callNow) {
            func.apply(context, args);
        }
    };
};

},{}],201:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _index = require('./React-Table/index.js');

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var styles = require('./style.less'); //eslint-disable-line 
exports.default = _index2.default;

},{"./React-Table/index.js":193,"./style.less":202}],202:[function(require,module,exports){
module.exports = {"Title-Page":"neptune_Title-Page_yv95g","Title-Page-Light":"neptune_Title-Page-Light_yv95g","Title-Section-Primary":"neptune_Title-Section-Primary_yv95g","Title-Section-Primary-Light":"neptune_Title-Section-Primary-Light_yv95g","TITLE-SUBTITLE":"neptune_TITLE-SUBTITLE_yv95g","Title-Section-Secondary":"neptune_Title-Section-Secondary_yv95g","TITLE-MODULE":"neptune_TITLE-MODULE_yv95g","LABEL-STANDARD":"neptune_LABEL-STANDARD_yv95g","LABEL-STANDARD-SEMIBOLD":"neptune_LABEL-STANDARD-SEMIBOLD_yv95g","LABEL-ATTRIBUTION":"neptune_LABEL-ATTRIBUTION_yv95g","LABEL-ATTRIBUTION-MA":"neptune_LABEL-ATTRIBUTION-MA_yv95g","LABEL-ATTRIBUTION-MIS":"neptune_LABEL-ATTRIBUTION-MIS_yv95g","Label-Footnote":"neptune_Label-Footnote_yv95g","Rating":"neptune_Rating_yv95g","Header-Primary":"neptune_Header-Primary_yv95g","Body-Primary":"neptune_Body-Primary_yv95g","Header-Secondary":"neptune_Header-Secondary_yv95g","Header-Secondary-Bold":"neptune_Header-Secondary-Bold_yv95g","Body-Secondary":"neptune_Body-Secondary_yv95g","TABLE-SECTION":"neptune_TABLE-SECTION_yv95g","Header-Tertiary":"neptune_Header-Tertiary_yv95g","Header-Tertiary-Bold":"neptune_Header-Tertiary-Bold_yv95g","Body-Tertiary":"neptune_Body-Tertiary_yv95g","Body-Tertiary-Med":"neptune_Body-Tertiary-Med_yv95g","Body-Text-Prompt":"neptune_Body-Text-Prompt_yv95g","Link-DkBlue":"neptune_Link-DkBlue_yv95g","LINK-GOLD":"neptune_LINK-GOLD_yv95g","LINK-GREY":"neptune_LINK-GREY_yv95g","LABEL-SIDENAV-TITLE":"neptune_LABEL-SIDENAV-TITLE_yv95g","MIS-BLUE":"neptune_MIS-BLUE_yv95g","MA-BLUE":"neptune_MA-BLUE_yv95g","MOODYS-BLUE":"neptune_MOODYS-BLUE_yv95g","HIGHLIGHT-BLUE":"neptune_HIGHLIGHT-BLUE_yv95g","GOLD":"neptune_GOLD_yv95g","GREY-1":"neptune_GREY-1_yv95g","GREY-2":"neptune_GREY-2_yv95g","GREY-3":"neptune_GREY-3_yv95g","GREY-4":"neptune_GREY-4_yv95g","BLACK":"neptune_BLACK_yv95g","RED":"neptune_RED_yv95g","GREEN":"neptune_GREEN_yv95g","icon_down_arrow":"neptune_icon_down_arrow_yv95g","icon_up_arrow":"neptune_icon_up_arrow_yv95g","icon_warning_icon":"neptune_icon_warning_icon_yv95g","icon_select_arrows":"neptune_icon_select_arrows_yv95g","icon_triangle_down":"neptune_icon_triangle_down_yv95g","icon_triangle_up":"neptune_icon_triangle_up_yv95g","icon_x_icon":"neptune_icon_x_icon_yv95g","icon_right_arrow":"neptune_icon_right_arrow_yv95g","MIS-BLUE-FONT":"neptune_MIS-BLUE-FONT_yv95g","MIS-BLUE-BG":"neptune_MIS-BLUE-BG_yv95g","MIS-BLUE-BORDER":"neptune_MIS-BLUE-BORDER_yv95g","MA-BLUE-FONT":"neptune_MA-BLUE-FONT_yv95g","MA-BLUE-BG":"neptune_MA-BLUE-BG_yv95g","MA-BLUE-BORDER":"neptune_MA-BLUE-BORDER_yv95g","MOODYS-BLUE-FONT":"neptune_MOODYS-BLUE-FONT_yv95g","MOODYS-BLUE-BG":"neptune_MOODYS-BLUE-BG_yv95g","MOODYS-BLUE-BORDER":"neptune_MOODYS-BLUE-BORDER_yv95g","HIGHLIGHT-BLUE-FONT":"neptune_HIGHLIGHT-BLUE-FONT_yv95g","HIGHLIGHT-BLUE-BG":"neptune_HIGHLIGHT-BLUE-BG_yv95g","HIGHLIGHT-BLUE-BORDER":"neptune_HIGHLIGHT-BLUE-BORDER_yv95g","GOLD-FONT":"neptune_GOLD-FONT_yv95g","GOLD-BG":"neptune_GOLD-BG_yv95g","GOLD-BORDER":"neptune_GOLD-BORDER_yv95g","GREY-1-FONT":"neptune_GREY-1-FONT_yv95g","GREY-1-BG":"neptune_GREY-1-BG_yv95g","GREY-1-BORDER":"neptune_GREY-1-BORDER_yv95g","GREY-2-FONT":"neptune_GREY-2-FONT_yv95g","GREY-2-BG":"neptune_GREY-2-BG_yv95g","GREY-2-BORDER":"neptune_GREY-2-BORDER_yv95g","GREY-3-FONT":"neptune_GREY-3-FONT_yv95g","GREY-3-BG":"neptune_GREY-3-BG_yv95g","GREY-3-BORDER":"neptune_GREY-3-BORDER_yv95g","GREY-4-FONT":"neptune_GREY-4-FONT_yv95g","GREY-4-BG":"neptune_GREY-4-BG_yv95g","GREY-4-BORDER":"neptune_GREY-4-BORDER_yv95g","BLACK-FONT":"neptune_BLACK-FONT_yv95g","BLACK-BG":"neptune_BLACK-BG_yv95g","BLACK-BORDER":"neptune_BLACK-BORDER_yv95g","RED-FONT":"neptune_RED-FONT_yv95g","RED-BG":"neptune_RED-BG_yv95g","RED-BORDER":"neptune_RED-BORDER_yv95g","GREEN-FONT":"neptune_GREEN-FONT_yv95g","GREEN-BG":"neptune_GREEN-BG_yv95g","GREEN-BORDER":"neptune_GREEN-BORDER_yv95g","moveLeftIn":"neptune_moveLeftIn_yv95g","moveRightOut":"neptune_moveRightOut_yv95g"}
},{}],203:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

require('./style.css');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Spinner = function (_React$Component) {
    _inherits(Spinner, _React$Component);

    function Spinner(props) {
        _classCallCheck(this, Spinner);

        var _this = _possibleConstructorReturn(this, (Spinner.__proto__ || Object.getPrototypeOf(Spinner)).call(this, props));

        _this.spinner = null;
        _this.style = {
            label: {
                color: 'rgb(205,156,84)',
                fontSize: '11px',
                fontWeight: '300',
                marginTop: '3px',
                textAlign: 'center',
                textTransform: 'uppercase'
            },
            spinnerContainer: {
                WebkitAnimation: 'spin infinite linear',
                WebkitAnimationDuration: '1s',
                animation: 'spin infinite linear',
                animationDuration: '1s',
                height: '50px',
                marginLeft: 'auto',
                marginRight: 'auto',
                width: '50px'
            }
        };
        _this.draw = _this.draw.bind(_this);
        _this.setSpinner = _this.setSpinner.bind(_this);
        return _this;
    }

    _createClass(Spinner, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            if (this.props.size) {
                this.style.spinnerContainer.height = this.props.size + 'px';
                this.style.spinnerContainer.width = this.props.size + 'px';
            }
            if (this.props.speed) {
                this.style.spinnerContainer.WebkitAnimationDuration = this.props.speed + 's';
                this.style.spinnerContainer.animationDuration = this.props.speed + 's';
            }
            if (this.props.color) {
                this.style.label.color = this.props.color;
            }
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.draw(this.props.size / 2 || 25, this.props.color || 'rgb(205,156,84)', this.props.lineWidth || 1);
        }
    }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            if (nextProps.size !== this.props.size || nextProps.color !== this.props.color) {
                this.style.spinnerContainer.height = nextProps.size + 'px';
                this.style.spinnerContainer.width = nextProps.size + 'px';
                this.style.label.color = nextProps.color;
                return true;
            }
            if (nextProps.speed !== this.props.speed) {
                this.style.spinnerContainer.WebkitAnimationDuration = nextProps.speed + 's';
                this.style.spinnerContainer.animationDuration = nextProps.speed + 's';
                return true;
            }

            return false;
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate(nextProps) {
            this.draw(nextProps.size / 2 || 25, nextProps.color || 'rgb(205,156,84)', nextProps.lineWidth || 1);
        }
    }, {
        key: 'draw',
        value: function draw(size, color, lineWidth) {
            // eslint-disable-line max-statements
            // color: rgb(255,255,255)
            var colorPerfix = color.replace('rgb', 'rgba').replace(')', '');
            var canvas = this.spinner;
            var ctx = canvas.getContext('2d');
            var trans = 1;
            for (var i = 0; i < 20; i++) {
                var record = Math.PI / 10;
                var step = 1 / 40;
                ctx.beginPath();
                ctx.lineWidth = lineWidth;
                ctx.arc(size, size, size - 2, i * record, (i + 1) * record, false);
                var gradent = ctx.createLinearGradient(0, 0, 100, 100);
                gradent.addColorStop(0, colorPerfix + ',' + trans + ')');
                trans -= step;
                gradent.addColorStop(1, colorPerfix + ',' + trans + ')');
                trans -= step;
                ctx.strokeStyle = gradent;
                ctx.stroke();
            }
        }
    }, {
        key: 'setSpinner',
        value: function setSpinner(cv) {
            this.spinner = cv;
        }
    }, {
        key: 'render',
        value: function render() {
            return React.createElement(
                'div',
                { style: this.props.style, className: this.props.className },
                React.createElement(
                    'div',
                    { style: this.style.spinnerContainer },
                    React.createElement('canvas', { ref: this.setSpinner })
                ),
                React.createElement(
                    'p',
                    { style: this.props.fontStyle ? Object.assign({}, this.style.label, this.props.fontStyle) : this.style.label },
                    this.props.children || 'loading'
                )
            );
        }
    }]);

    return Spinner;
}(React.Component);

exports.default = Spinner;

},{"./style.css":204,"react":"react"}],204:[function(require,module,exports){
arguments[4][3][0].apply(exports,arguments)
},{"dup":3}],205:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/* eslint-disable */
var $ = require('jquery');
var dataTables = require('datatables.net');
var dataTablesFixedColumns = require('datatables.net-fixedcolumns');
var dataTablesFixedHeader = require('datatables.net-fixedheader');
var dataTablesScroller = require('datatables.net-scroller');
var Draggable = require('./draggable').default;
var FixedHeader = require('./FixedHeader').default;
var RowGrouping = require('./RowGrouping').default;
var _ = require('lodash');

/**
 * This class wraps the DataTables.net table component. The idea is to not directly expose DataTables to consumers, so
 * later on if decide to swap out a different table component, the consumer facing API does not have to change.
 */
var DataTableWrapper = function (_React$Component) {
    _inherits(DataTableWrapper, _React$Component);

    function DataTableWrapper(props) {
        _classCallCheck(this, DataTableWrapper);

        var _this = _possibleConstructorReturn(this, (DataTableWrapper.__proto__ || Object.getPrototypeOf(DataTableWrapper)).call(this, props));

        _this.state = {};
        _this.nodes = []; //collection of react nodes we render into cells.
        return _this;
    }

    _createClass(DataTableWrapper, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.initialize();
            if (this.props.isScrollTable) {
                //Added because SZ change below is breaking our code!!
                //PLEASE add new code only conditionally.
                this.insertGroupTagAttr(this);
            }
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            this.destroy(true);
            $(window).off('scroll');
            $(window).off('resize');
            $(window).off('click');
            $('div.dataTables_scrollBody').off('scroll');
        }
    }, {
        key: 'getTableDomNode',
        value: function getTableDomNode() {
            if (!this.mainTable) {
                var node = _reactDom2.default.findDOMNode(this);
                this.mainTable = $(node).children().first();
            }
            return this.mainTable;
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement('div', { ref: 'tableNode', className: 'neptuneTable', style: { position: 'relative' } });
        }
    }, {
        key: 'insertGroupTagAttr',
        value: function insertGroupTagAttr(component) {
            var $tableDomNode = $(this.getTableDomNode());
            var groupStr = $tableDomNode.find('.content .group:first').text();
            $tableDomNode.on('draw.dt', function () {
                $('.content tr').each(function () {
                    var ll = $(this).prev('.group').text().toString();
                    if (ll != '' && ll != groupStr) {
                        groupStr = ll;
                    }
                    $(this).attr('group', groupStr);
                });
                if (component.props.removeFirstGroupRow) {
                    (function () {
                        var initialGroupStr = $('.content .group').first().attr('group');
                        var groupHeadrs = $('.group').each(function () {
                            if ($(this).attr('group') == initialGroupStr) {
                                $(this).hide();
                            }
                        });
                    })();
                }
            });
        }
    }, {
        key: 'initialize',
        value: function initialize() {
            var _this2 = this;

            var options = Object.assign({ ajax: this.props.dataSource }, this.props);
            var columns = this.props.columns;

            var flatCols = [];
            var hasGroupedColumns = false,
                optionsColDefs = [];
            if (columns.length == 0) {
                return;
            }
            if (this._initialized) {
                this.destroy();
            }
            columns.map(function (col) {
                if (col.children && col.children.length > 0) {
                    flatCols = flatCols.concat(col.children);
                    hasGroupedColumns = true;
                } else {
                    flatCols.push(col);
                }
            });
            //Initialize default widths.
            flatCols.map(function (col) {
                if (!col.width) {
                    col.width = "200px";
                }
            });
            //DataTables need a table HTML rendered to initialize the columns. In this call, we do that.
            this.setColumns(columns, hasGroupedColumns);
            //This is the dom element (the table component)
            var $tableDomNode = $(this.getTableDomNode());
            options.flatCols = flatCols;
            delete options["columns"]; //we dont want to initialize from the columns object, we use the 
            //HTML to render. This is because API columns do not have support for column groups.
            if (this.props.leftLockedCount > 0) {
                if (this.props.rowGroupingField) {} else {
                    options.fixedColumns = {
                        leftColumns: this.props.leftLockedCount
                    };
                }
            }
            //simple option mapping.
            options.pageLength = this.props.pageLength;
            options.paging = this.props.enablePaging;
            options.searching = this.props.enableSearch;
            options.bInfo = this.props.enableShowTotalCount;
            if (this.props.enableDeferRender) {
                options.deferRender = true;
            }
            //setup scrolling options.
            var isHorizontalScroll = this.props.enableScroll || this.props.enableHorizontalScroll || this.props.leftLockedCount > 0;
            var isVerticalScroll = this.props.enableScroll || this.props.enableVerticalScroll;
            if (isHorizontalScroll) {
                options.scrollX = "100%";
                var columnWidth = 0;
                for (var i = 0; i < columns.length; i++) {
                    if (i > 0) {
                        if (columns[i].children && columns[i].children.length > 0) {
                            for (var j = 0; j < columns[i].children.length; j++) {
                                if (!columns[i].children[j].width) {
                                    continue;
                                }
                                if (columns[i].children[j].width.indexOf("px") !== -1) {
                                    columnWidth += Number.parseInt(columns[i].children[j].width.replace("px", ""));
                                } else {
                                    columnWidth += columns[i].children[j].width;
                                }
                            }
                        } else {
                            if (!columns[i].width) {
                                continue;
                            }
                            if (columns[i].width.indexOf("px") !== -1) {
                                columnWidth += Number.parseInt(columns[i].width.replace("px", ""));
                            } else {
                                columnWidth += columns[i].width;
                            }
                        }
                    }
                }
                options.scrollXInner = columnWidth + "px";
                options.scrollCollapse = true;
            }
            if (isVerticalScroll) {
                options.scrollY = this.props.height;
                options.scrollCollapse = true;
            }
            //row grouping involves setting up sorting, figuring out the colspans, and 
            //embedding trs and tds with appropriate colspans. 
            if (this.props.rowGroupingField) {
                this.rowGrouping = new RowGrouping(this, options, flatCols, optionsColDefs);
            }
            this.initializeDefaultSort(options, flatCols);
            //wire up cellHtmlCallback and cellRenderedCallback.
            flatCols.map(function (col) {
                if (col.cellHtmlCallback) {
                    optionsColDefs.push({
                        // The `data` parameter refers to the data for the cell (defined by the
                        // `data` option, which defaults to the column being worked with, in
                        // this case `data: 0`.
                        "render": function (data, type, row, meta) {
                            return this.cellHtmlCallback(data, type, row, meta, this);
                        }.bind(col),
                        "targets": flatCols.indexOf(col)
                    });
                }
                if (col.hidden) {
                    optionsColDefs.push({ "visible": false, "targets": flatCols.indexOf(col) }); //hide the grouping column
                }
                if (col.className) {
                    optionsColDefs.push({ "className": col.className, "targets": flatCols.indexOf(col) }); //set the className, if any
                }
                if (col.sortField) {
                    (function () {
                        var sortField = col.sortField;
                        //figure out how many inner columns
                        var sortCol = $.grep(flatCols, function (e) {
                            return (e.title || e.dataField) == sortField;
                        });
                        var sortIndex = flatCols.indexOf(sortCol[0]);
                        optionsColDefs.push({ "orderData": [sortIndex], "targets": flatCols.indexOf(col) });
                        optionsColDefs.push({ "visible": false, "targets": sortIndex }); //hide the sort column
                    })();
                }
                if (col.cellRenderedCallback) {
                    var callBack = col.cellRenderedCallback;
                    optionsColDefs.push({
                        "createdCell": function createdCell(td, cellData, rowData, row, col) {
                            callBack(td, cellData, rowData, row, col);
                        },
                        "targets": flatCols.indexOf(col)
                    });
                }
                if (col.type) {
                    optionsColDefs.push({ "type": col.type, "targets": flatCols.indexOf(col) });
                    if (col.type == "num") {
                        optionsColDefs.push({
                            // The `data` parameter refers to the data for the cell (defined by the
                            // `data` option, which defaults to the column being worked with, in
                            // this case `data: 0`.
                            "render": function (data, type, row, meta) {
                                if (type == "sort") {
                                    return isNaN(data) ? "" : parseFloat(data);
                                }
                                return data;
                            }.bind(col),
                            "targets": flatCols.indexOf(col)
                        });
                    }
                }
                optionsColDefs.push({ "width": col.width, "targets": flatCols.indexOf(col) });
                optionsColDefs.push({ "orderable": _this2.props.enableOrdering && !col.disableSort, "targets": flatCols.indexOf(col) });
            });
            if (optionsColDefs.length > 0) {
                options.columnDefs = optionsColDefs;
            }
            //wire up rowCreatedCallback
            options.rowCallback = function (row, data, index) {
                if (_this2.props.rowCreatedCallback) {
                    _this2.props.rowCreatedCallback(row, data, index);
                }
            };
            if (!$.fn.DataTable) {
                dataTables(window, $);
                dataTablesFixedColumns(window, $);
                dataTablesFixedHeader(window, $);
                dataTablesScroller(window, $);
            }
            if (!$.fn.scrollParent) {
                Draggable.register();
            }
            options.autoWidth = false; //dont try to figure out widths, we will enforce them.
            options.orderCellsTop = false;
            if (this.props.enableFixedHeader) {
                this.fixedHeader = new FixedHeader(this, options);
            }
            //Wire up headerCreatedCallback
            options.headerCallback = function (thead, data, start, end, display) {
                if (_this2.props.headerCreatedCallback) {
                    _this2.props.headerCreatedCallback(thead, data, start, end, display);
                }
            };
            var table = $tableDomNode.DataTable(options); // eslint-disable-line new-cap
            if (this.props.isScrollTable) {
                $('div.dataTables_scrollBody').scroll(function () {
                    $('.floatingRow').eq(1).scrollLeft($('div.dataTables_scrollBody').scrollLeft());
                    setTimeout(function () {
                        $('.neptuneTable').eq(0).find('table tbody').css('overflow', 'hidden').css('display', 'block').scrollTop($('div.dataTables_scrollBody').scrollTop()).find('tr td').eq(0).css('width', '220px');
                    }, 1);
                    // $(".dataTables_scrollHead").css('margin-left', '-1px');
                    $('.neptuneTable').eq(1).find("tr.group td").html("");
                    //$('.floatingRow').scrollLeft(parseInt($('div.dataTables_scrollBody').scrollTop()));
                });
            }
            var cellClickCallback = this.props.cellClickCallback;
            var onColumnSortCallback = this.props.onColumnSortCallback;
            this.dataTable = $tableDomNode.dataTable();
            this.DataTable = table;
            this.pendingPage = -1;
            var that = this;
            if (this.props.isLoading) {
                $tableDomNode.prepend("<div class='ajaxLoader'><img src='/dist/img/SpinnerMedium.gif'></div>");
            }
            $tableDomNode.on('click', 'th', function () {
                if (that.pendingPage > -1) {
                    var pendingPage = that.pendingPage;
                    table.page(pendingPage).draw(false);
                }
            });
            $tableDomNode.on('page.dt', function () {
                var pgInfo = table.page.info();
                that.pendingPage = pgInfo.page;
            });
            $tableDomNode.on('click', 'th', function () {
                if (onColumnSortCallback) {
                    var colIndex = table.column(this)[0][0];
                    onColumnSortCallback(colIndex);
                }
            });
            if (cellClickCallback) {
                $tableDomNode.on('click', 'td', function () {
                    var data = table.cell(this).data(); //td element data  
                    var rowIndex = table.row(this).index(); // Row index
                    var colIndex = table.cell(this).index().columnVisible; //visble column index
                    if (cellClickCallback) {
                        cellClickCallback(this, data, rowIndex, colIndex);
                    }
                });
            }
            this._initialized = true;
            //remove data-react-id on the cloned table components otherwise react chokes.
            if (this.props.leftLockedCount > 0 || this.props.isScrollTable) {
                var root = $tableDomNode.closest('.dataTables_wrapper');
                root.width(this.props.width);
                var cloned = root.find('.DTFC_Cloned');
                cloned.each(function (idx, el) {
                    $(el).removeAttr('data-reactid');
                });
                Draggable.initializeDraggableHandle(this, table);
            }
        }
    }, {
        key: 'initializeDefaultSort',
        value: function initializeDefaultSort(options, flatCols) {
            var defaultSortcolIndexes = void 0;
            // SH - ROWGROUPING orderFixed takes care of this.
            // if (this.props.rowGroupingField) {
            //     const dataField = this.props.rowGroupingField;
            //     const matchCol = $.grep(flatCols, function (e) { return (e.title || e.dataField) == dataField; });
            //     const colIndex = flatCols.indexOf(matchCol[0]);
            //     options.order = [[colIndex, 'asc']];
            // } else {
            // }
            options.order = [];
            if (Array.isArray(options.defaultSortField)) {
                var defaultSortCol = options.defaultSortField.map(function (defaultSortField) {
                    return flatCols.filter(function (flatcol) {
                        return (flatcol.headerText || flatcol.dataField) == defaultSortField;
                    })[0];
                });
                defaultSortcolIndexes = defaultSortCol.map(function (cul) {
                    return [flatCols.indexOf(cul), "asc"];
                });
                options.order = options.order.concat(defaultSortcolIndexes);
            } else if (typeof options.defaultSortField === "string" || options.defaultSortField instanceof String) {
                var _defaultSortCol = flatCols.filter(function (flatcol) {
                    return (flatcol.title || flatcol.dataField) == options.defaultSortField;
                })[0];
                defaultSortcolIndexes = [[flatCols.indexOf(_defaultSortCol), "asc"]];
                options.order = options.order.concat(defaultSortcolIndexes);
            }
        }
    }, {
        key: 'rebuildFloatingHeader',
        value: function rebuildFloatingHeader() {
            var $tableDomNode = $(this.getTableDomNode());
            var scroller = $tableDomNode.scrollParent();
            this.$floater.html("");
            scroller.trigger("scroll");
        }
    }, {
        key: 'adjustColumns',
        value: function adjustColumns() {
            $(window).trigger('resize');
            var dataTable = this.dataTable;
            this.DataTable.columns.adjust();
            dataTable.fnAdjustColumnSizing();
        }
    }, {
        key: 'visibleColumns',
        value: function visibleColumns(cols, visible) {
            var dataTable = this.dataTable;
            try {
                this.DataTable.columns(cols).visible(visible);
            } catch (error) {}
            dataTable.fnAdjustColumnSizing();
        }
    }, {
        key: 'getDataTable',
        value: function getDataTable() {
            return this.DataTable;
        }
    }, {
        key: 'destroy',
        value: function destroy() {
            if (this._initialized) {
                this.unmountAll();
                var table = $(this.getTableDomNode()).DataTable(); // eslint-disable-line new-cap
                table.destroy();
                this._initialized = false;
            }
        }
    }, {
        key: 'unmountAll',
        value: function unmountAll() {
            if (this.nodes.length === 0) {
                return;
            }
            this.nodes.forEach(function (node) {
                if (_.isFunction(_react2.default.unmountComponentAtNode)) {
                    _react2.default.unmountComponentAtNode(node);
                }
            });
            this.nodes = [];
        }
    }, {
        key: 'renderIntoNode',
        value: function renderIntoNode(element, container, callback) {
            var renderedComponent = _reactDom2.default.render(element, container, callback);
            this.nodes.push(container);
            return renderedComponent;
        }
        //start table methods

    }, {
        key: 'setDataArray',
        value: function setDataArray(data) {
            this.dataTable.fnClearTable();
            this.dataTable.fnAddData(data);
            this.dataTable.fnDraw();
        }
        /**
         * This method will set the columns of the data table. Please note that this will actually
         * destroy and recreate the underlying datatable instance because the third party component we
         * are using does not support dynamic generations of columns.
         */

    }, {
        key: 'setColumns',
        value: function setColumns(columns, hasGroupedColumns) {
            //as per current wireframes, max level of grouping we have is 2. 
            var firstLevelColumns = [];
            var zeroLevelColumns = [];
            var secondLevelColumns = [];
            var firstRow = "";
            var zerothRow = "";
            var phatomRow = "<tr style='position: absolute !important;top: -9999px !important;left: -9999px !important;border-style: hidden'>";
            if (hasGroupedColumns) {
                firstRow = "<tr>";
                columns.map(function (col) {
                    firstLevelColumns.push(col);
                    if (col.hasOwnProperty('children')) {
                        secondLevelColumns = secondLevelColumns.concat(col.children);
                    }
                    if (col.hasOwnProperty('categoryText')) {
                        zeroLevelColumns = zeroLevelColumns.concat(col);
                    }
                });
                if (zeroLevelColumns.length > 0) {
                    //border-collapse: collapse;   border-top: 2px solid #e5e5e5;
                    zerothRow = "<tr style='height:17px;' class = 'zerothRow'><th ></th>";
                    if (firstLevelColumns[1].headerText === "category") {
                        phatomRow += "<th rowspan=\"4\" >category</th>";
                    }
                    var groupedCategory = _.groupBy(zeroLevelColumns, function (col) {
                        return col.categoryText;
                    });
                    _.forOwn(groupedCategory, function (cols, key) {
                        var colSpans = 0;
                        colSpans = _.reduce(cols, function (colSpans, col) {
                            if (col.hasOwnProperty('children')) {
                                return colSpans += col.hasOwnProperty('colSpan') ? col.colSpan : col.children.length;
                            } else {
                                return colSpans += 2;
                            }
                        }, 0);
                        zerothRow += "<th colspan=\"" + colSpans + "\" >" + key + "</th>";
                    });
                    zerothRow += "</tr>";
                }
                firstLevelColumns.map(function (col) {
                    if (col.hasOwnProperty('children')) {
                        var childColWidth = 0;
                        col.children.map(function (col) {
                            childColWidth += parseInt(col.width);
                        });
                        var colSpans = col.hasOwnProperty('colSpan') ? col.colSpan : col.children.length;
                        //this means we have a column with sub columns
                        firstRow += "<th colspan=\"" + colSpans + "\" >";
                    } else {
                        //this means we have a blank parent column
                        if (zeroLevelColumns.length > 0) {
                            return;
                        } else {
                            firstRow += "<th rowspan=\"2\">";
                        }
                    }
                    firstRow += col.headerText + "</th>";
                });
                firstRow += "</tr>";
            } else {
                secondLevelColumns = columns;
            }
            var secondRow = "<tr " + (zeroLevelColumns.length > 0 ? "style='height:18px;'" : "") + ">";
            secondLevelColumns.map(function (col) {
                secondRow += "<th colspan=\"" + (col.hasOwnProperty('colSpan') ? col.colSpan : 1) + "\">" + col.headerText + "</th>";
            });
            secondRow += "</tr>";
            if (zeroLevelColumns.length > 0) {
                phatomRow = phatomRow + $(firstRow).html() + "</tr>";
                zerothRow = phatomRow + zerothRow;
                var container = $('<div/>').append(secondRow);
                container.find('th').each(function () {
                    $(this).html($(this).html().slice(0, 15));
                });
                secondRow = container.html();
            }
            this.refs.tableNode.innerHTML = this.beginTable() + (zeroLevelColumns.length > 0 ? zerothRow : "") + firstRow + secondRow + this.endTable();
        }
    }, {
        key: 'beginTable',
        value: function beginTable() {
            return "<table class=\"table table-striped table-hover persist-area\"  style=\"max-height: " + this.props.height + "; width: " + this.props.width + "\"><thead" + (this.props.enableFixedHeader ? " class=\"persist-header\" " : "") + ">";
        }
    }, {
        key: 'endTable',
        value: function endTable() {
            return "</thead><tbody class='content'></tbody></table>" + (this.props.leftLockedCount > 0 ? "<div class='resize_divider'></div><div class='resize_handle'></div>" : "");
        }
    }]);

    return DataTableWrapper;
}(_react2.default.Component);

exports.default = DataTableWrapper;

;

},{"./FixedHeader":206,"./RowGrouping":207,"./draggable":208,"datatables.net":"datatables.net","datatables.net-fixedcolumns":"datatables.net-fixedcolumns","datatables.net-fixedheader":"datatables.net-fixedheader","datatables.net-scroller":"datatables.net-scroller","jquery":"jquery","lodash":"lodash","react":"react","react-dom":"react-dom"}],206:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/* eslint-disable */
var $ = require('jquery');

var FixedHeader = function () {
    function FixedHeader(wrapper, options) {
        _classCallCheck(this, FixedHeader);

        var tableWidth = 0;
        var $tableDomNode = $(wrapper.getTableDomNode());
        var clonedHTML = "";
        var tableCells = $tableDomNode.find("th");
        var corder = this.getCoords;
        var coords = corder($tableDomNode.context);
        var scroller = $tableDomNode.scrollParent();
        var scrollParentCoords = corder(scroller[0]);
        var scrollerOffsetTop = scroller.offset() ? scroller.offset().top : 0;
        var thead = $tableDomNode.find("thead:first-child");
        var fixedHeaderOffset = wrapper.props.fixedHeaderOffset || 0;
        var enableFixedGroupingRow = wrapper.props.enableFixedGroupingRow;
        var $floater = $("<div class='floatingRow' style='position:fixed;top:" + (scrollParentCoords.top + fixedHeaderOffset) + "px;left:" + coords.left + "px;width:" + $tableDomNode.outerWidth() + "px;'/>");
        var isFirefox = typeof InstallTrigger !== "undefined";
        var isIE = false || !!document.documentMode;
        var isChrome = !!window.chrome && !!window.chrome.webstore;
        var tableTop = null;
        var adjustment = 0;
        if (isFirefox) {
            adjustment = -1;
        }
        if (isIE) {
            adjustment = 1.5;
        }
        if (isChrome) {
            adjustment = 1;
        }
        if ($(".zerothRow").length > 0) {
            adjustment = 0;
        }
        wrapper.$floater = $floater;
        $floater.on('click', 'div.floatingCell', function (e) {
            var cellIdx = e.currentTarget.getAttribute("data-column");
            var cell = tableCells[cellIdx];
            $(cell).trigger("click.DT");
            $floater.html("");
            scroller.trigger("scroll");
        });
        $tableDomNode.after($floater);
        var stickyDefaultTop = 0;
        var getScrollbarWidth = function getScrollbarWidth() {
            var scrollParent = scroller;
            if ($tableDomNode.width !== scroller.width || scroller.is(document)) {
                scrollParent = $tableDomNode.parent();
            }
            if ($('.dataTables_scrollBody').find('table').height() <= $('.dataTables_scrollBody').height()) {
                return 0;
            }
            var outer = $("<div/>");
            outer.css('visibility', "hidden");
            outer.css('width', "100px");
            scrollParent.append(outer);
            var widthNoScroll = outer.get(0).offsetWidth;
            // force scrollbars
            outer.css('overflow', "scroll");
            // add innerdiv
            var inner = $("<div/>");
            inner.css('width', "100%");
            outer.append(inner);
            var widthWithScroll = inner.get(0).offsetWidth;
            // remove divs
            outer.remove();
            return widthNoScroll - widthWithScroll - 1;
        };
        var updateTableHeaders = function updateTableHeaders() {
            var stickyHeaderTop = $tableDomNode.offset().top - fixedHeaderOffset;
            if (!$tableDomNode.width()) {
                $floater.html("");
                return;
            }
            var theadCoords = thead.offset();
            if (!$floater.html()) {
                $floater.css('width', $tableDomNode.outerWidth()).css('left', $tableDomNode.offset().left).css('height', thead.outerHeight());
                var cellClones = "";
                tableCells.map(function (idx, cell) {
                    if (cell.offsetWidth > 0) {
                        var cellCoords = $(cell).offset();
                        cellClones += "<div class='floatingCell " + cell.className + "' data-column='" + idx + "'style='position:absolute;width:" + cell.offsetWidth + "px;height:" + cell.offsetHeight + "px;left:" + cell.offsetLeft + "px;top:" + (cellCoords.top - theadCoords.top) + "px;'><span style='height:" + cell.offsetHeight + "px'>" + cell.innerHTML + "</span></div>";
                    }
                });
                if (enableFixedGroupingRow) {
                    $floater.css('height', thead.outerHeight() * 2);
                    cellClones += "<div class='floatingGroupCell' style='position:absolute;width:" + $tableDomNode.outerWidth() + "px;height:" + thead.outerHeight() + "px;left:" + 0 + "px;top:" + thead.outerHeight() + "px;'><span class='floatingGroupCellSpan' style='height:" + thead.outerHeight() + "px'>" + "" + "</span></div>";
                }
                $floater.html(cellClones);
                if (wrapper.props.fixedRowCreatedCallback) {
                    wrapper.props.fixedRowCreatedCallback($floater);
                }
            }
            var display = scroller.scrollTop() > stickyHeaderTop ? "" : "none";
            $floater.css('display', display);
            if (display === "none") {
                $floater.html("");
            } else {
                if (enableFixedGroupingRow) {
                    //need to update floating header.                        
                    var nTrs = $tableDomNode.find('tbody tr.group');
                    for (var i = nTrs.length - 1; i >= 0; i--) {
                        var tr = nTrs[i];
                        var $tr = $(tr);
                        //this means this is a group row
                        if ($tr.offset().top - 2 * $tr.outerHeight() < $floater.offset().top) {
                            //this tr is visible
                            var groupSpan = $floater.find('.floatingGroupCellSpan');
                            if ($tr.attr('group') !== undefined) {
                                groupSpan.text($tr.attr('group'));
                            } else {
                                groupSpan.text($tr.text());
                            }
                            break;
                        }
                    }
                }
            }
        };
        var debouncedResizerShownFunc = _lodash2.default.debounce(function () {
            $($tableDomNode.parents().find('.resize_handle')[0]).show();
        }, 200, { trailing: true });
        var updateTableHeadersCorrect = function updateTableHeadersCorrect() {
            var stickyHeaderTop = $tableDomNode.offset().top - 50 - fixedHeaderOffset;
            var handleHeight = 0;
            if (tableTop === null && $('.fixedTable').position()) {
                tableTop = $('.fixedTable').position().top;
            }
            if (scroller.scrollTop() <= stickyDefaultTop) {
                handleHeight = 0;
            }
            if (scroller.scrollTop() > stickyDefaultTop) {
                if ($('.fixedTable').position() && $('.fixedTable').position().top === 0 && $('.fixedTable').offset()) {
                    tableTop = $('.fixedTable').offset().top;
                }
                handleHeight = scroller.scrollTop() - tableTop + fixedHeaderOffset;
                if (!isChrome) {
                    $($tableDomNode.parents().find('.resize_handle')[0]).hide();
                }
            }
            if (wrapper.props.height < scroller.scrollTop()) {
                handleHeight = 0;
            }
            $($tableDomNode.parents().find('.resize_handle')[0]).css('top', handleHeight);
            var theadCoords = thead.offset();
            $floater.css('width', $tableDomNode.offsetParent().width() - getScrollbarWidth()).css('left', $tableDomNode.offset().left - $(document).scrollLeft() + ($tableDomNode.parents('.scrollTable').length > 0 ? $('div.dataTables_scrollBody').scrollLeft() : 0) + (isFirefox || $('div.dataTables_scrollBody').get(0) && $('div.dataTables_scrollBody').scrollLeft() + adjustment > $('div.dataTables_scrollBody').get(0).scrollWidth - $('div.dataTables_scrollBody').get(0).clientWidth ? adjustment : 0)).css('overflow', 'hidden').css('height', thead.outerHeight());
            if (!$floater.html()) {
                var cellClones = "";
                tableCells.map(function (idx, cell) {
                    if (cell.offsetWidth > 0) {
                        var offsetHeight = cell.offsetHeight;
                        var inHtml = wrapper.props.rowGroupingField || cell.innerHTML;
                        var cellCoords = $(cell).offset();
                        if (typeof wrapper.props.isScrollTable === 'undefined') {
                            var heightMul = wrapper.props.columns[wrapper.props.fixedColumn - 1].children ? wrapper.props.columns[wrapper.props.fixedColumn - 1].categoryText ? 4 : 2 : 1;
                            offsetHeight = offsetHeight * heightMul;
                            cellClones = "<div class='floatingCell " + cell.className + "' data-column='" + idx + "'style='position:absolute;width:" + cell.offsetWidth + "px;height:" + offsetHeight + "px;left:" + cell.offsetLeft + "px;'><span class='floatingFirstTh' style='height:" + offsetHeight + "px'>" + "" + "</span></div>";
                        } else {
                            cellClones += "<div class='floatingCell " + cell.className + "' data-column='" + idx + "'style='position:absolute;width:" + cell.offsetWidth + "px;height:" + offsetHeight + "px;left:" + cell.offsetLeft + "px;top:" + (cellCoords.top - theadCoords.top) + "px;'><span style='height:" + offsetHeight + "px'>" + cell.innerHTML + "</span></div>";
                        }
                    }
                });
                if (enableFixedGroupingRow) {
                    $floater.css('height', thead.outerHeight() * 2);
                    cellClones += "<div class='floatingGroupCell' style='position:absolute;width:" + $tableDomNode.outerWidth() + "px;height:" + thead.outerHeight() + "px;left:" + 0 + "px;top:" + thead.outerHeight() + "px;'><span class='floatingGroupCellSpan' style='height:" + thead.outerHeight() + "px'>" + "" + "</span></div>";
                }
                $floater.html($("<div/>").html(cellClones));
                if (wrapper.props.fixedRowCreatedCallback) {
                    wrapper.props.fixedRowCreatedCallback($floater);
                }
            }
            if (stickyDefaultTop === 0) {
                stickyDefaultTop = stickyHeaderTop;
            }
            var display = scroller.scrollTop() > stickyDefaultTop && scroller.scrollTop() < wrapper.props.height + stickyDefaultTop - 50 ? "" : "none";
            $floater.css('display', display);
            $('.floatingRow').eq(1).scrollLeft($('div.dataTables_scrollBody').scrollLeft());
            if ($('.floatingRow').eq(0).css('display') === "none" && wrapper.props.isScrollTable) {
                $('.floatingRow').css('display', "none");
            }
            if (display === "none") {
                $('.floatingRow').html("");
            } else {
                var nTrs = $tableDomNode.find('tbody tr');
                for (var i = nTrs.length - 1; i >= 0; i--) {
                    var tr = nTrs[i];
                    var $tr = $(tr);
                    //this means this is a group row
                    if ($tr.offset().top - 2 * $tr.outerHeight() < $floater.offset().top) {
                        //this tr is visible
                        if (enableFixedGroupingRow) {
                            //need to update floating header.                        
                            var groupSpan = $floater.find('.floatingGroupCellSpan');
                            if ($tr.attr('group') !== undefined) {
                                groupSpan.text($tr.attr('group'));
                            } else {
                                groupSpan.text($tr.text());
                            }
                        } else if ($tr.attr('group') !== undefined) {
                            $floater.find('.floatingFirstTh').text($tr.attr('group').indexOf('0000') > -1 ? $tr.attr('group').substring(4) : $tr.attr('group'));
                        }
                        break;
                    }
                }
            }
            if (!isChrome) {
                debouncedResizerShownFunc.cancel();
                debouncedResizerShownFunc();
            }
        };
        options.initComplete = function () {
            if (wrapper.props.fixedColumn) {
                scroller.scroll(updateTableHeadersCorrect).trigger("scroll");
                if (wrapper.props.isScrollTable) {
                    if (wrapper.props.columns[0].width) {
                        $('.scrollTable').width($('.scrollTable').width() - wrapper.props.columns[0].width);
                        $('.scrollTable').css('left', wrapper.props.columns[0].width);
                    } else {
                        $('.scrollTable').width($('.scrollTable').width() - 200);
                    }
                    $('.fixedTable').width($('.scrollTable').width());
                }
            } else {
                scroller.scroll(updateTableHeaders).trigger("scroll");
            }
            $tableDomNode.on('destroy.dt', function (e, settings) {
                $(window).off('scroll', updateTableHeadersCorrect);
                $(window).off('resize');
                $(window).off('click');
                $('div.dataTables_scrollBody').off('scroll');
            });
        };
        var refreshCallback = function refreshCallback(event) {
            if (wrapper.props.fixedColumn) {
                if ($('.scrollTable').count === 0 || typeof $('.scrollTable').position() === "undefined") {
                    return;
                }
                $floater.html("");
                updateTableHeadersCorrect();
                if (event.type === "resize") {
                    var newWidth = parseInt($('.scrollTable').css('left')) + 20;
                    newWidth = newWidth >= 220 ? newWidth : 220;
                    $('.fixedTable').css('width', newWidth);
                    $('.fixedTable td').css('width', newWidth);
                }
            } else {
                $floater.html("");
                $floater.off("click");
            }
        };
        //$(window).resize(refreshCallback);
        $(window).resize(function () {
            scroller.trigger("scroll");
            $('.scrollTable').css('width', $('.scrollTable').parents(".neptune-table").width() - parseInt($('.scrollTable').css('left')));
        });
        $(window).on('refreshHeader', refreshCallback);
    }

    _createClass(FixedHeader, [{
        key: 'getCoords',
        value: function getCoords(elem) {
            if (elem == document) {
                return { top: 0, left: 0 };
            }
            var box = elem.getBoundingClientRect();
            var style = window.getComputedStyle(elem);
            var margin = {
                left: parseInt(style["margin-left"]),
                right: parseInt(style["margin-right"]),
                top: parseInt(style["margin-top"]),
                bottom: parseInt(style["margin-bottom"])
            };
            var padding = {
                left: parseInt(style["padding-left"]),
                right: parseInt(style["padding-right"]),
                top: parseInt(style["padding-top"]),
                bottom: parseInt(style["padding-bottom"])
            };
            var border = {
                left: parseInt(style["border-left"]),
                right: parseInt(style["border-right"]),
                top: parseInt(style["border-top"]),
                bottom: parseInt(style["border-bottom"])
            };
            box = {
                left: box.left - margin.left,
                right: box.right - margin.right - padding.left - padding.right,
                top: box.top - margin.top,
                bottom: box.bottom - margin.bottom - padding.top - padding.bottom - border.bottom
            };
            var body = document.body;
            var docEl = document.documentElement;
            var scrollTop = window.pageYOffset || docEl.scrollTop || body.scrollTop;
            var scrollLeft = window.pageXOffset || docEl.scrollLeft || body.scrollLeft;
            var clientTop = docEl.clientTop || body.clientTop || 0;
            var clientLeft = docEl.clientLeft || body.clientLeft || 0;
            var top = box.top + scrollTop - clientTop;
            var left = box.left + scrollLeft - clientLeft;
            return { top: Math.round(top), left: Math.round(left) };
        }
    }]);

    return FixedHeader;
}();

exports.default = FixedHeader;

},{"jquery":"jquery","lodash":"lodash"}],207:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/* eslint-disable */
var $ = require('jquery');

var RowGrouping = function RowGrouping(wrapper, options, flatCols, optionsColDefs) {
    _classCallCheck(this, RowGrouping);

    var dataField = wrapper.props.rowGroupingField;
    //figure out how many inner columns
    var matchCol = $.grep(flatCols, function (e) {
        return (e.title || e.dataField) === dataField;
    });
    var colIndex = flatCols.indexOf(matchCol[0]);
    var $tableDomNode = $(wrapper.getTableDomNode());
    optionsColDefs.push({ "visible": false, "targets": colIndex }); //hide the grouping column
    options.orderFixed = [colIndex, 'asc']; //make sure you force a sort by the grouping column always
    if (typeof wrapper.props.leftLockedCount === 'undefined' || wrapper.props.leftLockedCount === 0) {
        //this wont work with fixed columns
        options.drawCallback = function () {
            var api = this.api();
            var rows = api.rows().nodes();
            var visibleColCount = 0;
            api.columns().eq(0).each(function (index) {
                var column = api.column(index);
                if (column.visible()) {
                    visibleColCount++;
                }
            });
            var last = null;
            var groupIndex = 1;
            api.column(colIndex).data().each(function (group, i) {
                if (last !== group) {
                    var displayGroup = matchCol[0].cellHtmlCallback ? matchCol[0].cellHtmlCallback(group, "display", i, colIndex, matchCol[0]) : group;
                    var generatedRow = $('<tr class="group" ><td colspan="' + visibleColCount + '">' + displayGroup + '</td></tr>');
                    $(rows).eq(i).before(generatedRow);
                    if (matchCol[0].cellRenderedCallback) {
                        matchCol[0].cellRenderedCallback(generatedRow, group, displayGroup, groupIndex++, colIndex);
                    }
                    last = group;
                }
            });
        };
    } else {
        //locked column fixed headers - complicates things a little bit.
        //const oTable = wrapper.dataTable;
        options.fixedColumns = {
            leftColumns: wrapper.props.leftLockedCount,
            fnDrawCallback: function fnDrawCallback(left) {
                // eslint-disable-line max-statements
                var oSettings = this.s.dt;
                if (oSettings.aiDisplay.length === 0) {
                    return;
                }
                var nGroup;
                var nCell;
                var iIndex;
                var sGroup;
                var sLastGroup = "";
                var iCorrector = 0;
                var nTrs = $tableDomNode.find('tbody tr');
                var iColspan = nTrs[0].getElementsByTagName('td').length;
                for (var i = 0; i < nTrs.length; i++) {
                    iIndex = oSettings._iDisplayStart + i;
                    sGroup = oSettings.aoData[oSettings.aiDisplay[iIndex]]._aData[colIndex];
                    if (sGroup !== sLastGroup) {
                        /* Cell to insert into main table */
                        nGroup = document.createElement('tr');
                        nCell = document.createElement('td');
                        nCell.colSpan = iColspan;
                        nGroup.className = "group";
                        nCell.innerHTML = "&nbsp;";
                        nGroup.appendChild(nCell);
                        nTrs[i].parentNode.insertBefore(nGroup, nTrs[i]);
                        /* Cell to insert into the frozen columns */
                        nGroup = document.createElement('tr');
                        nCell = document.createElement('td');
                        nGroup.className = "group";
                        nCell.innerHTML = sGroup;
                        nGroup.appendChild(nCell);
                        $(nGroup).insertBefore($('tbody tr:eq(' + (i + iCorrector) + ')', left.body)[0]);
                        iCorrector++;
                        sLastGroup = sGroup;
                    }
                }
            }
        };
    }
};

exports.default = RowGrouping;

},{"jquery":"jquery"}],208:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/* eslint-disable */
var $ = require('jquery');

var Draggable = function () {
    function Draggable(element, options) {
        var element2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

        _classCallCheck(this, Draggable);

        this.defaults = {
            // settings
            grid: 0,
            filterTarget: null,
            limit: {
                x: null,
                y: null // [minimum position, maximum position] || position
            },
            threshold: 0,
            // flags
            setCursor: false,
            setPosition: true,
            smoothDrag: true,
            useGPU: true,
            // event hooks
            onDrag: this.noop,
            onDragStart: this.noop,
            onDragEnd: this.noop // function(element, X, Y, event)
        };
        this.env = {
            // CSS vendor-prefixed transform property
            transform: function () {
                var prefixes = ' -o- -ms- -moz- -webkit-'.split(' ');
                var style = document.body.style;
                for (var n = prefixes.length; n--;) {
                    var property = prefixes[n] + 'transform';
                    if (property in style) {
                        return property;
                    }
                }
            }()
        };
        var env = this.env;
        // internal
        var me = this,
            start = this.bind(me.start, me),
            drag = this.bind(me.drag, me),
            stop = this.bind(me.stop, me);
        // sanity check
        if (!this.isElement(element)) {
            throw new TypeError('Draggable expects argument 0 to be an Element');
        }
        // set instance properties
        this.assign(me, {
            // DOM element
            element: element,
            // DOM event handlers
            handlers: {
                start: {
                    mousedown: start,
                    touchstart: start
                },
                move: {
                    mousemove: drag,
                    mouseup: stop,
                    touchmove: drag,
                    touchend: stop
                }
            },
            element2: element2,
            // options
            options: this.assign({}, this.defaults, options)
        });
        this.dragEvent = {
            started: false,
            x: 0,
            y: 0
        };
        this.addEvent = 'attachEvent' in Element.prototype ? function (element, e, fn) {
            element.attachEvent('on' + e, fn);
        } : function (element, e, fn) {
            element.addEventListener(e, fn, false);
        };
        this.removeEvent = 'attachEvent' in Element.prototype ? function (element, e, fn) {
            element.detachEvent('on' + e, fn);
        } : function (element, e, fn) {
            element.removeEventListener(e, fn);
        };
        // initialize
        me.initialize();
    }

    _createClass(Draggable, [{
        key: 'assign',
        value: function assign() {
            var obj = arguments[0];
            var count = arguments.length;
            for (var n = 1; n < count; n++) {
                var argument = arguments[n];
                for (var key in argument) {
                    obj[key] = argument[key];
                }
            }
            return obj;
        }
    }, {
        key: 'bind',
        value: function bind(fn, context) {
            return function () {
                fn.apply(context, arguments);
            };
        }
    }, {
        key: 'on',
        value: function on(element, e, fn) {
            if (e && fn) {
                this.addEvent(element, e, fn);
            } else if (e) {
                for (var ee in e) {
                    this.addEvent(element, ee, e[ee]);
                }
            }
        }
    }, {
        key: 'off',
        value: function off(element, e, fn) {
            if (e && fn) {
                this.removeEvent(element, e, fn);
            } else if (e) {
                for (var ee in e) {
                    this.removeEvent(element, ee, e[ee]);
                }
            }
        }
        // Example:
        //
        //     this.limit(x, limit.x)

    }, {
        key: 'limit',
        value: function limit(n, _limit) {
            // {Array} limit.x
            if (_limit instanceof Array) {
                _limit = [+_limit[0], +_limit[1]];
                if (n < _limit[0]) n = _limit[0];else if (n > _limit[1]) n = _limit[1];
            } else {
                n = +_limit;
            }
            return n;
        }
        // public

    }, {
        key: 'setOption',
        value: function setOption(property, value) {
            var me = this;
            me.options[property] = value;
            me.initialize();
            return me;
        }
    }, {
        key: 'get',
        value: function get() {
            var dragEvent = this.dragEvent;
            return {
                x: dragEvent.x,
                y: dragEvent.y
            };
        }
    }, {
        key: 'set',
        value: function set(x, y) {
            var me = this,
                dragEvent = me.dragEvent;
            dragEvent.original = {
                x: dragEvent.x,
                y: dragEvent.y
            };
            me.move(x, y);
            return me;
        }
    }, {
        key: 'initialize',
        value: function initialize() {
            var env = this.env;
            var me = this;
            var element = me.element;
            var element2 = me.element2;
            var style = element.style;
            var compStyle = this.getStyle(element);
            var options = me.options;
            var transform = env.transform;
            var oldTransform = void 0;
            // cache element dimensions (for performance)
            var _dimensions = me._dimensions = {
                height: element.offsetHeight,
                left: element.offsetLeft,
                top: element.offsetTop,
                width: element.offsetWidth
            };
            // shift compositing over to the GPU if the browser supports it (for performance)
            if (options.useGPU && transform) {
                // concatenate to any existing transform
                // so we don't accidentally override it
                oldTransform = compStyle[transform];
                if (oldTransform === 'none') {
                    oldTransform = '';
                }
                style[transform] = oldTransform + ' translate3d(0,0,0)';
            }
            // optional styling
            if (options.setPosition) {
                style.display = 'block';
                style.left = _dimensions.left + 'px';
                style.top = _dimensions.top + 'px';
                style.bottom = style.right = 'auto';
                style.margin = 0;
                style.position = 'absolute';
            }
            if (options.setCursor) {
                style.cursor = 'move';
            }
            // set limit
            me.setLimit(options.limit);
            // set position in model
            this.assign(me.dragEvent, {
                x: _dimensions.left,
                y: _dimensions.top
            });
            // attach mousedown event
            this.on(me.element, me.handlers.start);
            if (me.element2) {
                this.on(me.element2, me.handlers.start);
            }
        }
    }, {
        key: 'start',
        value: function start(e) {
            var env = this.env;
            var me = this;
            var cursor = me.getCursor(e);
            var element = me.element;
            // filter the target?
            if (!me.useTarget(e.target || e.srcElement)) {
                return;
            }
            // prevent browsers from visually dragging the element's outline
            if (e.preventDefault) {
                e.preventDefault();
            } else {
                e.returnValue = false; // IE10
            }
            // set a high z-index, just in case
            me.dragEvent.oldZindex = element.style.zIndex;
            element.style.zIndex = 10000;
            // set initial position
            me.setCursor(cursor);
            me.setPosition();
            me.setZoom();
            // add event listeners
            this.on(document, me.handlers.move);
        }
    }, {
        key: 'drag',
        value: function drag(e) {
            var env = this.env;
            var me = this,
                dragEvent = me.dragEvent,
                element = me.element,
                initialCursor = me._cursor,
                initialPosition = me._dimensions,
                options = me.options,
                zoom = initialPosition.zoom,
                cursor = me.getCursor(e),
                threshold = options.threshold,
                x = (cursor.x - initialCursor.x) / zoom + initialPosition.left,
                y = (cursor.y - initialCursor.y) / zoom + initialPosition.top;
            // check threshold
            if (!dragEvent.started && threshold && Math.abs(initialCursor.x - cursor.x) < threshold && Math.abs(initialCursor.y - cursor.y) < threshold) {
                return;
            }
            // save original position?
            if (!dragEvent.original) {
                dragEvent.original = { x: x, y: y };
            }
            // trigger start event?
            if (!dragEvent.started) {
                options.onDragStart(element, x, y, e);
                dragEvent.started = true;
            }
            // move the element
            if (me.move(x, y)) {
                // trigger drag event
                options.onDrag(element, dragEvent.x, dragEvent.y, e);
            }
        }
    }, {
        key: 'move',
        value: function move(x, y) {
            var env = this.env;
            var me = this;
            var dragEvent = me.dragEvent;
            var options = me.options;
            var grid = options.grid;
            var style = me.element.style;
            var pos = me.limit(x, y, dragEvent.original.x, dragEvent.original.y);
            // snap to grid?
            if (!options.smoothDrag && grid) {
                pos = me.round(pos, grid);
            }
            // move it
            if (pos.x !== dragEvent.x || pos.y !== dragEvent.y) {
                dragEvent.x = pos.x;
                dragEvent.y = pos.y;
                style.left = pos.x + 'px';
                style.top = pos.y + 'px';
                return true;
            }
            return false;
        }
    }, {
        key: 'stop',
        value: function stop(e) {
            var env = this.env;
            var me = this;
            var dragEvent = me.dragEvent;
            var element = me.element;
            var options = me.options;
            var grid = options.grid;
            var pos = void 0;
            // remove event listeners
            this.off(document, me.handlers.move);
            // resent element's z-index
            element.style.zIndex = dragEvent.oldZindex;
            // snap to grid?
            if (options.smoothDrag && grid) {
                pos = me.round({ x: dragEvent.x, y: dragEvent.y }, grid);
                me.move(pos.x, pos.y);
                this.assign(me.dragEvent, pos);
            }
            // trigger dragend event
            if (me.dragEvent.started) {
                options.onDragEnd(element, dragEvent.x, dragEvent.y, e);
            }
            // clear temp vars
            me.reset();
        }
    }, {
        key: 'reset',
        value: function reset() {
            this.dragEvent.started = false;
        }
    }, {
        key: 'round',
        value: function round(pos) {
            var grid = this.options.grid;
            return {
                x: grid * Math.round(pos.x / grid),
                y: grid * Math.round(pos.y / grid)
            };
        }
    }, {
        key: 'getCursor',
        value: function getCursor(e) {
            return {
                x: (e.targetTouches ? e.targetTouches[0] : e).clientX,
                y: (e.targetTouches ? e.targetTouches[0] : e).clientY
            };
        }
    }, {
        key: 'setCursor',
        value: function setCursor(xy) {
            this._cursor = xy;
        }
    }, {
        key: 'setLimit',
        value: function setLimit(limit) {
            var _this = this;

            var env = this.env;
            var me = this,
                _true = function _true(x, y) {
                return {
                    x: x,
                    y: y
                };
            };
            // limit is a function
            if (this.isFunction(limit)) {
                me.limit = limit;
            } else if (this.isElement(limit)) {
                (function () {
                    var draggableSize = me._dimensions,
                        height = limit.scrollHeight - draggableSize.height,
                        width = limit.scrollWidth - draggableSize.width;
                    me.limit = function (x, y) {
                        return {
                            x: _this.limit(x, [0, width]),
                            y: _this.limit(y, [0, height])
                        };
                    };
                })();
            } else if (limit) {
                (function () {
                    var thisLimit = _this.limit;
                    var defined = {
                        x: _this.isDefined(limit.x),
                        y: _this.isDefined(limit.y)
                    };
                    var _x = void 0,
                        _y = void 0;
                    // {Undefined} limit.x, {Undefined} limit.y
                    if (!defined.x && !defined.y) {
                        me.limit = _true;
                    } else {
                        me.limit = function (x, y) {
                            return {
                                x: defined.x ? thisLimit(x, limit.x) : x,
                                y: defined.y ? thisLimit(y, limit.y) : y
                            };
                        };
                    }
                })();
            } else {
                me.limit = _true;
            }
        }
    }, {
        key: 'setPosition',
        value: function setPosition() {
            var env = this.env;
            var me = this,
                element = me.element,
                style = element.style;
            this.assign(me._dimensions, {
                left: this.parse(style.left) || element.offsetLeft,
                top: this.parse(style.top) || element.offsetTop
            });
        }
    }, {
        key: 'setZoom',
        value: function setZoom() {
            var me = this;
            var element = me.element;
            var zoom = 1;
            while (element = element.offsetParent) {
                var z = this.getStyle(element).zoom;
                if (z && z !== 'normal') {
                    zoom = z;
                    break;
                }
            }
            me._dimensions.zoom = zoom;
        }
    }, {
        key: 'useTarget',
        value: function useTarget(element) {
            var filterTarget = this.options.filterTarget;
            if (filterTarget instanceof Function) {
                return filterTarget(element);
            }
            return true;
        }
    }, {
        key: 'destroy',
        value: function destroy() {
            var env = this.env;
            this.off(this.element, this.handlers.start);
            this.off(document, this.handlers.move);
        }
        // helpers

    }, {
        key: 'parse',
        value: function parse(string) {
            return parseInt(string, 10);
        }
    }, {
        key: 'getStyle',
        value: function getStyle(element) {
            return 'currentStyle' in element ? element.currentStyle : getComputedStyle(element);
        }
    }, {
        key: 'isDefined',
        value: function isDefined(thing) {
            return thing !== void 0 && thing !== null;
        }
    }, {
        key: 'isElement',
        value: function isElement(thing) {
            return thing instanceof Element || thing instanceof HTMLDocument;
        }
    }, {
        key: 'isFunction',
        value: function isFunction(thing) {
            return thing instanceof Function;
        }
    }], [{
        key: 'register',
        value: function register() {
            //we will be extending jquery here, for use later on.
            $.fn.dataTable.ext.errMode = function handleError(e, settings, techNote, message) {};
            //add scrollParent method to jquery for easier access.
            $.fn.scrollParent = function () {
                var overflowRegex = /(auto|scroll)/,
                    position = this.css("position"),
                    excludeStaticParent = position === "absolute",
                    scrollParent = this.parents().filter(function () {
                    var parent = $(this);
                    if (excludeStaticParent && parent.css("position") === "static") {
                        return false;
                    }
                    var overflowState = parent.css(["overflow", "overflowX", "overflowY"]);
                    return overflowRegex.test(overflowState.overflow + overflowState.overflowX + overflowState.overflowY);
                }).eq(0);
                return position === "fixed" || !scrollParent.length ? $(this[0].ownerDocument || document) : scrollParent;
            };
            if (typeof Object.assign != 'function') {
                Object.assign = function (target) {
                    'use strict';

                    if (target == null) {
                        throw new TypeError('Cannot convert undefined or null to object');
                    }
                    target = Object(target);
                    for (var index = 1; index < arguments.length; index++) {
                        var source = arguments[index];
                        if (source != null) {
                            for (var key in source) {
                                if (Object.prototype.hasOwnProperty.call(source, key)) {
                                    target[key] = source[key];
                                }
                            }
                        }
                    }
                    return target;
                };
            }
        }
    }, {
        key: 'initializeDraggableHandle',
        value: function initializeDraggableHandle(wrapper, table) {
            var dataTable = wrapper.dataTable;
            var root = $(wrapper.getTableDomNode()).closest('.dataTables_wrapper');
            var thisDom = $(_reactDom2.default.findDOMNode(wrapper));
            var resizeHandler = $(thisDom).find('.resize_handle')[0];
            var $resizeHandler = $(resizeHandler);
            var resizeDivider = $(thisDom).find('.resize_divider')[0];
            var $resizeDivider = $(resizeDivider);
            var leftBody = root.find('.DTFC_LeftBodyWrapper')[0];
            var leftWrapper = root.find('.DTFC_LeftWrapper')[0];
            var aoColumn = table.settings()[0].aoColumns[0];
            var resizeOffset = 26;
            var tableWidth = 0;
            var drapObj = null;
            var resizeHandlerTop = 0;
            $resizeHandler.css('left', parseInt(aoColumn.width) + resizeOffset + 'px');
            $resizeDivider.css('left', aoColumn.width);
            $resizeDivider.css('height', parseInt(wrapper.props.height) + 25 + 'px');
            var xWidth = 0;
            if (leftBody) {
                xWidth = leftBody.offsetWidth * 3;
            }
            var dragOptions = {
                limit: {
                    x: [1, xWidth],
                    y: resizeHandler.offsetTop
                },
                onDrag: function onDrag(element, x, y, event) {
                    $resizeDivider.css('left', parseInt($resizeHandler.css('left')) + resizeOffset);
                },
                onDragStart: function onDragStart(element, x, y, event) {
                    resizeDivider.style.display = 'block';
                    $resizeDivider.css('left', parseInt($resizeHandler.css('left')) + resizeOffset);
                },
                onDragEnd: function onDragEnd(element, x, y, event) {
                    resizeDivider.style.display = 'none';
                    var newWidth = parseInt($resizeHandler.css('left')) - resizeOffset + 'px';
                    table.tables().header().to$().find('th:eq(0)').css('min-width', newWidth);
                    $(window).trigger('resize');
                    aoColumn.sWidthOrig = aoColumn.sWidth = aoColumn.width = newWidth;
                    table.columns.adjust();
                    dataTable.fnAdjustColumnSizing();
                }
            };
            if (wrapper.props.fixedColumn) {
                (function () {
                    $resizeHandler.css('left', '-26px');
                    $resizeDivider.css('left', '-5px').css('top', 0);
                    $resizeDivider.css('height', parseInt(wrapper.props.height) + 25 + 'px');
                    tableWidth = $('.scrollTable').width();
                    var tableRight = screen.width - tableWidth - parseInt($('.scrollTable').css('left'));
                    var tableLeft = parseInt($('.scrollTable').css('left'));
                    dragOptions.limit = {
                        y: resizeHandler.offsetTop
                    };
                    dragOptions.onDrag = function (element, x, y, event) {
                        if (drapObj) {
                            drapObj.setLimit({
                                y: resizeHandlerTop
                            });
                        }
                        $resizeDivider.css('left', parseInt($resizeHandler.css('left')) + resizeOffset);
                    };
                    dragOptions.onDragStart = function (element, x, y, event) {
                        resizeDivider.style.display = 'block';
                        resizeHandlerTop = $resizeHandler.position().top;
                        $resizeDivider.css('left', parseInt($resizeHandler.css('left')) + resizeOffset);
                    };
                    dragOptions.onDragEnd = function (ele, x, y, event) {
                        resizeDivider.style.display = 'none';
                        var tableRight = $(window).width() - tableWidth - $('.scrollTable').position().left;
                        var tableNewWidth = $(window).outerWidth() - tableRight - $('.scrollTable').position().left;
                        var newWidth = parseInt($resizeHandler.css('left')) - resizeOffset + parseInt($('.scrollTable').css('left')) + 20;
                        $resizeHandler.css('left', '-26px');
                        newWidth = newWidth >= 220 ? newWidth : 220;
                        newWidth = newWidth < tableNewWidth - 50 ? newWidth : tableNewWidth - 50;
                        $('.scrollTable').css('left', newWidth);
                        $('.scrollTable').css('width', tableNewWidth - newWidth + tableLeft);
                        $('.fixedTable').css('width', tableWidth);
                        $('.fixedTable td').css('width', newWidth);
                        $('.floatingRow').eq(0).width(newWidth);
                        $('.floatingRow').eq(1).width(parseInt($('.scrollTable').css('width'))).css('left', newWidth + parseInt($('.floatingRow').eq(0).css('left')));
                        $('.floatingRow').eq(1).scrollLeft($('div.dataTables_scrollBody').scrollLeft());
                        $(window).trigger('refreshHeader');
                    };
                })();
            }
            if ($(".scrollTable .DTFC_ScrollWrapper .DTFC_LeftBodyWrapper").length > 0) {
                drapObj = new Draggable(resizeHandler, dragOptions, $(".scrollTable .DTFC_ScrollWrapper .DTFC_LeftBodyWrapper")[0]);
            } else {
                drapObj = new Draggable(resizeHandler, dragOptions);
            }
            return drapObj;
        }
    }]);

    return Draggable;
}();

exports.default = Draggable;

},{"jquery":"jquery","react-dom":"react-dom"}],209:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var TableColumn = function TableColumn() {
  _classCallCheck(this, TableColumn);
};

exports.default = TableColumn;

},{}],210:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable */


var _ = require('lodash');
var styles = require('./style.less');
var DataTableWrapper = require('./DataTables/DataTableWrapper');

var Table = function (_React$Component) {
    _inherits(Table, _React$Component);

    function Table(props) {
        _classCallCheck(this, Table);

        return _possibleConstructorReturn(this, (Table.__proto__ || Object.getPrototypeOf(Table)).call(this, props));
    }

    _createClass(Table, [{
        key: 'shouldComponentUpdate',
        value: function shouldComponentUpdate() {
            return this.props.enableComponentUpdates;
        }
    }, {
        key: 'renderFixedColumn',
        value: function renderFixedColumn() {
            var fixedNum = this.props.fixedColumn;
            if (this.props.rowGroupingField) {
                fixedNum += 1;
            }
            var cols1 = _.slice(this.props.columns, 0, fixedNum);
            var cols2 = _.slice(this.props.columns, 0, this.props.columns.length);
            var table1 = this.renderDataTableWrpper(cols1, "dt1", _.assign({}, this.props, { width: "100%", enableScroll: false }));
            var table2 = this.renderDataTableWrpper(cols2, "dt2", _.assign({}, this.props, { width: "100%", leftLockedCount: 1, enableScroll: true, isScrollTable: true }));
            var _width = this.props.width ? this.props.width : '100%';
            var style1 = {
                position: "absolute",
                width: _width
            };
            var style2 = {
                position: "relative", left: "200px", width: _width
            };
            return React.createElement(
                'div',
                null,
                React.createElement(
                    'div',
                    { className: 'fixedTable', style: style1 },
                    table1
                ),
                React.createElement(
                    'div',
                    { className: 'scrollTable', style: style2 },
                    table2
                )
            );
        }
    }, {
        key: 'renderDefault',
        value: function renderDefault() {
            return this.renderDataTableWrpper(this.props.columns, "dataTable", this.props);
        }
    }, {
        key: 'renderDataTableWrpper',
        value: function renderDataTableWrpper(cols, refs, props) {
            return React.createElement(DataTableWrapper.default, { columns: cols, ref: refs, enablePaging: props.enablePaging, pageLength: props.pageLength, enableShowTotalCount: props.enableShowTotalCount, enableComponentUpdates: props.enableComponentUpdates, enableOrdering: props.enableOrdering, enableSearch: props.enableSearch, enableVerticalScroll: props.enableVerticalScroll, enableHorizontalScroll: props.enableHorizontalScroll, enableScroll: props.enableScroll, enableDeferRender: props.enableDeferRender, rowGroupingField: props.rowGroupingField, defaultSortField: props.defaultSortField, enableFixedHeader: props.enableFixedHeader, enableFixedGroupingRow: props.enableFixedGroupingRow, removeFirstGroupRow: props.removeFirstGroupRow, fixedHeaderOffset: props.fixedHeaderOffset, isLoading: props.isLoading, leftLockedCount: props.leftLockedCount, rightLockedCount: props.rightLockedCount, rowCreatedCallback: props.rowCreatedCallback, headerCreatedCallback: props.headerCreatedCallback, cellClickCallback: props.cellClickCallback, fixedRowCreatedCallback: props.fixedRowCreatedCallback, width: props.width, height: props.height, fixedColumn: props.fixedColumn, isScrollTable: props.isScrollTable, onColumnSortCallback: props.onColumnSortCallback });
        }
    }, {
        key: 'renderResult',
        value: function renderResult() {
            if (this.props.fixedColumn) {
                return this.renderFixedColumn();
            } else {
                return this.renderDefault();
            }
        }
    }, {
        key: 'render',
        value: function render() {
            return this.renderResult();
        }
    }, {
        key: 'foreachCols',
        value: function foreachCols(flattendCols, curCol, self) {
            _.forEach(curCol.children, function (c) {
                if (c.hasOwnProperty('children')) {
                    flattendCols = self.foreachCols(flattendCols, c, self);
                } else {
                    flattendCols = flattendCols.concat([c]);
                }
            });
            return flattendCols;
        }
    }, {
        key: 'setDataMultiHierarchy',
        value: function setDataMultiHierarchy(data, tablep) {
            var table = this.refs['dataTable'];
            if (tablep) {
                table = tablep;
            }
            var cols = this.props.columns;
            var flattendCols = [];
            var self = this;
            cols.map(function (col) {
                flattendCols = flattendCols.concat(col.children && col.children.length > 0 ? col.children : [col]);
            });
            var result = data.map(function (row) {
                return flattendCols.map(function (col) {
                    //current only support 2 hierarchy value. ex 2013.111
                    if (col.dataField.indexOf('.') > -1) {
                        var valList = col.dataField.split('.');
                        return row.hasOwnProperty(valList[0]) ? row[valList[0]][valList[1]] : "";
                    }
                    return row[col.dataField];
                });
            });
            table.setDataArray(result);
        }
    }, {
        key: 'setData',
        value: function setData(data) {
            var table = this.refs['dataTable'];
            var cols = this.props.columns;
            var flattendCols = [];
            cols.map(function (col) {
                flattendCols = flattendCols.concat(col.children && col.children.length > 0 ? col.children : [col]);
            });
            var result = data.map(function (row) {
                return flattendCols.map(function (col) {
                    return row[col.dataField];
                });
            });
            table.setDataArray(result);
        }
    }, {
        key: 'setEachColData',
        value: function setEachColData(data, table) {
            var cols = this.props.columns;
            var flattendCols = [];
            cols.map(function (col) {
                flattendCols = flattendCols.concat(col.children && col.children.length > 0 ? col.children : [col]);
            });
            var result = data.map(function (row) {
                return flattendCols.map(function (col) {
                    return row[col.dataField];
                });
            });
            table.setDataArray(result);
        }
    }, {
        key: 'setFixedColumnData',
        value: function setFixedColumnData(data, setFCData) {
            var table = this.refs["dt1"];
            var setDataFunc = this.setEachColData.bind(this);
            if (setFCData) {
                setDataFunc = setFCData.bind(this);
            }
            setDataFunc(data, table);
            table = this.refs["dt2"];
            setDataFunc(data, table);
            table.visibleColumns(0, false);
        }
    }, {
        key: 'setDataArray',
        value: function setDataArray(data) {
            var table = this.refs['dataTable'];
            table.setDataArray(data);
        }
    }, {
        key: 'setFixedColumns',
        value: function setFixedColumns(columns, hasGroupedColumns) {
            var table = this.refs["dt1"];
            table.setColumns(columns, hasGroupedColumns);
            table = this.refs["dt2"];
            table.setColumns(columns, hasGroupedColumns);
        }
    }, {
        key: 'setColumns',
        value: function setColumns(columns, hasGroupedColumns) {
            var table = this.refs['dataTable'];
            table.setColumns(columns, hasGroupedColumns);
        }
    }, {
        key: 'adjustColumns',
        value: function adjustColumns(columns) {
            var table = this.refs['dataTable'];
            table.adjustColumns();
        }
    }, {
        key: 'visibleColumns',
        value: function visibleColumns(colIndexs, visble) {
            var table = this.refs['dataTable'];
            table.visibleColumns(colIndexs, visble);
        }
    }, {
        key: 'getDataTable',
        value: function getDataTable() {
            var table = this.refs['dataTable'];
            return table.getDataTable();
        }
    }, {
        key: 'rebuildFloatingHeader',
        value: function rebuildFloatingHeader() {
            var table = this.refs['dataTable'];
            table.rebuildFloatingHeader();
        }
    }, {
        key: 'initialize',
        value: function initialize() {
            var table = this.refs['dataTable'];
            table.initialize();
        }
    }, {
        key: 'renderIntoNode',
        value: function renderIntoNode(element, container, callback) {
            var table = this.refs['dataTable'];
            return table.renderIntoNode(element, container, callback);
        }
    }]);

    return Table;
}(React.Component);

exports.default = Table;

Table.propTypes = {
    columns: React.PropTypes.array,
    enablePaging: React.PropTypes.bool,
    pageLength: React.PropTypes.number,
    enableShowTotalCount: React.PropTypes.bool,
    enableComponentUpdates: React.PropTypes.bool,
    enableOrdering: React.PropTypes.bool,
    enableSearch: React.PropTypes.bool,
    enableVerticalScroll: React.PropTypes.bool,
    enableHorizontalScroll: React.PropTypes.bool,
    enableScroll: React.PropTypes.bool,
    enableDeferRender: React.PropTypes.bool,
    rowGroupingField: React.PropTypes.string,
    defaultSortField: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.arrayOf(React.PropTypes.string)]),
    enableFixedHeader: React.PropTypes.bool,
    enableFixedGroupingRow: React.PropTypes.bool,
    removeFirstGroupRow: React.PropTypes.bool,
    fixedHeaderOffset: React.PropTypes.number,
    isLoading: React.PropTypes.bool,
    leftLockedCount: React.PropTypes.number,
    rightLockedCount: React.PropTypes.number,
    rowCreatedCallback: React.PropTypes.func,
    headerCreatedCallback: React.PropTypes.func,
    cellClickCallback: React.PropTypes.func,
    fixedRowCreatedCallback: React.PropTypes.func,
    width: React.PropTypes.string,
    height: React.PropTypes.string,
    onColumnSortCallback: React.PropTypes.func,
    fixedColumn: React.PropTypes.number,
    isScrollTable: React.PropTypes.bool
};
Table.defaultProps = {
    width: '100%',
    height: '300px',
    pageLength: 20,
    enablePaging: true,
    enableShowTotalCount: true,
    enableComponentUpdates: false,
    enableOrdering: true,
    enableSearch: true
};

},{"./DataTables/DataTableWrapper":205,"./style.less":211,"lodash":"lodash","react":"react"}],211:[function(require,module,exports){
module.exports = {"Title-Page":"neptune_Title-Page_1eivn","Title-Page-Light":"neptune_Title-Page-Light_1eivn","Title-Section-Primary":"neptune_Title-Section-Primary_1eivn","Title-Section-Primary-Light":"neptune_Title-Section-Primary-Light_1eivn","TITLE-SUBTITLE":"neptune_TITLE-SUBTITLE_1eivn","Title-Section-Secondary":"neptune_Title-Section-Secondary_1eivn","TITLE-MODULE":"neptune_TITLE-MODULE_1eivn","LABEL-STANDARD":"neptune_LABEL-STANDARD_1eivn","LABEL-STANDARD-SEMIBOLD":"neptune_LABEL-STANDARD-SEMIBOLD_1eivn","LABEL-ATTRIBUTION":"neptune_LABEL-ATTRIBUTION_1eivn","LABEL-ATTRIBUTION-MA":"neptune_LABEL-ATTRIBUTION-MA_1eivn","LABEL-ATTRIBUTION-MIS":"neptune_LABEL-ATTRIBUTION-MIS_1eivn","Label-Footnote":"neptune_Label-Footnote_1eivn","Rating":"neptune_Rating_1eivn","Header-Primary":"neptune_Header-Primary_1eivn","Body-Primary":"neptune_Body-Primary_1eivn","Header-Secondary":"neptune_Header-Secondary_1eivn","Header-Secondary-Bold":"neptune_Header-Secondary-Bold_1eivn","Body-Secondary":"neptune_Body-Secondary_1eivn","TABLE-SECTION":"neptune_TABLE-SECTION_1eivn","Header-Tertiary":"neptune_Header-Tertiary_1eivn","Header-Tertiary-Bold":"neptune_Header-Tertiary-Bold_1eivn","Body-Tertiary":"neptune_Body-Tertiary_1eivn","Body-Tertiary-Med":"neptune_Body-Tertiary-Med_1eivn","Body-Text-Prompt":"neptune_Body-Text-Prompt_1eivn","Link-DkBlue":"neptune_Link-DkBlue_1eivn","LINK-GOLD":"neptune_LINK-GOLD_1eivn","LINK-GREY":"neptune_LINK-GREY_1eivn","LABEL-SIDENAV-TITLE":"neptune_LABEL-SIDENAV-TITLE_1eivn","MIS-BLUE":"neptune_MIS-BLUE_1eivn","MA-BLUE":"neptune_MA-BLUE_1eivn","MOODYS-BLUE":"neptune_MOODYS-BLUE_1eivn","HIGHLIGHT-BLUE":"neptune_HIGHLIGHT-BLUE_1eivn","GOLD":"neptune_GOLD_1eivn","GREY-1":"neptune_GREY-1_1eivn","GREY-2":"neptune_GREY-2_1eivn","GREY-3":"neptune_GREY-3_1eivn","GREY-4":"neptune_GREY-4_1eivn","BLACK":"neptune_BLACK_1eivn","RED":"neptune_RED_1eivn","GREEN":"neptune_GREEN_1eivn","icon_down_arrow":"neptune_icon_down_arrow_1eivn","icon_up_arrow":"neptune_icon_up_arrow_1eivn","icon_warning_icon":"neptune_icon_warning_icon_1eivn","icon_select_arrows":"neptune_icon_select_arrows_1eivn","icon_triangle_down":"neptune_icon_triangle_down_1eivn","icon_triangle_up":"neptune_icon_triangle_up_1eivn","icon_x_icon":"neptune_icon_x_icon_1eivn","icon_right_arrow":"neptune_icon_right_arrow_1eivn","MIS-BLUE-FONT":"neptune_MIS-BLUE-FONT_1eivn","MIS-BLUE-BG":"neptune_MIS-BLUE-BG_1eivn","MIS-BLUE-BORDER":"neptune_MIS-BLUE-BORDER_1eivn","MA-BLUE-FONT":"neptune_MA-BLUE-FONT_1eivn","MA-BLUE-BG":"neptune_MA-BLUE-BG_1eivn","MA-BLUE-BORDER":"neptune_MA-BLUE-BORDER_1eivn","MOODYS-BLUE-FONT":"neptune_MOODYS-BLUE-FONT_1eivn","MOODYS-BLUE-BG":"neptune_MOODYS-BLUE-BG_1eivn","MOODYS-BLUE-BORDER":"neptune_MOODYS-BLUE-BORDER_1eivn","HIGHLIGHT-BLUE-FONT":"neptune_HIGHLIGHT-BLUE-FONT_1eivn","HIGHLIGHT-BLUE-BG":"neptune_HIGHLIGHT-BLUE-BG_1eivn","HIGHLIGHT-BLUE-BORDER":"neptune_HIGHLIGHT-BLUE-BORDER_1eivn","GOLD-FONT":"neptune_GOLD-FONT_1eivn","GOLD-BG":"neptune_GOLD-BG_1eivn","GOLD-BORDER":"neptune_GOLD-BORDER_1eivn","GREY-1-FONT":"neptune_GREY-1-FONT_1eivn","GREY-1-BG":"neptune_GREY-1-BG_1eivn","GREY-1-BORDER":"neptune_GREY-1-BORDER_1eivn","GREY-2-FONT":"neptune_GREY-2-FONT_1eivn","GREY-2-BG":"neptune_GREY-2-BG_1eivn","GREY-2-BORDER":"neptune_GREY-2-BORDER_1eivn","GREY-3-FONT":"neptune_GREY-3-FONT_1eivn","GREY-3-BG":"neptune_GREY-3-BG_1eivn","GREY-3-BORDER":"neptune_GREY-3-BORDER_1eivn","GREY-4-FONT":"neptune_GREY-4-FONT_1eivn","GREY-4-BG":"neptune_GREY-4-BG_1eivn","GREY-4-BORDER":"neptune_GREY-4-BORDER_1eivn","BLACK-FONT":"neptune_BLACK-FONT_1eivn","BLACK-BG":"neptune_BLACK-BG_1eivn","BLACK-BORDER":"neptune_BLACK-BORDER_1eivn","RED-FONT":"neptune_RED-FONT_1eivn","RED-BG":"neptune_RED-BG_1eivn","RED-BORDER":"neptune_RED-BORDER_1eivn","GREEN-FONT":"neptune_GREEN-FONT_1eivn","GREEN-BG":"neptune_GREEN-BG_1eivn","GREEN-BORDER":"neptune_GREEN-BORDER_1eivn"}
},{}],212:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TabPanel = function (_React$Component) {
    _inherits(TabPanel, _React$Component);

    function TabPanel() {
        _classCallCheck(this, TabPanel);

        return _possibleConstructorReturn(this, (TabPanel.__proto__ || Object.getPrototypeOf(TabPanel)).apply(this, arguments));
    }

    _createClass(TabPanel, [{
        key: 'render',
        value: function render() {
            return React.createElement(
                'div',
                null,
                this.props.children
            );
        }
    }]);

    return TabPanel;
}(React.Component);

exports.default = TabPanel;

TabPanel.propTypes = {
    children: React.PropTypes.any,
    disabled: React.PropTypes.string,
    title: React.PropTypes.string.isRequired
};

},{"react":"react"}],213:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _reactDom = require('react-dom');

var ReactDOM = _interopRequireWildcard(_reactDom);

var _mdcClassnames = require('mdc-classnames');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var styles = require('./style.less');
var getStyle = function getStyle(elem, value) {
    var view = elem.ownerDocument.defaultView;
    var map = {};
    if (!view || !view.opener) {
        view = window;
    }
    var getAllStyle = view.getComputedStyle(elem);
    if (Array.isArray(value)) {
        var length = value.length;
        var i = 0;
        for (; i < length; i++) {
            map[value[i]] = getAllStyle[value[i]];
        }
        return map;
    }
    var styleValue = getAllStyle[value];
    return styleValue;
};
var getParents = function getParents(elem, targetSelector) {
    // targetSelector is optional
    if (targetSelector === undefined) {
        targetSelector = document;
    }
    var parents = [];
    var pNode = elem.parentNode;
    while (pNode !== targetSelector) {
        var tempNode = pNode;
        parents.push(tempNode);
        pNode = tempNode.parentNode;
    }
    // parents.push(targetSelector);
    return parents;
};

var Tabs = function (_React$Component) {
    _inherits(Tabs, _React$Component);

    function Tabs(props) {
        _classCallCheck(this, Tabs);

        var _this = _possibleConstructorReturn(this, (Tabs.__proto__ || Object.getPrototypeOf(Tabs)).call(this, props));

        _this.stickyHeaderTop = 0;
        _this.state = { tabActive: _this.props.tabActive };
        _this.handleScroll = _this.handleScroll.bind(_this);
        _this.stickyHeaderTop = 0;
        return _this;
    }

    _createClass(Tabs, [{
        key: 'render',
        value: function render() {
            var className = (0, _mdcClassnames.classSet)('tabs', this.props.className);
            return React.createElement(
                'div',
                { className: styles[className] },
                this.getMenuItems(),
                React.createElement('div', { className: styles['tab-extension'] }),
                this.getSelectedPanel()
            );
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            var index = this.state.tabActive;
            var $selectedPanel = this.refs['tab-panel'];
            var $selectedMenu = this.refs['tab-menu-' + index];
            if (this.props.onMount) {
                this.props.onMount(index, $selectedPanel, $selectedMenu);
            }
            if (this.props.enableFixedHeader) {
                var node = ReactDOM.findDOMNode(this);
                // console.log(node);
                this.stickyHeaderTop = node.getBoundingClientRect().top - parseInt(this.props.fixedHeaderOffset, 10);
                var scroller = this.scrollParent(node);
                scroller.addEventListener('scroll', this.handleScroll);
            }
        }
    }, {
        key: 'scrollParent',
        value: function scrollParent(elem) {
            var overflowRegex = /(auto|scroll)/;
            var position = getStyle(elem, 'position');
            var excludeStaticParent = position === 'absolute';
            var scrollParents = [].filter.call(getParents(elem), function (el) {
                if (excludeStaticParent && getStyle(el, 'position') === 'static') {
                    return false;
                }
                var overflowState = getStyle(el, ['overflow', 'overflowX', 'overflowY']);
                return overflowRegex.test(overflowState.overflow + overflowState.overflowX + overflowState.overflowY);
            });
            // scrollParents = (scrollParents === undefined) ? [] : scrollParents[0];
            return position === 'fixed' || !scrollParents.length ? elem.ownerDocument || document : scrollParents;
        }
    }, {
        key: 'handleScroll',
        value: function handleScroll() /*evt*/{
            var node = ReactDOM.findDOMNode(this);
            //const scroller = evt.currentTarget;
            var position = window.pageYOffset > this.stickyHeaderTop ? 'fixed' : '';
            if (node.style.position !== position) {
                node.style.top = this.props.fixedHeaderOffset || 0;
                node.style.position = position;
                node.style.zIndex = 9999;
            }
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            if (this.props.enableFixedHeader) {
                var node = ReactDOM.findDOMNode(this);
                var scroller = this.scrollParent(node);
                scroller.removeEventListener('scroll', this.handleScroll);
            }
        }
    }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(newProps) {
            if (newProps.tabActive && newProps.tabActive !== this.props.tabActive) {
                this.setState({ tabActive: newProps.tabActive });
            }
        }
    }, {
        key: 'setActive',
        value: function setActive(index, e) {
            e.preventDefault();
            var onAfterChange = this.props.onAfterChange;
            var onBeforeChange = this.props.onBeforeChange;
            var $selectedPanel = this.refs['tab-panel'];
            var $selectedTabMenu = this.refs['tab-menu-' + index];
            if (onBeforeChange) {
                var cancel = onBeforeChange(index, $selectedPanel, $selectedTabMenu);
                if (cancel === false) {
                    return;
                }
            }
            this.setState({ tabActive: index }, function () {
                if (onAfterChange) {
                    onAfterChange(index, $selectedPanel, $selectedTabMenu);
                }
            });
        }
    }, {
        key: 'getSelectedPanel',
        value: function getSelectedPanel() {
            var index = this.state.tabActive - 1;
            var $panel = this.props.children[index];
            return React.createElement(
                'article',
                { ref: 'tab-panel', className: styles['tabs-panel-active'] },
                $panel
            );
        }
    }, {
        key: 'getMenuItems',
        value: function getMenuItems() {
            var _this2 = this;

            if (!this.props.children) {
                throw new Error('Tabs must contain at least one Tabs.Panel');
            }
            if (!Array.isArray(this.props.children)) {
                this.props.children = [this.props.children];
            }
            var $menuItems = this.props.children.map(function ($panel) {
                return typeof $panel === 'function' ? $panel() : $panel;
            }).filter(function ($panel) {
                return $panel;
            }).map(function ($panel, index) {
                var ref = 'tab-menu-' + (index + 1);
                var title = $panel.props.title;
                var disabled = 'false';
                if ($panel.props.disabled) {
                    disabled = $panel.props.disabled;
                }
                var activeTabClass = (0, _mdcClassnames.classSet)(_this2.state.tabActive === index + 1 ? 'tabs-menu-item-active' : 'tabs-menu-item', '');
                if (disabled === 'true') {
                    activeTabClass = 'tabs-menu-item-disabled';
                }
                /* eslint-disable react/jsx-no-bind */
                return React.createElement(
                    'li',
                    { ref: ref, key: index, className: styles[activeTabClass] },
                    React.createElement(
                        'a',
                        { onClick: _this2.setActive.bind(_this2, index + 1) },
                        title
                    )
                );
            });
            return React.createElement(
                'nav',
                { className: styles['tabs-navigation'] },
                React.createElement(
                    'ul',
                    { className: styles['tabs-menu'] },
                    $menuItems
                )
            );
        }
    }]);

    return Tabs;
}(React.Component);

exports.default = Tabs;

Tabs.propTypes = {
    children: React.PropTypes.any.isRequired,
    className: React.PropTypes.string,
    enableFixedHeader: React.PropTypes.bool,
    fixedHeaderOffset: React.PropTypes.string,
    onAfterChange: React.PropTypes.func,
    onBeforeChange: React.PropTypes.func,
    onMount: React.PropTypes.func,
    tabActive: React.PropTypes.number
};

},{"./style.less":214,"mdc-classnames":"mdc-classnames","react":"react","react-dom":"react-dom"}],214:[function(require,module,exports){
module.exports = {"Title-Page":"neptune_Title-Page_nsyoi","Title-Page-Light":"neptune_Title-Page-Light_nsyoi","Title-Section-Primary":"neptune_Title-Section-Primary_nsyoi","Title-Section-Primary-Light":"neptune_Title-Section-Primary-Light_nsyoi","TITLE-SUBTITLE":"neptune_TITLE-SUBTITLE_nsyoi","Title-Section-Secondary":"neptune_Title-Section-Secondary_nsyoi","TITLE-MODULE":"neptune_TITLE-MODULE_nsyoi","LABEL-STANDARD":"neptune_LABEL-STANDARD_nsyoi","LABEL-STANDARD-SEMIBOLD":"neptune_LABEL-STANDARD-SEMIBOLD_nsyoi","LABEL-ATTRIBUTION":"neptune_LABEL-ATTRIBUTION_nsyoi","LABEL-ATTRIBUTION-MA":"neptune_LABEL-ATTRIBUTION-MA_nsyoi","LABEL-ATTRIBUTION-MIS":"neptune_LABEL-ATTRIBUTION-MIS_nsyoi","Label-Footnote":"neptune_Label-Footnote_nsyoi","Rating":"neptune_Rating_nsyoi","Header-Primary":"neptune_Header-Primary_nsyoi","Body-Primary":"neptune_Body-Primary_nsyoi","Header-Secondary":"neptune_Header-Secondary_nsyoi","Header-Secondary-Bold":"neptune_Header-Secondary-Bold_nsyoi","Body-Secondary":"neptune_Body-Secondary_nsyoi","TABLE-SECTION":"neptune_TABLE-SECTION_nsyoi","Header-Tertiary":"neptune_Header-Tertiary_nsyoi","Header-Tertiary-Bold":"neptune_Header-Tertiary-Bold_nsyoi","Body-Tertiary":"neptune_Body-Tertiary_nsyoi","Body-Tertiary-Med":"neptune_Body-Tertiary-Med_nsyoi","Body-Text-Prompt":"neptune_Body-Text-Prompt_nsyoi","Link-DkBlue":"neptune_Link-DkBlue_nsyoi","LINK-GOLD":"neptune_LINK-GOLD_nsyoi","LINK-GREY":"neptune_LINK-GREY_nsyoi","LABEL-SIDENAV-TITLE":"neptune_LABEL-SIDENAV-TITLE_nsyoi","MIS-BLUE":"neptune_MIS-BLUE_nsyoi","MA-BLUE":"neptune_MA-BLUE_nsyoi","MOODYS-BLUE":"neptune_MOODYS-BLUE_nsyoi","HIGHLIGHT-BLUE":"neptune_HIGHLIGHT-BLUE_nsyoi","GOLD":"neptune_GOLD_nsyoi","GREY-1":"neptune_GREY-1_nsyoi","GREY-2":"neptune_GREY-2_nsyoi","GREY-3":"neptune_GREY-3_nsyoi","GREY-4":"neptune_GREY-4_nsyoi","BLACK":"neptune_BLACK_nsyoi","RED":"neptune_RED_nsyoi","GREEN":"neptune_GREEN_nsyoi","icon_down_arrow":"neptune_icon_down_arrow_nsyoi","icon_up_arrow":"neptune_icon_up_arrow_nsyoi","icon_warning_icon":"neptune_icon_warning_icon_nsyoi","icon_select_arrows":"neptune_icon_select_arrows_nsyoi","icon_triangle_down":"neptune_icon_triangle_down_nsyoi","icon_triangle_up":"neptune_icon_triangle_up_nsyoi","icon_x_icon":"neptune_icon_x_icon_nsyoi","icon_right_arrow":"neptune_icon_right_arrow_nsyoi","MIS-BLUE-FONT":"neptune_MIS-BLUE-FONT_nsyoi","MIS-BLUE-BG":"neptune_MIS-BLUE-BG_nsyoi","MIS-BLUE-BORDER":"neptune_MIS-BLUE-BORDER_nsyoi","MA-BLUE-FONT":"neptune_MA-BLUE-FONT_nsyoi","MA-BLUE-BG":"neptune_MA-BLUE-BG_nsyoi","MA-BLUE-BORDER":"neptune_MA-BLUE-BORDER_nsyoi","MOODYS-BLUE-FONT":"neptune_MOODYS-BLUE-FONT_nsyoi","MOODYS-BLUE-BG":"neptune_MOODYS-BLUE-BG_nsyoi","MOODYS-BLUE-BORDER":"neptune_MOODYS-BLUE-BORDER_nsyoi","HIGHLIGHT-BLUE-FONT":"neptune_HIGHLIGHT-BLUE-FONT_nsyoi","HIGHLIGHT-BLUE-BG":"neptune_HIGHLIGHT-BLUE-BG_nsyoi","HIGHLIGHT-BLUE-BORDER":"neptune_HIGHLIGHT-BLUE-BORDER_nsyoi","GOLD-FONT":"neptune_GOLD-FONT_nsyoi","GOLD-BG":"neptune_GOLD-BG_nsyoi","GOLD-BORDER":"neptune_GOLD-BORDER_nsyoi","GREY-1-FONT":"neptune_GREY-1-FONT_nsyoi","GREY-1-BG":"neptune_GREY-1-BG_nsyoi","GREY-1-BORDER":"neptune_GREY-1-BORDER_nsyoi","GREY-2-FONT":"neptune_GREY-2-FONT_nsyoi","GREY-2-BG":"neptune_GREY-2-BG_nsyoi","GREY-2-BORDER":"neptune_GREY-2-BORDER_nsyoi","GREY-3-FONT":"neptune_GREY-3-FONT_nsyoi","GREY-3-BG":"neptune_GREY-3-BG_nsyoi","GREY-3-BORDER":"neptune_GREY-3-BORDER_nsyoi","GREY-4-FONT":"neptune_GREY-4-FONT_nsyoi","GREY-4-BG":"neptune_GREY-4-BG_nsyoi","GREY-4-BORDER":"neptune_GREY-4-BORDER_nsyoi","BLACK-FONT":"neptune_BLACK-FONT_nsyoi","BLACK-BG":"neptune_BLACK-BG_nsyoi","BLACK-BORDER":"neptune_BLACK-BORDER_nsyoi","RED-FONT":"neptune_RED-FONT_nsyoi","RED-BG":"neptune_RED-BG_nsyoi","RED-BORDER":"neptune_RED-BORDER_nsyoi","GREEN-FONT":"neptune_GREEN-FONT_nsyoi","GREEN-BG":"neptune_GREEN-BG_nsyoi","GREEN-BORDER":"neptune_GREEN-BORDER_nsyoi","tabs":"neptune_tabs_nsyoi","tabs-navigation":"neptune_tabs-navigation_nsyoi","tabs-menu":"neptune_tabs-menu_nsyoi","tabs-menu-item":"neptune_tabs-menu-item_nsyoi","tabs-menu-item-active":"neptune_tabs-menu-item-active_nsyoi","tabs-menu-item-disabled":"neptune_tabs-menu-item-disabled_nsyoi","tab-extension":"neptune_tab-extension_nsyoi","tabs-panel":"neptune_tabs-panel_nsyoi","tabs-panel-active":"neptune_tabs-panel-active_nsyoi"}
},{}],215:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _mdcClassnames = require('mdc-classnames');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var styles = require('./style.less');
var cx = _mdcClassnames.setCssModule.bind(styles);

var TextBox = function (_React$Component) {
    _inherits(TextBox, _React$Component);

    function TextBox(props) {
        _classCallCheck(this, TextBox);

        var _this = _possibleConstructorReturn(this, (TextBox.__proto__ || Object.getPrototypeOf(TextBox)).call(this, props));

        _this.state = { isActive: false, textVal: _this.props.value };
        _this.onInputBlur = _this.onInputBlur.bind(_this);
        _this.onInputChange = _this.onInputChange.bind(_this);
        _this.onInputFocus = _this.onInputFocus.bind(_this);
        return _this;
    }

    _createClass(TextBox, [{
        key: 'render',
        value: function render() {
            var elemProps = { onBlur: this.onInputBlur, onChange: this.onInputChange, onFocus: this.onInputFocus, placeholder: this.props.placeholder || '', type: 'text', value: this.state.textVal };
            if (this.props.disabled) {
                elemProps.disabled = true;
            }
            var classes = cx({
                active: this.state.isActive && !this.props.error,
                default: !this.state.isActive && !this.props.error,
                defaultHeight: !this.props.height,
                error: this.props.error
            });
            elemProps.className = (0, _mdcClassnames.setCssModule)(classes, this.props.className);
            var blockStyle = {};
            if (this.props.width) {
                blockStyle.width = this.props.width;
            }
            if (this.props.height) {
                blockStyle.height = this.props.height;
            }
            if (this.props.multiline) {
                return React.createElement(
                    'div',
                    null,
                    React.createElement('textarea', _extends({}, elemProps, { ref: 'refInput', style: blockStyle }))
                );
            }
            return React.createElement(
                'div',
                null,
                React.createElement('input', _extends({}, elemProps, { ref: 'refInput', style: blockStyle }))
            );
        }
    }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            if (nextProps.value !== this.props.value || this.state.textVal !== nextProps.value) {
                this.setState({ isActive: this.state.isActive, textVal: nextProps.value });
            }
        }
    }, {
        key: 'onInputFocus',
        value: function onInputFocus(e) {
            this.setState({ isActive: true });
            if (this.props.onFocus) {
                this.props.onFocus(e);
            }
        }
    }, {
        key: 'onInputBlur',
        value: function onInputBlur(e) {
            this.setState({ isActive: false });
            if (this.props.onBlur) {
                this.props.onBlur(e);
            }
        }
    }, {
        key: 'onInputChange',
        value: function onInputChange(e) {
            this.setState({ textVal: e.currentTarget.value });
            if (this.props.onChange) {
                this.props.onChange(e, e.currentTarget.value);
            }
        }
    }]);

    return TextBox;
}(React.Component);

exports.default = TextBox;

TextBox.propTypes = {
    className: React.PropTypes.string,
    disabled: React.PropTypes.bool,
    error: React.PropTypes.bool,
    height: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.number]),
    multiline: React.PropTypes.bool,
    name: React.PropTypes.string,
    onBlur: React.PropTypes.func,
    onChange: React.PropTypes.func,
    onFocus: React.PropTypes.func,
    placeholder: React.PropTypes.string,
    value: React.PropTypes.string,
    width: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.number])
};

},{"./style.less":216,"mdc-classnames":"mdc-classnames","react":"react"}],216:[function(require,module,exports){
module.exports = {"Title-Page":"neptune_Title-Page_1leir","Title-Page-Light":"neptune_Title-Page-Light_1leir","Title-Section-Primary":"neptune_Title-Section-Primary_1leir","Title-Section-Primary-Light":"neptune_Title-Section-Primary-Light_1leir","TITLE-SUBTITLE":"neptune_TITLE-SUBTITLE_1leir","Title-Section-Secondary":"neptune_Title-Section-Secondary_1leir","TITLE-MODULE":"neptune_TITLE-MODULE_1leir","LABEL-STANDARD":"neptune_LABEL-STANDARD_1leir","LABEL-STANDARD-SEMIBOLD":"neptune_LABEL-STANDARD-SEMIBOLD_1leir","LABEL-ATTRIBUTION":"neptune_LABEL-ATTRIBUTION_1leir","LABEL-ATTRIBUTION-MA":"neptune_LABEL-ATTRIBUTION-MA_1leir","LABEL-ATTRIBUTION-MIS":"neptune_LABEL-ATTRIBUTION-MIS_1leir","Label-Footnote":"neptune_Label-Footnote_1leir","Rating":"neptune_Rating_1leir","Header-Primary":"neptune_Header-Primary_1leir","Body-Primary":"neptune_Body-Primary_1leir","Header-Secondary":"neptune_Header-Secondary_1leir","Header-Secondary-Bold":"neptune_Header-Secondary-Bold_1leir","Body-Secondary":"neptune_Body-Secondary_1leir","TABLE-SECTION":"neptune_TABLE-SECTION_1leir","Header-Tertiary":"neptune_Header-Tertiary_1leir","Header-Tertiary-Bold":"neptune_Header-Tertiary-Bold_1leir","Body-Tertiary":"neptune_Body-Tertiary_1leir","Body-Tertiary-Med":"neptune_Body-Tertiary-Med_1leir","Body-Text-Prompt":"neptune_Body-Text-Prompt_1leir","Link-DkBlue":"neptune_Link-DkBlue_1leir","LINK-GOLD":"neptune_LINK-GOLD_1leir","LINK-GREY":"neptune_LINK-GREY_1leir","LABEL-SIDENAV-TITLE":"neptune_LABEL-SIDENAV-TITLE_1leir","MIS-BLUE":"neptune_MIS-BLUE_1leir","MA-BLUE":"neptune_MA-BLUE_1leir","MOODYS-BLUE":"neptune_MOODYS-BLUE_1leir","HIGHLIGHT-BLUE":"neptune_HIGHLIGHT-BLUE_1leir","GOLD":"neptune_GOLD_1leir","GREY-1":"neptune_GREY-1_1leir","GREY-2":"neptune_GREY-2_1leir","GREY-3":"neptune_GREY-3_1leir","GREY-4":"neptune_GREY-4_1leir","BLACK":"neptune_BLACK_1leir","RED":"neptune_RED_1leir","GREEN":"neptune_GREEN_1leir","icon_down_arrow":"neptune_icon_down_arrow_1leir","icon_up_arrow":"neptune_icon_up_arrow_1leir","icon_warning_icon":"neptune_icon_warning_icon_1leir","icon_select_arrows":"neptune_icon_select_arrows_1leir","icon_triangle_down":"neptune_icon_triangle_down_1leir","icon_triangle_up":"neptune_icon_triangle_up_1leir","icon_x_icon":"neptune_icon_x_icon_1leir","icon_right_arrow":"neptune_icon_right_arrow_1leir","MIS-BLUE-FONT":"neptune_MIS-BLUE-FONT_1leir","MIS-BLUE-BG":"neptune_MIS-BLUE-BG_1leir","MIS-BLUE-BORDER":"neptune_MIS-BLUE-BORDER_1leir","MA-BLUE-FONT":"neptune_MA-BLUE-FONT_1leir","MA-BLUE-BG":"neptune_MA-BLUE-BG_1leir","MA-BLUE-BORDER":"neptune_MA-BLUE-BORDER_1leir","MOODYS-BLUE-FONT":"neptune_MOODYS-BLUE-FONT_1leir","MOODYS-BLUE-BG":"neptune_MOODYS-BLUE-BG_1leir","MOODYS-BLUE-BORDER":"neptune_MOODYS-BLUE-BORDER_1leir","HIGHLIGHT-BLUE-FONT":"neptune_HIGHLIGHT-BLUE-FONT_1leir","HIGHLIGHT-BLUE-BG":"neptune_HIGHLIGHT-BLUE-BG_1leir","HIGHLIGHT-BLUE-BORDER":"neptune_HIGHLIGHT-BLUE-BORDER_1leir","GOLD-FONT":"neptune_GOLD-FONT_1leir","GOLD-BG":"neptune_GOLD-BG_1leir","GOLD-BORDER":"neptune_GOLD-BORDER_1leir","GREY-1-FONT":"neptune_GREY-1-FONT_1leir","GREY-1-BG":"neptune_GREY-1-BG_1leir","GREY-1-BORDER":"neptune_GREY-1-BORDER_1leir","GREY-2-FONT":"neptune_GREY-2-FONT_1leir","GREY-2-BG":"neptune_GREY-2-BG_1leir","GREY-2-BORDER":"neptune_GREY-2-BORDER_1leir","GREY-3-FONT":"neptune_GREY-3-FONT_1leir","GREY-3-BG":"neptune_GREY-3-BG_1leir","GREY-3-BORDER":"neptune_GREY-3-BORDER_1leir","GREY-4-FONT":"neptune_GREY-4-FONT_1leir","GREY-4-BG":"neptune_GREY-4-BG_1leir","GREY-4-BORDER":"neptune_GREY-4-BORDER_1leir","BLACK-FONT":"neptune_BLACK-FONT_1leir","BLACK-BG":"neptune_BLACK-BG_1leir","BLACK-BORDER":"neptune_BLACK-BORDER_1leir","RED-FONT":"neptune_RED-FONT_1leir","RED-BG":"neptune_RED-BG_1leir","RED-BORDER":"neptune_RED-BORDER_1leir","GREEN-FONT":"neptune_GREEN-FONT_1leir","GREEN-BG":"neptune_GREEN-BG_1leir","GREEN-BORDER":"neptune_GREEN-BORDER_1leir","default":"neptune_default_1leir","active":"neptune_active_1leir","defaultHeight":"neptune_defaultHeight_1leir","error":"neptune_error_1leir"}
},{}],217:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _mdcClassnames = require('mdc-classnames');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var styles = require('./style.less');

var ToggleButton = function (_React$Component) {
    _inherits(ToggleButton, _React$Component);

    function ToggleButton(props) {
        _classCallCheck(this, ToggleButton);

        var _this = _possibleConstructorReturn(this, (ToggleButton.__proto__ || Object.getPrototypeOf(ToggleButton)).call(this, props));

        _this.onButtonToggle = _this.onButtonToggle.bind(_this);
        var selected = _this.props.selected;
        if (typeof _this.props.defaultPressedIndex !== 'undefined') {
            selected = _this.props.defaultPressedIndex;
            console.warn("'defaultPressedIndex' prop is deprecated and will be removed. Please use 'selected' prop instead");
        }
        _this.state = { selected: selected };
        return _this;
    }

    _createClass(ToggleButton, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var childrenCount = React.Children.count(this.props.children);
            var toggleButton = (0, _mdcClassnames.classSet)('toggle-button', '');
            var children = React.Children.map(this.props.children, function (el, indx) {
                var childClassName = (0, _mdcClassnames.classSet)('toggle-button-horizontal', '');
                if (indx === 0) {
                    childClassName = (0, _mdcClassnames.classSet)('toggle-button-left-horizontal', '');
                } else if (indx === childrenCount - 1) {
                    childClassName = (0, _mdcClassnames.classSet)('toggle-button-right-horizontal', '');
                }
                var childProps = {
                    className: styles[childClassName],
                    key: 'item-' + indx,
                    mountIndex: indx,
                    onClick: _this2.onButtonToggle,
                    primary: _this2.state.selected === indx
                };
                if (_this2.state.selected === indx) {
                    childClassName = (0, _mdcClassnames.classSet)('toggle-button-selected', '');
                    childProps.className += ' ' + styles[childClassName];
                }
                if (_this2.props.disabled !== undefined && _this2.props.disabled !== false) {
                    childProps.disabled = true;
                }
                return React.cloneElement(el, childProps, el.props.children);
            });
            return React.createElement(
                'div',
                { className: styles[toggleButton] },
                children
            );
        }
    }, {
        key: 'onButtonToggle',
        value: function onButtonToggle(event, component) {
            if (this.props.onToggle) {
                this.props.onToggle(component.props.mountIndex);
            }
        }
    }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            if (typeof nextProps.defaultPressedIndex !== 'undefined') {
                this.setState({ selected: nextProps.defaultPressedIndex });
                console.warn("'defaultPressedIndex' prop is deprecated and will be removed. Please use 'selected' prop instead");
            } else {
                this.setState({ selected: nextProps.selected });
            }
        }
    }]);

    return ToggleButton;
}(React.Component);

exports.default = ToggleButton;


ToggleButton.propTypes = {
    defaultPressedIndex: React.PropTypes.number,
    disabled: React.PropTypes.bool,
    onToggle: React.PropTypes.func,
    selected: React.PropTypes.number.isRequired
};

},{"./style.less":218,"mdc-classnames":"mdc-classnames","react":"react"}],218:[function(require,module,exports){
module.exports = {"Title-Page":"neptune_Title-Page_1s7cf","Title-Page-Light":"neptune_Title-Page-Light_1s7cf","Title-Section-Primary":"neptune_Title-Section-Primary_1s7cf","Title-Section-Primary-Light":"neptune_Title-Section-Primary-Light_1s7cf","TITLE-SUBTITLE":"neptune_TITLE-SUBTITLE_1s7cf","Title-Section-Secondary":"neptune_Title-Section-Secondary_1s7cf","TITLE-MODULE":"neptune_TITLE-MODULE_1s7cf","LABEL-STANDARD":"neptune_LABEL-STANDARD_1s7cf","LABEL-STANDARD-SEMIBOLD":"neptune_LABEL-STANDARD-SEMIBOLD_1s7cf","LABEL-ATTRIBUTION":"neptune_LABEL-ATTRIBUTION_1s7cf","LABEL-ATTRIBUTION-MA":"neptune_LABEL-ATTRIBUTION-MA_1s7cf","LABEL-ATTRIBUTION-MIS":"neptune_LABEL-ATTRIBUTION-MIS_1s7cf","Label-Footnote":"neptune_Label-Footnote_1s7cf","Rating":"neptune_Rating_1s7cf","Header-Primary":"neptune_Header-Primary_1s7cf","Body-Primary":"neptune_Body-Primary_1s7cf","Header-Secondary":"neptune_Header-Secondary_1s7cf","Header-Secondary-Bold":"neptune_Header-Secondary-Bold_1s7cf","Body-Secondary":"neptune_Body-Secondary_1s7cf","TABLE-SECTION":"neptune_TABLE-SECTION_1s7cf","Header-Tertiary":"neptune_Header-Tertiary_1s7cf","Header-Tertiary-Bold":"neptune_Header-Tertiary-Bold_1s7cf","Body-Tertiary":"neptune_Body-Tertiary_1s7cf","Body-Tertiary-Med":"neptune_Body-Tertiary-Med_1s7cf","Body-Text-Prompt":"neptune_Body-Text-Prompt_1s7cf","Link-DkBlue":"neptune_Link-DkBlue_1s7cf","LINK-GOLD":"neptune_LINK-GOLD_1s7cf","LINK-GREY":"neptune_LINK-GREY_1s7cf","LABEL-SIDENAV-TITLE":"neptune_LABEL-SIDENAV-TITLE_1s7cf","MIS-BLUE":"neptune_MIS-BLUE_1s7cf","MA-BLUE":"neptune_MA-BLUE_1s7cf","MOODYS-BLUE":"neptune_MOODYS-BLUE_1s7cf","HIGHLIGHT-BLUE":"neptune_HIGHLIGHT-BLUE_1s7cf","GOLD":"neptune_GOLD_1s7cf","GREY-1":"neptune_GREY-1_1s7cf","GREY-2":"neptune_GREY-2_1s7cf","GREY-3":"neptune_GREY-3_1s7cf","GREY-4":"neptune_GREY-4_1s7cf","BLACK":"neptune_BLACK_1s7cf","RED":"neptune_RED_1s7cf","GREEN":"neptune_GREEN_1s7cf","icon_down_arrow":"neptune_icon_down_arrow_1s7cf","icon_up_arrow":"neptune_icon_up_arrow_1s7cf","icon_warning_icon":"neptune_icon_warning_icon_1s7cf","icon_select_arrows":"neptune_icon_select_arrows_1s7cf","icon_triangle_down":"neptune_icon_triangle_down_1s7cf","icon_triangle_up":"neptune_icon_triangle_up_1s7cf","icon_x_icon":"neptune_icon_x_icon_1s7cf","icon_right_arrow":"neptune_icon_right_arrow_1s7cf","MIS-BLUE-FONT":"neptune_MIS-BLUE-FONT_1s7cf","MIS-BLUE-BG":"neptune_MIS-BLUE-BG_1s7cf","MIS-BLUE-BORDER":"neptune_MIS-BLUE-BORDER_1s7cf","MA-BLUE-FONT":"neptune_MA-BLUE-FONT_1s7cf","MA-BLUE-BG":"neptune_MA-BLUE-BG_1s7cf","MA-BLUE-BORDER":"neptune_MA-BLUE-BORDER_1s7cf","MOODYS-BLUE-FONT":"neptune_MOODYS-BLUE-FONT_1s7cf","MOODYS-BLUE-BG":"neptune_MOODYS-BLUE-BG_1s7cf","MOODYS-BLUE-BORDER":"neptune_MOODYS-BLUE-BORDER_1s7cf","HIGHLIGHT-BLUE-FONT":"neptune_HIGHLIGHT-BLUE-FONT_1s7cf","HIGHLIGHT-BLUE-BG":"neptune_HIGHLIGHT-BLUE-BG_1s7cf","HIGHLIGHT-BLUE-BORDER":"neptune_HIGHLIGHT-BLUE-BORDER_1s7cf","GOLD-FONT":"neptune_GOLD-FONT_1s7cf","GOLD-BG":"neptune_GOLD-BG_1s7cf","GOLD-BORDER":"neptune_GOLD-BORDER_1s7cf","GREY-1-FONT":"neptune_GREY-1-FONT_1s7cf","GREY-1-BG":"neptune_GREY-1-BG_1s7cf","GREY-1-BORDER":"neptune_GREY-1-BORDER_1s7cf","GREY-2-FONT":"neptune_GREY-2-FONT_1s7cf","GREY-2-BG":"neptune_GREY-2-BG_1s7cf","GREY-2-BORDER":"neptune_GREY-2-BORDER_1s7cf","GREY-3-FONT":"neptune_GREY-3-FONT_1s7cf","GREY-3-BG":"neptune_GREY-3-BG_1s7cf","GREY-3-BORDER":"neptune_GREY-3-BORDER_1s7cf","GREY-4-FONT":"neptune_GREY-4-FONT_1s7cf","GREY-4-BG":"neptune_GREY-4-BG_1s7cf","GREY-4-BORDER":"neptune_GREY-4-BORDER_1s7cf","BLACK-FONT":"neptune_BLACK-FONT_1s7cf","BLACK-BG":"neptune_BLACK-BG_1s7cf","BLACK-BORDER":"neptune_BLACK-BORDER_1s7cf","RED-FONT":"neptune_RED-FONT_1s7cf","RED-BG":"neptune_RED-BG_1s7cf","RED-BORDER":"neptune_RED-BORDER_1s7cf","GREEN-FONT":"neptune_GREEN-FONT_1s7cf","GREEN-BG":"neptune_GREEN-BG_1s7cf","GREEN-BORDER":"neptune_GREEN-BORDER_1s7cf","toggle-button":"neptune_toggle-button_1s7cf","toggle-button-horizontal":"neptune_toggle-button-horizontal_1s7cf","toggle-button-selected":"neptune_toggle-button-selected_1s7cf","toggle-button-right-horizontal":"neptune_toggle-button-right-horizontal_1s7cf","toggle-button-left-horizontal":"neptune_toggle-button-left-horizontal_1s7cf"}
},{}],219:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _index = require('../Popover/index');

var _index2 = _interopRequireDefault(_index);

var _Content = require('../Popover/Content');

var _Content2 = _interopRequireDefault(_Content);

var _Trigger = require('../Popover/Trigger');

var _Trigger2 = _interopRequireDefault(_Trigger);

var _mdcClassnames = require('mdc-classnames');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var styles = require('./style.less');

var cx = _mdcClassnames.setCssModule.bind(styles);

var Tooltip = function (_React$Component) {
    _inherits(Tooltip, _React$Component);

    function Tooltip(props) {
        _classCallCheck(this, Tooltip);

        var _this = _possibleConstructorReturn(this, (Tooltip.__proto__ || Object.getPrototypeOf(Tooltip)).call(this, props));

        _this.state = {
            align: _this.props.align ? _this.props.align : "top-right"
        };
        return _this;
    }

    _createClass(Tooltip, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            // only update if component manages its own state
            if (!this.props.readonly) {
                if (nextProps.align !== this.props.align) {
                    this.setState({ align: nextProps.align });
                }
            }
        }
    }, {
        key: 'render',
        value: function render() {
            //eslint-disable-line max-statements
            return React.createElement(
                'div',
                null,
                React.createElement(
                    _index2.default,
                    { trigger: 'hover', toolTips: true, align: this.state.align },
                    React.createElement(
                        _Trigger2.default,
                        null,
                        this.props.tooltipTrigger
                    ),
                    React.createElement(
                        _Content2.default,
                        null,
                        React.createElement(
                            'div',
                            { className: cx(styles.toolTipstext), ref: 'tooltipstext' },
                            this.props.tooltipText
                        )
                    )
                )
            );
        }
    }]);

    return Tooltip;
}(React.Component);

exports.default = Tooltip;

Tooltip.propTypes = {
    tooltipText: React.PropTypes.string,
    tooltipTrigger: React.PropTypes.any,
    align: React.PropTypes.oneOf(['top-right', 'top-left', 'right', 'left', 'bottom-right', 'bottom-left', 'right-top', 'left-top', 'right-bottom', 'left-bottom'])
};
_index2.default.defaultProps = {
    align: 'top-right'
};

},{"../Popover/Content":174,"../Popover/Trigger":176,"../Popover/index":177,"./style.less":220,"mdc-classnames":"mdc-classnames","react":"react"}],220:[function(require,module,exports){
module.exports = {"Title-Page":"neptune_Title-Page_wrrnt","Title-Page-Light":"neptune_Title-Page-Light_wrrnt","Title-Section-Primary":"neptune_Title-Section-Primary_wrrnt","Title-Section-Primary-Light":"neptune_Title-Section-Primary-Light_wrrnt","TITLE-SUBTITLE":"neptune_TITLE-SUBTITLE_wrrnt","Title-Section-Secondary":"neptune_Title-Section-Secondary_wrrnt","TITLE-MODULE":"neptune_TITLE-MODULE_wrrnt","LABEL-STANDARD":"neptune_LABEL-STANDARD_wrrnt","LABEL-STANDARD-SEMIBOLD":"neptune_LABEL-STANDARD-SEMIBOLD_wrrnt","LABEL-ATTRIBUTION":"neptune_LABEL-ATTRIBUTION_wrrnt","LABEL-ATTRIBUTION-MA":"neptune_LABEL-ATTRIBUTION-MA_wrrnt","LABEL-ATTRIBUTION-MIS":"neptune_LABEL-ATTRIBUTION-MIS_wrrnt","Label-Footnote":"neptune_Label-Footnote_wrrnt","Rating":"neptune_Rating_wrrnt","Header-Primary":"neptune_Header-Primary_wrrnt","Body-Primary":"neptune_Body-Primary_wrrnt","Header-Secondary":"neptune_Header-Secondary_wrrnt","Header-Secondary-Bold":"neptune_Header-Secondary-Bold_wrrnt","Body-Secondary":"neptune_Body-Secondary_wrrnt","TABLE-SECTION":"neptune_TABLE-SECTION_wrrnt","Header-Tertiary":"neptune_Header-Tertiary_wrrnt","Header-Tertiary-Bold":"neptune_Header-Tertiary-Bold_wrrnt","Body-Tertiary":"neptune_Body-Tertiary_wrrnt","Body-Tertiary-Med":"neptune_Body-Tertiary-Med_wrrnt","Body-Text-Prompt":"neptune_Body-Text-Prompt_wrrnt","Link-DkBlue":"neptune_Link-DkBlue_wrrnt","LINK-GOLD":"neptune_LINK-GOLD_wrrnt","LINK-GREY":"neptune_LINK-GREY_wrrnt","LABEL-SIDENAV-TITLE":"neptune_LABEL-SIDENAV-TITLE_wrrnt","MIS-BLUE":"neptune_MIS-BLUE_wrrnt","MA-BLUE":"neptune_MA-BLUE_wrrnt","MOODYS-BLUE":"neptune_MOODYS-BLUE_wrrnt","HIGHLIGHT-BLUE":"neptune_HIGHLIGHT-BLUE_wrrnt","GOLD":"neptune_GOLD_wrrnt","GREY-1":"neptune_GREY-1_wrrnt","GREY-2":"neptune_GREY-2_wrrnt","GREY-3":"neptune_GREY-3_wrrnt","GREY-4":"neptune_GREY-4_wrrnt","BLACK":"neptune_BLACK_wrrnt","RED":"neptune_RED_wrrnt","GREEN":"neptune_GREEN_wrrnt","icon_down_arrow":"neptune_icon_down_arrow_wrrnt","icon_up_arrow":"neptune_icon_up_arrow_wrrnt","icon_warning_icon":"neptune_icon_warning_icon_wrrnt","icon_select_arrows":"neptune_icon_select_arrows_wrrnt","icon_triangle_down":"neptune_icon_triangle_down_wrrnt","icon_triangle_up":"neptune_icon_triangle_up_wrrnt","icon_x_icon":"neptune_icon_x_icon_wrrnt","icon_right_arrow":"neptune_icon_right_arrow_wrrnt","MIS-BLUE-FONT":"neptune_MIS-BLUE-FONT_wrrnt","MIS-BLUE-BG":"neptune_MIS-BLUE-BG_wrrnt","MIS-BLUE-BORDER":"neptune_MIS-BLUE-BORDER_wrrnt","MA-BLUE-FONT":"neptune_MA-BLUE-FONT_wrrnt","MA-BLUE-BG":"neptune_MA-BLUE-BG_wrrnt","MA-BLUE-BORDER":"neptune_MA-BLUE-BORDER_wrrnt","MOODYS-BLUE-FONT":"neptune_MOODYS-BLUE-FONT_wrrnt","MOODYS-BLUE-BG":"neptune_MOODYS-BLUE-BG_wrrnt","MOODYS-BLUE-BORDER":"neptune_MOODYS-BLUE-BORDER_wrrnt","HIGHLIGHT-BLUE-FONT":"neptune_HIGHLIGHT-BLUE-FONT_wrrnt","HIGHLIGHT-BLUE-BG":"neptune_HIGHLIGHT-BLUE-BG_wrrnt","HIGHLIGHT-BLUE-BORDER":"neptune_HIGHLIGHT-BLUE-BORDER_wrrnt","GOLD-FONT":"neptune_GOLD-FONT_wrrnt","GOLD-BG":"neptune_GOLD-BG_wrrnt","GOLD-BORDER":"neptune_GOLD-BORDER_wrrnt","GREY-1-FONT":"neptune_GREY-1-FONT_wrrnt","GREY-1-BG":"neptune_GREY-1-BG_wrrnt","GREY-1-BORDER":"neptune_GREY-1-BORDER_wrrnt","GREY-2-FONT":"neptune_GREY-2-FONT_wrrnt","GREY-2-BG":"neptune_GREY-2-BG_wrrnt","GREY-2-BORDER":"neptune_GREY-2-BORDER_wrrnt","GREY-3-FONT":"neptune_GREY-3-FONT_wrrnt","GREY-3-BG":"neptune_GREY-3-BG_wrrnt","GREY-3-BORDER":"neptune_GREY-3-BORDER_wrrnt","GREY-4-FONT":"neptune_GREY-4-FONT_wrrnt","GREY-4-BG":"neptune_GREY-4-BG_wrrnt","GREY-4-BORDER":"neptune_GREY-4-BORDER_wrrnt","BLACK-FONT":"neptune_BLACK-FONT_wrrnt","BLACK-BG":"neptune_BLACK-BG_wrrnt","BLACK-BORDER":"neptune_BLACK-BORDER_wrrnt","RED-FONT":"neptune_RED-FONT_wrrnt","RED-BG":"neptune_RED-BG_wrrnt","RED-BORDER":"neptune_RED-BORDER_wrrnt","GREEN-FONT":"neptune_GREEN-FONT_wrrnt","GREEN-BG":"neptune_GREEN-BG_wrrnt","GREEN-BORDER":"neptune_GREEN-BORDER_wrrnt","toolTipstext":"neptune_toolTipstext_wrrnt"}
},{}],221:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _mdcClassnames = require('mdc-classnames');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable */

var styles = require('./style.less');
var cx = _mdcClassnames.setCssModule.bind(styles);

var TreeNode = function (_React$Component) {
    _inherits(TreeNode, _React$Component);

    function TreeNode(props, defaultProps) {
        _classCallCheck(this, TreeNode);

        return _possibleConstructorReturn(this, (TreeNode.__proto__ || Object.getPrototypeOf(TreeNode)).call(this, props, defaultProps));
    }

    _createClass(TreeNode, [{
        key: 'renderWithCheckBox',
        value: function renderWithCheckBox() {
            var classNames = (0, _mdcClassnames.setCssModule)('tree-node-content-checkbox', this.props.className);
            return React.createElement(
                'div',
                { className: styles[classNames] },
                React.createElement(
                    'div',
                    { className: styles['node-check-icon'] },
                    React.createElement('input', { type: 'checkbox', onChange: this.onCheckboxClick.bind(this), checked: this.props.checked })
                ),
                React.createElement(
                    'div',
                    { className: styles['node-title'], onClick: this.onCollpaseExpandClick.bind(this) },
                    React.createElement(
                        'div',
                        { className: styles['li-content-checkbox'] },
                        this.props.title
                    )
                )
            );
        }
    }, {
        key: 'renderWithoutCheckBox',
        value: function renderWithoutCheckBox() {
            var classNames = (0, _mdcClassnames.setCssModule)('tree-node-content', this.props.className);
            var iconClassName = this.props.hasChildren ? this.props.collapsed ? 'icon-expand' : 'icon-collapse' : 'icon-nochild';
            return React.createElement(
                'div',
                { className: styles[classNames], onClick: this.onCollpaseExpandClick.bind(this) },
                React.createElement(
                    'div',
                    { className: styles['node-check-icon'] },
                    React.createElement('span', { className: styles[iconClassName] })
                ),
                React.createElement(
                    'div',
                    { className: styles['node-title'], onClick: this.onCollpaseExpandClick.bind(this) },
                    React.createElement(
                        'div',
                        { className: styles['li-content'] },
                        this.props.title
                    )
                )
            );
        }
    }, {
        key: 'render',
        value: function render() {
            return this.props.checkbox ? this.renderWithCheckBox() : this.renderWithoutCheckBox();
        }
    }, {
        key: 'onCheckboxClick',
        value: function onCheckboxClick(event) {
            this.props.onNodeCheckboxClick(event);
        }
    }, {
        key: 'onCollpaseExpandClick',
        value: function onCollpaseExpandClick(event) {
            this.props.onCollpaseExpandClick(event);
        }
    }]);

    return TreeNode;
}(React.Component);

exports.default = TreeNode;

TreeNode.propTypes = {
    checkbox: React.PropTypes.bool,
    checked: React.PropTypes.bool,
    className: React.PropTypes.string,
    collapsed: React.PropTypes.bool,
    hasChildren: React.PropTypes.bool,
    id: React.PropTypes.string,
    name: React.PropTypes.string,
    onCollpaseExpandClick: React.PropTypes.func,
    onNodeCheckboxClick: React.PropTypes.func,
    title: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.object]).isRequired,
    visible: React.PropTypes.bool
};
TreeNode.defaultProps = {
    checked: false,
    visible: true
};

},{"./style.less":223,"mdc-classnames":"mdc-classnames","react":"react"}],222:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _mdcClassnames = require('mdc-classnames');

var _TreeNode = require('./TreeNode');

var _TreeNode2 = _interopRequireDefault(_TreeNode);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var styles = require('./style.less');

var Tree = function (_React$Component) {
    _inherits(Tree, _React$Component);

    function Tree(props, defaultProps) {
        _classCallCheck(this, Tree);

        var _this = _possibleConstructorReturn(this, (Tree.__proto__ || Object.getPrototypeOf(Tree)).call(this, props, defaultProps));

        _this._hasRootNode = _this.props.title;
        _this.state = { allCollapsed: true, update: false };
        var $root = { checked: _this.props.checked, children: [], id: _this.props.id, isCollapsed: !_this.props.expanded, name: _this.props.name, other: _this.props, parent: null,
            rootRequired: _this._hasRootNode, title: _this.props.title, visible: _this.props.visible };
        $root.children = _this.getTree(_this.getValidArray(_this.props.children), $root);
        _this._tree = $root;
        _this.onAllExpandCollapseClick = _this.onAllExpandCollapseClick.bind(_this);
        return _this;
    }

    _createClass(Tree, [{
        key: 'render',
        value: function render() {
            var classNames = this.props.visible ? (0, _mdcClassnames.setCssModule)('tree', this.props.className) : (0, _mdcClassnames.setCssModule)('hidden', this.props.className);
            var allCollapseExpandClassName = !this.props.showAllCollapseExpand ? 'all-coll-exp-hidden' : '';
            return React.createElement(
                'div',
                { className: styles[classNames] },
                React.createElement(
                    'div',
                    { className: styles[allCollapseExpandClassName] },
                    React.createElement(
                        'a',
                        { className: styles['expand-collapse-all'], title: this.state.allCollapsed ? 'Expand all' : 'Collapse all', onClick: this.onAllExpandCollapseClick },
                        React.createElement('span', { className: styles[this.state.allCollapsed ? 'icon-expand-all' : 'icon-collapse-all'] })
                    )
                ),
                this._tree.rootRequired ? this.getTreeWithRootNode() : this.getSubTree(this._tree.children)
            );
        }
    }, {
        key: 'getTreeWithRootNode',
        value: function getTreeWithRootNode() {
            return React.createElement(
                'ul',
                { className: styles['tree-node-root'] },
                React.createElement(
                    'li',
                    null,
                    React.createElement(_TreeNode2.default, { title: this._tree.title, checkbox: this.props.checkbox, checked: this._tree.checked, hasChildren: this._tree.children.length > 0,
                        collapsed: this._tree.isCollapsed,
                        onCollpaseExpandClick: this.nodeCollpaseExpandClick.bind(this, this._tree) //eslint-disable-line react/jsx-no-bind 
                        , onNodeCheckboxClick: this.nodeNodeCheckboxClick.bind(this, this._tree) //eslint-disable-line react/jsx-no-bind  
                    }),
                    this.getSubTree(this._tree.children)
                )
            );
        }
    }, {
        key: 'nodeCollpaseExpandClick',
        value: function nodeCollpaseExpandClick(node) {
            node.isCollapsed = !node.isCollapsed;
            this.setState({ update: true });
            if (this.props.onCollpaseExpandClick) {
                this.props.onCollpaseExpandClick(node);
            }
        }
    }, {
        key: 'nodeNodeCheckboxClick',
        value: function nodeNodeCheckboxClick(node, event) {
            node.checked = event.currentTarget.checked;
            if (this.props.inheritState) {
                this.resetCheckedFlag(node.children, event.currentTarget.checked);
                this.resetParentCheckedFlag(node, event.currentTarget.checked);
            }
            this.setState({ update: true });
            if (this.props.onNodeCheckboxClick) {
                this.props.onNodeCheckboxClick(node);
            }
        }
    }, {
        key: 'getSubTree',
        value: function getSubTree(children) {
            var _this2 = this;

            var $nodes = this.getValidArray(children).map(function (tr, index) {
                var $className = tr.parent.isCollapsed ? 'tree-node-hidden' : 'tree-node';
                if (!tr.parent.rootRequired) {
                    $className = 'tree-node-root';
                }
                if (!tr.visible) {
                    $className = 'hidden';
                }
                return React.createElement(
                    'ul',
                    { className: styles[$className], key: index },
                    React.createElement(
                        'li',
                        null,
                        React.createElement(_TreeNode2.default, { title: tr.title, checkbox: _this2.props.checkbox, checked: tr.checked,
                            hasChildren: tr.children.length > 0, collapsed: tr.isCollapsed, visible: tr.visible,
                            onCollpaseExpandClick: _this2.nodeCollpaseExpandClick.bind(_this2, tr) //eslint-disable-line react/jsx-no-bind 
                            , onNodeCheckboxClick: _this2.nodeNodeCheckboxClick.bind(_this2, tr) //eslint-disable-line react/jsx-no-bind
                        }),
                        _this2.getSubTree(tr.children)
                    )
                );
            });
            return $nodes;
        }
    }, {
        key: 'onAllExpandCollapseClick',
        value: function onAllExpandCollapseClick(event) {
            event.stopPropagation();
            this._tree.isCollapsed = !this.state.allCollapsed;
            this.resetCollpaseFlag(this._tree.children);
            this.setState({ allCollapsed: !this.state.allCollapsed });
        }
    }, {
        key: 'resetCollpaseFlag',
        value: function resetCollpaseFlag(children) {
            var _this3 = this;

            children.forEach(function (tr) {
                tr.isCollapsed = !_this3.state.allCollapsed;
                _this3.resetCollpaseFlag(tr.children);
            });
        }
    }, {
        key: 'resetParentCheckedFlag',
        value: function resetParentCheckedFlag(node, checked) {
            if (node.parent !== null) {
                var allSiblingsChecked = node.parent.children.filter(function (ch) {
                    return !ch.checked;
                }).length <= 0;
                node.parent.checked = allSiblingsChecked;
                this.resetParentCheckedFlag(node.parent, checked);
            }
        }
    }, {
        key: 'resetCheckedFlag',
        value: function resetCheckedFlag(children, checked) {
            var _this4 = this;

            children.forEach(function (tr) {
                tr.checked = checked;
                _this4.resetCheckedFlag(tr.children, checked);
            });
        }
    }, {
        key: 'getValidArray',
        value: function getValidArray(children) {
            var $children = children || [];
            return Array.isArray($children) ? $children : [$children];
        }
    }, {
        key: 'getTree',
        value: function getTree(children, parent) {
            var _this5 = this;

            return children.map(function (tr) {
                var $ch = { checked: tr.props.checked, children: [], id: tr.props.id, isCollapsed: !_this5.props.expanded, name: tr.props.name,
                    other: tr.props, parent: parent, rootRequired: true, title: tr.props.title, visible: tr.props.visible };
                $ch.children = _this5.getTree(_this5.getValidArray(tr.props.children), $ch);
                return $ch;
            });
        }
    }]);

    return Tree;
}(React.Component);

exports.default = Tree;


Tree.propTypes = {
    checkbox: React.PropTypes.bool,
    checked: React.PropTypes.bool,
    children: React.PropTypes.oneOfType([React.PropTypes.array, React.PropTypes.object]),
    className: React.PropTypes.string,
    expanded: React.PropTypes.bool,
    id: React.PropTypes.string,
    inheritState: React.PropTypes.bool,
    name: React.PropTypes.string,
    onCollpaseExpandClick: React.PropTypes.func,
    onNodeCheckboxClick: React.PropTypes.func,
    showAllCollapseExpand: React.PropTypes.bool,
    title: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.object]),
    visible: React.PropTypes.bool
};

Tree.defaultProps = {
    checkbox: false,
    checked: false,
    expanded: false,
    inheritState: true,
    showAllCollapseExpand: false,
    visible: true
};

},{"./TreeNode":221,"./style.less":223,"mdc-classnames":"mdc-classnames","react":"react"}],223:[function(require,module,exports){
module.exports = {"Title-Page":"neptune_Title-Page_vsol9","Title-Page-Light":"neptune_Title-Page-Light_vsol9","Title-Section-Primary":"neptune_Title-Section-Primary_vsol9","Title-Section-Primary-Light":"neptune_Title-Section-Primary-Light_vsol9","TITLE-SUBTITLE":"neptune_TITLE-SUBTITLE_vsol9","Title-Section-Secondary":"neptune_Title-Section-Secondary_vsol9","TITLE-MODULE":"neptune_TITLE-MODULE_vsol9","LABEL-STANDARD":"neptune_LABEL-STANDARD_vsol9","LABEL-STANDARD-SEMIBOLD":"neptune_LABEL-STANDARD-SEMIBOLD_vsol9","LABEL-ATTRIBUTION":"neptune_LABEL-ATTRIBUTION_vsol9","LABEL-ATTRIBUTION-MA":"neptune_LABEL-ATTRIBUTION-MA_vsol9","LABEL-ATTRIBUTION-MIS":"neptune_LABEL-ATTRIBUTION-MIS_vsol9","Label-Footnote":"neptune_Label-Footnote_vsol9","Rating":"neptune_Rating_vsol9","Header-Primary":"neptune_Header-Primary_vsol9","Body-Primary":"neptune_Body-Primary_vsol9","Header-Secondary":"neptune_Header-Secondary_vsol9","Header-Secondary-Bold":"neptune_Header-Secondary-Bold_vsol9","Body-Secondary":"neptune_Body-Secondary_vsol9","TABLE-SECTION":"neptune_TABLE-SECTION_vsol9","Header-Tertiary":"neptune_Header-Tertiary_vsol9","Header-Tertiary-Bold":"neptune_Header-Tertiary-Bold_vsol9","Body-Tertiary":"neptune_Body-Tertiary_vsol9","Body-Tertiary-Med":"neptune_Body-Tertiary-Med_vsol9","Body-Text-Prompt":"neptune_Body-Text-Prompt_vsol9","Link-DkBlue":"neptune_Link-DkBlue_vsol9","LINK-GOLD":"neptune_LINK-GOLD_vsol9","LINK-GREY":"neptune_LINK-GREY_vsol9","LABEL-SIDENAV-TITLE":"neptune_LABEL-SIDENAV-TITLE_vsol9","MIS-BLUE":"neptune_MIS-BLUE_vsol9","MA-BLUE":"neptune_MA-BLUE_vsol9","MOODYS-BLUE":"neptune_MOODYS-BLUE_vsol9","HIGHLIGHT-BLUE":"neptune_HIGHLIGHT-BLUE_vsol9","GOLD":"neptune_GOLD_vsol9","GREY-1":"neptune_GREY-1_vsol9","GREY-2":"neptune_GREY-2_vsol9","GREY-3":"neptune_GREY-3_vsol9","GREY-4":"neptune_GREY-4_vsol9","BLACK":"neptune_BLACK_vsol9","RED":"neptune_RED_vsol9","GREEN":"neptune_GREEN_vsol9","icon_down_arrow":"neptune_icon_down_arrow_vsol9","icon_up_arrow":"neptune_icon_up_arrow_vsol9","icon_warning_icon":"neptune_icon_warning_icon_vsol9","icon_select_arrows":"neptune_icon_select_arrows_vsol9","icon_triangle_down":"neptune_icon_triangle_down_vsol9","icon_triangle_up":"neptune_icon_triangle_up_vsol9","icon_x_icon":"neptune_icon_x_icon_vsol9","icon_right_arrow":"neptune_icon_right_arrow_vsol9","MIS-BLUE-FONT":"neptune_MIS-BLUE-FONT_vsol9","MIS-BLUE-BG":"neptune_MIS-BLUE-BG_vsol9","MIS-BLUE-BORDER":"neptune_MIS-BLUE-BORDER_vsol9","MA-BLUE-FONT":"neptune_MA-BLUE-FONT_vsol9","MA-BLUE-BG":"neptune_MA-BLUE-BG_vsol9","MA-BLUE-BORDER":"neptune_MA-BLUE-BORDER_vsol9","MOODYS-BLUE-FONT":"neptune_MOODYS-BLUE-FONT_vsol9","MOODYS-BLUE-BG":"neptune_MOODYS-BLUE-BG_vsol9","MOODYS-BLUE-BORDER":"neptune_MOODYS-BLUE-BORDER_vsol9","HIGHLIGHT-BLUE-FONT":"neptune_HIGHLIGHT-BLUE-FONT_vsol9","HIGHLIGHT-BLUE-BG":"neptune_HIGHLIGHT-BLUE-BG_vsol9","HIGHLIGHT-BLUE-BORDER":"neptune_HIGHLIGHT-BLUE-BORDER_vsol9","GOLD-FONT":"neptune_GOLD-FONT_vsol9","GOLD-BG":"neptune_GOLD-BG_vsol9","GOLD-BORDER":"neptune_GOLD-BORDER_vsol9","GREY-1-FONT":"neptune_GREY-1-FONT_vsol9","GREY-1-BG":"neptune_GREY-1-BG_vsol9","GREY-1-BORDER":"neptune_GREY-1-BORDER_vsol9","GREY-2-FONT":"neptune_GREY-2-FONT_vsol9","GREY-2-BG":"neptune_GREY-2-BG_vsol9","GREY-2-BORDER":"neptune_GREY-2-BORDER_vsol9","GREY-3-FONT":"neptune_GREY-3-FONT_vsol9","GREY-3-BG":"neptune_GREY-3-BG_vsol9","GREY-3-BORDER":"neptune_GREY-3-BORDER_vsol9","GREY-4-FONT":"neptune_GREY-4-FONT_vsol9","GREY-4-BG":"neptune_GREY-4-BG_vsol9","GREY-4-BORDER":"neptune_GREY-4-BORDER_vsol9","BLACK-FONT":"neptune_BLACK-FONT_vsol9","BLACK-BG":"neptune_BLACK-BG_vsol9","BLACK-BORDER":"neptune_BLACK-BORDER_vsol9","RED-FONT":"neptune_RED-FONT_vsol9","RED-BG":"neptune_RED-BG_vsol9","RED-BORDER":"neptune_RED-BORDER_vsol9","GREEN-FONT":"neptune_GREEN-FONT_vsol9","GREEN-BG":"neptune_GREEN-BG_vsol9","GREEN-BORDER":"neptune_GREEN-BORDER_vsol9","tree":"neptune_tree_vsol9","hidden":"neptune_hidden_vsol9","tree-node-root":"neptune_tree-node-root_vsol9","li-content-checkbox":"neptune_li-content-checkbox_vsol9","li-content":"neptune_li-content_vsol9","tree-node":"neptune_tree-node_vsol9","tree-node-hidden":"neptune_tree-node-hidden_vsol9","icon-dim":"neptune_icon-dim_vsol9","icon-expand":"neptune_icon-expand_vsol9","icon-collapse":"neptune_icon-collapse_vsol9","icon-nochild":"neptune_icon-nochild_vsol9","icon-expand-all":"neptune_icon-expand-all_vsol9","icon-collapse-all":"neptune_icon-collapse-all_vsol9","expand-collapse-all":"neptune_expand-collapse-all_vsol9","tree-node-content":"neptune_tree-node-content_vsol9","node-check-icon":"neptune_node-check-icon_vsol9","node-title":"neptune_node-title_vsol9","tree-node-content-checkbox":"neptune_tree-node-content-checkbox_vsol9","tree-node-content-hidden":"neptune_tree-node-content-hidden_vsol9","all-coll-exp-hidden":"neptune_all-coll-exp-hidden_vsol9"}
},{}],224:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _mdcClassnames = require('mdc-classnames');

var _lodash = require('lodash');

var _ = _interopRequireWildcard(_lodash);

var _index = require('../Button/index');

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var styles = require('./style.less');

var Typeahead = function (_React$Component) {
    _inherits(Typeahead, _React$Component);

    function Typeahead(props, defaultProps) {
        _classCallCheck(this, Typeahead);

        var _this = _possibleConstructorReturn(this, (Typeahead.__proto__ || Object.getPrototypeOf(Typeahead)).call(this, props, defaultProps));

        _this._keyCodes = { ArrowDown: 40, ArrowUp: 38, Enter: 13 };
        _this.resetPager();
        _this.onKeyDown = _this.onKeyDown.bind(_this);
        _this.onTextChanged = _this.onTextChanged.bind(_this);
        _this.onResultItemKeyDown = _this.onResultItemKeyDown.bind(_this);
        _this.onResultSelected = _this.onResultSelected.bind(_this);
        _this.onResultItemCheck = _this.onResultItemCheck.bind(_this);
        _this.onMultiselectAddClick = _this.onMultiselectAddClick.bind(_this);
        _this.state = { searchResults: [], selectedResults: [] };
        _this._resultSelected = false;
        return _this;
    }

    _createClass(Typeahead, [{
        key: 'componentDidUpdate',
        value: function componentDidUpdate() {
            if (this._resultList) {
                this._resultList.addEventListener('scroll', this.handleScroll.bind(this));
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var className = (0, _mdcClassnames.setCssModule)('typeahead', this.props.className);
            var inputClassName = (0, _mdcClassnames.setCssModule)('input-box');
            return React.createElement(
                'div',
                { className: styles[className] },
                React.createElement(
                    'div',
                    { className: styles['input-section'] },
                    React.createElement('input', { placeholder: this.props.placeholder, className: styles[inputClassName],
                        ref: function ref(c) {
                            _this2._searchInput = c;
                        } //eslint-disable-line react/jsx-no-bind
                        , onChange: this.onTextChanged, onKeyDown: this.onKeyDown
                    })
                ),
                this.getResults()
            );
        }
    }, {
        key: 'onMultiselectAddClick',
        value: function onMultiselectAddClick() {
            if (this.props.onSelected) {
                var selectedResultHtml = this.props.onSelected(this.state.selectedResults) || '';
                this._searchInput.value = selectedResultHtml;
            }
            this.setState({ searchResults: [], selectedResults: [] });
            this._resultSelected = true;
        }
    }, {
        key: 'onResultItemCheck',
        value: function onResultItemCheck(event) {
            var target = event.currentTarget;
            var item = this.state.searchResults[target.id];
            var selectedItems = this.state.selectedResults;
            if (target.checked) {
                selectedItems.push(item);
            } else {
                (function () {
                    var propertyNames = Object.getOwnPropertyNames(item);
                    _.remove(selectedItems, function (si) {
                        var match = true;
                        propertyNames.forEach(function (pName) {
                            match = match && si[pName] === item[pName];
                        });
                        return match;
                    });
                })();
            }
            this.setState({ selectedResults: selectedItems });
        }
    }, {
        key: 'onKeyDown',
        value: function onKeyDown(event) {
            if (!event) {
                return;
            }
            if (event.keyCode === this._keyCodes.ArrowDown && this._firstResultItem) {
                this._firstResultItem.focus();
            }
        }
    }, {
        key: 'onResultSelected',
        value: function onResultSelected(event) {
            if (event) {
                this.resultSelected(event);
            }
        }
    }, {
        key: 'onResultItemKeyDown',
        value: function onResultItemKeyDown(event) {
            if (!event) {
                return;
            }
            if (event.keyCode === this._keyCodes.Enter) {
                this.resultSelected(event);
            }
            if (event.keyCode === this._keyCodes.ArrowUp && event.currentTarget.previousSibling) {
                event.currentTarget.previousSibling.focus();
            }
            if (event.keyCode === this._keyCodes.ArrowDown && event.currentTarget.nextSibling) {
                event.currentTarget.nextSibling.focus();
            }
        }
    }, {
        key: 'resultSelected',
        value: function resultSelected(event) {
            var $selectedResult = this.state.searchResults[event.currentTarget.tabIndex];
            var $selectedResultHtml = this.props.onSelected ? this.props.onSelected($selectedResult) : null;
            this._searchInput.value = (($selectedResultHtml ? $selectedResultHtml : $selectedResult) || '').replace(/(<([^>]+)>)/ig, '');
            this.setCurrentState([]);
            this._resultSelected = true;
        }
    }, {
        key: 'onTextChanged',
        value: function onTextChanged(event) {
            var _this3 = this;

            this._resultSelected = false;
            if (!event) {
                return;
            }
            this.resetPager();
            var $searchText = event.currentTarget.value;
            if (this._timer) {
                clearTimeout(this._timer);
            }
            this._timer = setTimeout(function () {
                return _this3.executeSearch($searchText, _this3.searchCompleted.bind(_this3));
            }, this.props.delay);
        }
    }, {
        key: 'searchCompleted',
        value: function searchCompleted(results) {
            this.setCurrentState(results);
        }
    }, {
        key: 'executeSearch',
        value: function executeSearch(searchText, callbackFunction) {
            if (this._resultSelected) {
                return;
            }
            var $searchText = (searchText ? searchText : '' || '').trim();
            if ($searchText.length < this.props.charCount) {
                this.setCurrentState([]);
                this.setState({ selectedResults: [] });
                return;
            }
            if (this.props.onSearch) {
                this.props.onSearch(searchText, this._pager, callbackFunction);
            } else {
                callbackFunction(this.localSearch(searchText));
            }
        }
    }, {
        key: 'localSearch',
        value: function localSearch() /*searchText*/{
            var $results = [];
            var $searchText = (this._searchInput ? this._searchInput.value : '' || '').trim().toLowerCase();
            var $options = this.props.options ? Array.isArray(this.props.options) ? this.props.options : [this.props.options] : []; // eslint-disable-line no-nested-ternary
            $results = $options.filter(function (option) {
                return option.toLowerCase().trim().search($searchText) > -1;
            });
            if (this._pager) {
                $results = $results.slice(this._pager.pageSize * (this._pager.pageNumber - 1), this._pager.pageSize * this._pager.pageNumber);
            }
            return $results;
        }
    }, {
        key: 'getResultItem',
        value: function getResultItem(result, index) {
            var _this4 = this;

            if (index === 0) {
                return React.createElement(
                    'li',
                    { key: index, onClick: this.onResultSelected, onKeyDown: this.onResultItemKeyDown,
                        ref: function ref(c) {
                            //eslint-disable-line react/jsx-no-bind
                            _this4._firstResultItem = c;
                        }, tabIndex: index
                    },
                    this.getResult(result)
                );
            } else {
                return React.createElement(
                    'li',
                    { key: index, onClick: this.onResultSelected, onKeyDown: this.onResultItemKeyDown, tabIndex: index },
                    this.getResult(result)
                );
            }
        }
    }, {
        key: 'getMultiselectResultItem',
        value: function getMultiselectResultItem(result, index) {
            var _this5 = this;

            if (index === 0) {
                return React.createElement(
                    'li',
                    { key: index, onKeyDown: this.onResultItemKeyDown,
                        ref: function ref(c) {
                            //eslint-disable-line react/jsx-no-bind
                            _this5._firstResultItem = c;
                        }, tabIndex: index
                    },
                    React.createElement(
                        'span',
                        { className: styles['multiselect-checkbox'] },
                        React.createElement('input', { type: 'checkbox', id: _.toString(index), onChange: this.onResultItemCheck })
                    ),
                    this.getResult(result)
                );
            } else {
                return React.createElement(
                    'li',
                    { key: index, onKeyDown: this.onResultItemKeyDown, tabIndex: index },
                    React.createElement(
                        'span',
                        { className: styles['multiselect-checkbox'] },
                        React.createElement('input', { type: 'checkbox', id: _.toString(index), onChange: this.onResultItemCheck })
                    ),
                    this.getResult(result)
                );
            }
        }
    }, {
        key: 'getResults',
        value: function getResults() {
            var _this6 = this;

            var $options = this.state.searchResults;
            if ($options.length > 0) {
                var $searchResults = $options.map(function (result, index) {
                    return _this6.props.multiSelect ? _this6.getMultiselectResultItem(result, index) : _this6.getResultItem(result, index);
                });
                var uiStyles = { maxHeight: String(this.props.listHeight) + 'px' };
                var listClassName = (0, _mdcClassnames.setCssModule)('result-set');
                return React.createElement(
                    'div',
                    { className: styles['result-section'] },
                    React.createElement(
                        'ul',
                        { className: styles[listClassName], style: uiStyles,
                            ref: function ref(c) {
                                //eslint-disable-line react/jsx-no-bind
                                _this6._resultList = c;
                            }, tabIndex: $options.length + 1
                        },
                        $searchResults
                    ),
                    this.getMultiselectFooter()
                );
            } else {
                return null;
            }
        }
    }, {
        key: 'getStringAsHtml',
        value: function getStringAsHtml(result) {
            return { __html: result };
        }
    }, {
        key: 'getResult',
        value: function getResult(result) {
            var $result = result;
            if (this.props.onRender) {
                $result = this.props.onRender(result);
            }
            if (typeof $result === 'string') {
                return React.createElement('span', { dangerouslySetInnerHTML: this.getStringAsHtml($result) });
            } else {
                return React.createElement(
                    'span',
                    null,
                    $result
                );
            }
        }
    }, {
        key: 'handleScroll',
        value: function handleScroll() {
            if (this._pager) {
                if (this._resultList.clientHeight + this._resultList.scrollTop >= this._resultList.scrollHeight) {
                    this._pager.pageNumber++;
                    this.executeSearch(this._searchInput.value, this.searchOnScrollCompleted.bind(this));
                }
            }
        }
    }, {
        key: 'getMultiselectFooter',
        value: function getMultiselectFooter() {
            if (this.props.multiSelect && this.state.selectedResults.length > 0) {
                return React.createElement(
                    'div',
                    { className: styles['multiselect-footer'] },
                    React.createElement(
                        _index2.default,
                        { className: styles['multiselect-add-button'], size: 'small', onClick: this.onMultiselectAddClick },
                        this.props.multiSelectButtonText
                    )
                );
            } else {
                return null;
            }
        }
    }, {
        key: 'searchOnScrollCompleted',
        value: function searchOnScrollCompleted(results) {
            if (results) {
                this.setCurrentState(this.state.searchResults.concat(results));
            }
        }
    }, {
        key: 'setCurrentState',
        value: function setCurrentState(searchResults) {
            var $results = [];
            if (searchResults) {
                $results = Array.isArray(searchResults) ? searchResults : [searchResults];
            }
            this.setState({ searchResults: $results });
        }
    }, {
        key: 'resetPager',
        value: function resetPager() {
            this._pager = this.props.pageSize > 0 ? { pageNumber: 1, pageSize: this.props.pageSize } : null;
        }
    }]);

    return Typeahead;
}(React.Component);

exports.default = Typeahead;


Typeahead.propTypes = {
    charCount: React.PropTypes.number,
    className: React.PropTypes.string,
    delay: React.PropTypes.number,
    listHeight: React.PropTypes.number,
    multiSelect: React.PropTypes.bool,
    multiSelectButtonText: React.PropTypes.string,
    onRender: React.PropTypes.func,
    onSearch: React.PropTypes.func,
    onSelected: React.PropTypes.func,
    options: React.PropTypes.array,
    pageSize: React.PropTypes.number,
    placeholder: React.PropTypes.string
};

Typeahead.defaultProps = {
    charCount: 1,
    delay: 250,
    listHeight: 250,
    multiSelect: false,
    multiSelectButtonText: 'ADD',
    pageSize: 0,
    placeholder: 'Search'
};

},{"../Button/index":82,"./style.less":225,"lodash":"lodash","mdc-classnames":"mdc-classnames","react":"react"}],225:[function(require,module,exports){
module.exports = {"typeahead":"neptune_typeahead_2bgbl","input-section":"neptune_input-section_2bgbl","input-box":"neptune_input-box_2bgbl","result-section":"neptune_result-section_2bgbl","multiselect-footer":"neptune_multiselect-footer_2bgbl","result-set":"neptune_result-set_2bgbl","multiselect-checkbox":"neptune_multiselect-checkbox_2bgbl","multiselect-add-button":"neptune_multiselect-add-button_2bgbl"}
},{}]},{},[66])


//# sourceMappingURL=app.js.map
